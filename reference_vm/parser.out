Created by PLY version 3.0 (http://www.dabeaz.com/ply)

Grammar

Rule 1     S' -> goal
Rule 2     goal -> stmtlist
Rule 3     stmtlist -> stmtrest statement
Rule 4     stmtrest -> stmtrest statement
Rule 5     stmtrest -> epsilon
Rule 6     statement -> assign
Rule 7     statement -> expression SEP
Rule 8     assign -> varassign SEP
Rule 9     assign -> funcassign
Rule 10    varassign -> typedecl ID ASSIGN_OP expression
Rule 11    funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE
Rule 12    pushToSymTable -> epsilon
Rule 13    paramlist -> typedecl ID paramrest
Rule 14    paramlist -> epsilon
Rule 15    paramrest -> paramrest COMMA typedecl ID
Rule 16    paramrest -> epsilon
Rule 17    expression -> expression ADD_OP expression
Rule 18    expression -> expression SUBTRACT_OP expression
Rule 19    expression -> expression MULTIPLY_OP expression
Rule 20    expression -> expression DIVIDE_OP expression
Rule 21    expression -> expression MODULO_OP expression
Rule 22    expression -> expression EQ_OP expression
Rule 23    expression -> expression NE_OP expression
Rule 24    expression -> expression GT_OP expression
Rule 25    expression -> expression GE_OP expression
Rule 26    expression -> expression LT_OP expression
Rule 27    expression -> expression LE_OP expression
Rule 28    expression -> expression LOGAND_OP expression
Rule 29    expression -> expression LOGOR_OP expression
Rule 30    expression -> expression TILDE_OP expression
Rule 31    expression -> SUBTRACT_OP expression
Rule 32    expression -> LOGNOT_OP expression
Rule 33    expression -> ARRAY_LENGTH LPAREN ID RPAREN
Rule 34    expression -> INT LPAREN expression RPAREN
Rule 35    expression -> FLOAT LPAREN expression RPAREN
Rule 36    expression -> STRING LPAREN expression RPAREN
Rule 37    expression -> expression QUESTION_OP expression COLON_OP expression
Rule 38    expression -> LPAREN expression RPAREN
Rule 39    expression -> scalarvalue
Rule 40    expression -> arrayvalues
Rule 41    expression -> ID subscript
Rule 42    subscript -> LBRACK expression RBRACK
Rule 43    subscript -> epsilon
Rule 44    expression -> ID LPAREN arglist RPAREN
Rule 45    arglist -> expression argrest
Rule 46    arglist -> epsilon
Rule 47    argrest -> argrest COMMA expression
Rule 48    argrest -> epsilon
Rule 49    scalarvalue -> FLOATNUMBER
Rule 50    scalarvalue -> INTNUMBER
Rule 51    scalarvalue -> STRINGCONSTANT
Rule 52    arrayvalues -> LBRACK arrayelements RBRACK
Rule 53    arrayelements -> expression moreelements
Rule 54    arrayelements -> epsilon
Rule 55    moreelements -> COMMA expression moreelements
Rule 56    moreelements -> epsilon
Rule 57    typedecl -> INT arraydecl
Rule 58    typedecl -> FLOAT arraydecl
Rule 59    typedecl -> STRING arraydecl
Rule 60    arraydecl -> LBRACK RBRACK
Rule 61    arraydecl -> epsilon
Rule 62    epsilon -> <empty>

Terminals, with rules where they appear

ADD_OP               : 16
ARRAY_LENGTH         : 32
ASSIGN_OP            : 9 10
COLON_OP             : 36
COMMA                : 14 46 54
DIVIDE_OP            : 19
EQ_OP                : 21
FLOAT                : 34 57
FLOATNUMBER          : 48
FUNCTION             : 10
GE_OP                : 24
GT_OP                : 23
ID                   : 9 10 12 14 32 40 43
INT                  : 33 56
INTNUMBER            : 49
LBRACE               : 10
LBRACK               : 41 51 59
LE_OP                : 26
LOGAND_OP            : 27
LOGNOT_OP            : 31
LOGOR_OP             : 28
LPAREN               : 10 32 33 34 35 37 43
LT_OP                : 25
MODULO_OP            : 20
MULTIPLY_OP          : 18
NE_OP                : 22
QUESTION_OP          : 36
RBRACE               : 10
RBRACK               : 41 51 59
RETURN               : 10
RPAREN               : 10 32 33 34 35 37 43
SEP                  : 6 7 10
STRING               : 35 58
STRINGCONSTANT       : 50
SUBTRACT_OP          : 17 30
TILDE_OP             : 29
error                : 

Nonterminals, with rules where they appear

arglist              : 43
argrest              : 44 46
arraydecl            : 56 57 58
arrayelements        : 51
arrayvalues          : 39
assign               : 5
epsilon              : 4 11 13 15 42 45 47 53 55 60
expression           : 6 9 10 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31 33 34 35 36 36 36 37 41 44 46 52 54
funcassign           : 8
goal                 : 0
moreelements         : 52 54
paramlist            : 10
paramrest            : 12 14
pushToSymTable       : 10
scalarvalue          : 38
statement            : 2 3
stmtlist             : 1
stmtrest             : 2 3 10
subscript            : 40
typedecl             : 9 10 12 14
varassign            : 7

Parsing method: LALR

state 0

    (0) S' -> . goal
    (1) goal -> . stmtlist
    (2) stmtlist -> . stmtrest statement
    (3) stmtrest -> . stmtrest statement
    (4) stmtrest -> . epsilon
    (61) epsilon -> .

    SUBTRACT_OP     reduce using rule 61 (epsilon -> .)
    LOGNOT_OP       reduce using rule 61 (epsilon -> .)
    ARRAY_LENGTH    reduce using rule 61 (epsilon -> .)
    INT             reduce using rule 61 (epsilon -> .)
    FLOAT           reduce using rule 61 (epsilon -> .)
    STRING          reduce using rule 61 (epsilon -> .)
    LPAREN          reduce using rule 61 (epsilon -> .)
    ID              reduce using rule 61 (epsilon -> .)
    FLOATNUMBER     reduce using rule 61 (epsilon -> .)
    INTNUMBER       reduce using rule 61 (epsilon -> .)
    STRINGCONSTANT  reduce using rule 61 (epsilon -> .)
    LBRACK          reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 1
    stmtrest                       shift and go to state 2
    goal                           shift and go to state 3
    stmtlist                       shift and go to state 4

state 1

    (4) stmtrest -> epsilon .

    SUBTRACT_OP     reduce using rule 4 (stmtrest -> epsilon .)
    LOGNOT_OP       reduce using rule 4 (stmtrest -> epsilon .)
    ARRAY_LENGTH    reduce using rule 4 (stmtrest -> epsilon .)
    INT             reduce using rule 4 (stmtrest -> epsilon .)
    FLOAT           reduce using rule 4 (stmtrest -> epsilon .)
    STRING          reduce using rule 4 (stmtrest -> epsilon .)
    LPAREN          reduce using rule 4 (stmtrest -> epsilon .)
    ID              reduce using rule 4 (stmtrest -> epsilon .)
    FLOATNUMBER     reduce using rule 4 (stmtrest -> epsilon .)
    INTNUMBER       reduce using rule 4 (stmtrest -> epsilon .)
    STRINGCONSTANT  reduce using rule 4 (stmtrest -> epsilon .)
    LBRACK          reduce using rule 4 (stmtrest -> epsilon .)
    RETURN          reduce using rule 4 (stmtrest -> epsilon .)


state 2

    (2) stmtlist -> stmtrest . statement
    (3) stmtrest -> stmtrest . statement
    (5) statement -> . assign
    (6) statement -> . expression SEP
    (7) assign -> . varassign SEP
    (8) assign -> . funcassign
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (9) varassign -> . typedecl ID ASSIGN_OP expression
    (10) funcassign -> . typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK
    (56) typedecl -> . INT arraydecl
    (57) typedecl -> . FLOAT arraydecl
    (58) typedecl -> . STRING arraydecl

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 19
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    typedecl                       shift and go to state 21
    scalarvalue                    shift and go to state 18
    varassign                      shift and go to state 22
    statement                      shift and go to state 10
    arrayvalues                    shift and go to state 11
    expression                     shift and go to state 23
    assign                         shift and go to state 24
    funcassign                     shift and go to state 16

state 3

    (0) S' -> goal .



state 4

    (1) goal -> stmtlist .

    $end            reduce using rule 1 (goal -> stmtlist .)


state 5

    (48) scalarvalue -> FLOATNUMBER .

    ADD_OP          reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    SUBTRACT_OP     reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    MULTIPLY_OP     reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    DIVIDE_OP       reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    MODULO_OP       reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    EQ_OP           reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    NE_OP           reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    GT_OP           reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    GE_OP           reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    LT_OP           reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    LE_OP           reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    LOGAND_OP       reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    LOGOR_OP        reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    TILDE_OP        reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    QUESTION_OP     reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    SEP             reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    RPAREN          reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    COMMA           reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    RBRACK          reduce using rule 48 (scalarvalue -> FLOATNUMBER .)
    COLON_OP        reduce using rule 48 (scalarvalue -> FLOATNUMBER .)


state 6

    (50) scalarvalue -> STRINGCONSTANT .

    ADD_OP          reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    SUBTRACT_OP     reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    MULTIPLY_OP     reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    DIVIDE_OP       reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    MODULO_OP       reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    EQ_OP           reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    NE_OP           reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    GT_OP           reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    GE_OP           reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    LT_OP           reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    LE_OP           reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    LOGAND_OP       reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    LOGOR_OP        reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    TILDE_OP        reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    QUESTION_OP     reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    SEP             reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    RPAREN          reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    COMMA           reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    RBRACK          reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)
    COLON_OP        reduce using rule 50 (scalarvalue -> STRINGCONSTANT .)


state 7

    (30) expression -> SUBTRACT_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 28
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 8

    (32) expression -> ARRAY_LENGTH . LPAREN ID RPAREN

    LPAREN          shift and go to state 29


state 9

    (49) scalarvalue -> INTNUMBER .

    ADD_OP          reduce using rule 49 (scalarvalue -> INTNUMBER .)
    SUBTRACT_OP     reduce using rule 49 (scalarvalue -> INTNUMBER .)
    MULTIPLY_OP     reduce using rule 49 (scalarvalue -> INTNUMBER .)
    DIVIDE_OP       reduce using rule 49 (scalarvalue -> INTNUMBER .)
    MODULO_OP       reduce using rule 49 (scalarvalue -> INTNUMBER .)
    EQ_OP           reduce using rule 49 (scalarvalue -> INTNUMBER .)
    NE_OP           reduce using rule 49 (scalarvalue -> INTNUMBER .)
    GT_OP           reduce using rule 49 (scalarvalue -> INTNUMBER .)
    GE_OP           reduce using rule 49 (scalarvalue -> INTNUMBER .)
    LT_OP           reduce using rule 49 (scalarvalue -> INTNUMBER .)
    LE_OP           reduce using rule 49 (scalarvalue -> INTNUMBER .)
    LOGAND_OP       reduce using rule 49 (scalarvalue -> INTNUMBER .)
    LOGOR_OP        reduce using rule 49 (scalarvalue -> INTNUMBER .)
    TILDE_OP        reduce using rule 49 (scalarvalue -> INTNUMBER .)
    QUESTION_OP     reduce using rule 49 (scalarvalue -> INTNUMBER .)
    SEP             reduce using rule 49 (scalarvalue -> INTNUMBER .)
    RPAREN          reduce using rule 49 (scalarvalue -> INTNUMBER .)
    COMMA           reduce using rule 49 (scalarvalue -> INTNUMBER .)
    RBRACK          reduce using rule 49 (scalarvalue -> INTNUMBER .)
    COLON_OP        reduce using rule 49 (scalarvalue -> INTNUMBER .)


state 10

    (2) stmtlist -> stmtrest statement .
    (3) stmtrest -> stmtrest statement .

    $end            reduce using rule 2 (stmtlist -> stmtrest statement .)
    SUBTRACT_OP     reduce using rule 3 (stmtrest -> stmtrest statement .)
    LOGNOT_OP       reduce using rule 3 (stmtrest -> stmtrest statement .)
    ARRAY_LENGTH    reduce using rule 3 (stmtrest -> stmtrest statement .)
    INT             reduce using rule 3 (stmtrest -> stmtrest statement .)
    FLOAT           reduce using rule 3 (stmtrest -> stmtrest statement .)
    STRING          reduce using rule 3 (stmtrest -> stmtrest statement .)
    LPAREN          reduce using rule 3 (stmtrest -> stmtrest statement .)
    ID              reduce using rule 3 (stmtrest -> stmtrest statement .)
    FLOATNUMBER     reduce using rule 3 (stmtrest -> stmtrest statement .)
    INTNUMBER       reduce using rule 3 (stmtrest -> stmtrest statement .)
    STRINGCONSTANT  reduce using rule 3 (stmtrest -> stmtrest statement .)
    LBRACK          reduce using rule 3 (stmtrest -> stmtrest statement .)


state 11

    (39) expression -> arrayvalues .

    COLON_OP        reduce using rule 39 (expression -> arrayvalues .)
    ADD_OP          reduce using rule 39 (expression -> arrayvalues .)
    SUBTRACT_OP     reduce using rule 39 (expression -> arrayvalues .)
    MULTIPLY_OP     reduce using rule 39 (expression -> arrayvalues .)
    DIVIDE_OP       reduce using rule 39 (expression -> arrayvalues .)
    MODULO_OP       reduce using rule 39 (expression -> arrayvalues .)
    EQ_OP           reduce using rule 39 (expression -> arrayvalues .)
    NE_OP           reduce using rule 39 (expression -> arrayvalues .)
    GT_OP           reduce using rule 39 (expression -> arrayvalues .)
    GE_OP           reduce using rule 39 (expression -> arrayvalues .)
    LT_OP           reduce using rule 39 (expression -> arrayvalues .)
    LE_OP           reduce using rule 39 (expression -> arrayvalues .)
    LOGAND_OP       reduce using rule 39 (expression -> arrayvalues .)
    LOGOR_OP        reduce using rule 39 (expression -> arrayvalues .)
    TILDE_OP        reduce using rule 39 (expression -> arrayvalues .)
    QUESTION_OP     reduce using rule 39 (expression -> arrayvalues .)
    COMMA           reduce using rule 39 (expression -> arrayvalues .)
    RPAREN          reduce using rule 39 (expression -> arrayvalues .)
    SEP             reduce using rule 39 (expression -> arrayvalues .)
    RBRACK          reduce using rule 39 (expression -> arrayvalues .)


state 12

    (33) expression -> INT . LPAREN expression RPAREN
    (56) typedecl -> INT . arraydecl
    (59) arraydecl -> . LBRACK RBRACK
    (60) arraydecl -> . epsilon
    (61) epsilon -> .

    LPAREN          shift and go to state 32
    LBRACK          shift and go to state 31
    ID              reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 30
    arraydecl                      shift and go to state 33

state 13

    (35) expression -> STRING . LPAREN expression RPAREN
    (58) typedecl -> STRING . arraydecl
    (59) arraydecl -> . LBRACK RBRACK
    (60) arraydecl -> . epsilon
    (61) epsilon -> .

    LPAREN          shift and go to state 34
    LBRACK          shift and go to state 31
    ID              reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 30
    arraydecl                      shift and go to state 35

state 14

    (37) expression -> LPAREN . expression RPAREN
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 36
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 15

    (40) expression -> ID . subscript
    (43) expression -> ID . LPAREN arglist RPAREN
    (41) subscript -> . LBRACK expression RBRACK
    (42) subscript -> . epsilon
    (61) epsilon -> .

    LPAREN          shift and go to state 39
    LBRACK          shift and go to state 38
    SEP             reduce using rule 61 (epsilon -> .)
    ADD_OP          reduce using rule 61 (epsilon -> .)
    SUBTRACT_OP     reduce using rule 61 (epsilon -> .)
    MULTIPLY_OP     reduce using rule 61 (epsilon -> .)
    DIVIDE_OP       reduce using rule 61 (epsilon -> .)
    MODULO_OP       reduce using rule 61 (epsilon -> .)
    EQ_OP           reduce using rule 61 (epsilon -> .)
    NE_OP           reduce using rule 61 (epsilon -> .)
    GT_OP           reduce using rule 61 (epsilon -> .)
    GE_OP           reduce using rule 61 (epsilon -> .)
    LT_OP           reduce using rule 61 (epsilon -> .)
    LE_OP           reduce using rule 61 (epsilon -> .)
    LOGAND_OP       reduce using rule 61 (epsilon -> .)
    LOGOR_OP        reduce using rule 61 (epsilon -> .)
    TILDE_OP        reduce using rule 61 (epsilon -> .)
    QUESTION_OP     reduce using rule 61 (epsilon -> .)
    RPAREN          reduce using rule 61 (epsilon -> .)
    COMMA           reduce using rule 61 (epsilon -> .)
    RBRACK          reduce using rule 61 (epsilon -> .)
    COLON_OP        reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 37
    subscript                      shift and go to state 40

state 16

    (8) assign -> funcassign .

    RETURN          reduce using rule 8 (assign -> funcassign .)
    SUBTRACT_OP     reduce using rule 8 (assign -> funcassign .)
    LOGNOT_OP       reduce using rule 8 (assign -> funcassign .)
    ARRAY_LENGTH    reduce using rule 8 (assign -> funcassign .)
    INT             reduce using rule 8 (assign -> funcassign .)
    FLOAT           reduce using rule 8 (assign -> funcassign .)
    STRING          reduce using rule 8 (assign -> funcassign .)
    LPAREN          reduce using rule 8 (assign -> funcassign .)
    ID              reduce using rule 8 (assign -> funcassign .)
    FLOATNUMBER     reduce using rule 8 (assign -> funcassign .)
    INTNUMBER       reduce using rule 8 (assign -> funcassign .)
    STRINGCONSTANT  reduce using rule 8 (assign -> funcassign .)
    LBRACK          reduce using rule 8 (assign -> funcassign .)
    $end            reduce using rule 8 (assign -> funcassign .)


state 17

    (31) expression -> LOGNOT_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 41
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 18

    (38) expression -> scalarvalue .

    COLON_OP        reduce using rule 38 (expression -> scalarvalue .)
    ADD_OP          reduce using rule 38 (expression -> scalarvalue .)
    SUBTRACT_OP     reduce using rule 38 (expression -> scalarvalue .)
    MULTIPLY_OP     reduce using rule 38 (expression -> scalarvalue .)
    DIVIDE_OP       reduce using rule 38 (expression -> scalarvalue .)
    MODULO_OP       reduce using rule 38 (expression -> scalarvalue .)
    EQ_OP           reduce using rule 38 (expression -> scalarvalue .)
    NE_OP           reduce using rule 38 (expression -> scalarvalue .)
    GT_OP           reduce using rule 38 (expression -> scalarvalue .)
    GE_OP           reduce using rule 38 (expression -> scalarvalue .)
    LT_OP           reduce using rule 38 (expression -> scalarvalue .)
    LE_OP           reduce using rule 38 (expression -> scalarvalue .)
    LOGAND_OP       reduce using rule 38 (expression -> scalarvalue .)
    LOGOR_OP        reduce using rule 38 (expression -> scalarvalue .)
    TILDE_OP        reduce using rule 38 (expression -> scalarvalue .)
    QUESTION_OP     reduce using rule 38 (expression -> scalarvalue .)
    COMMA           reduce using rule 38 (expression -> scalarvalue .)
    RPAREN          reduce using rule 38 (expression -> scalarvalue .)
    SEP             reduce using rule 38 (expression -> scalarvalue .)
    RBRACK          reduce using rule 38 (expression -> scalarvalue .)


state 19

    (34) expression -> FLOAT . LPAREN expression RPAREN
    (57) typedecl -> FLOAT . arraydecl
    (59) arraydecl -> . LBRACK RBRACK
    (60) arraydecl -> . epsilon
    (61) epsilon -> .

    LPAREN          shift and go to state 42
    LBRACK          shift and go to state 31
    ID              reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 30
    arraydecl                      shift and go to state 43

state 20

    (51) arrayvalues -> LBRACK . arrayelements RBRACK
    (52) arrayelements -> . expression moreelements
    (53) arrayelements -> . epsilon
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (61) epsilon -> .
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    RBRACK          reduce using rule 61 (epsilon -> .)
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    scalarvalue                    shift and go to state 18
    arrayelements                  shift and go to state 45
    epsilon                        shift and go to state 44
    arrayvalues                    shift and go to state 11
    expression                     shift and go to state 46

state 21

    (9) varassign -> typedecl . ID ASSIGN_OP expression
    (10) funcassign -> typedecl . ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE

    ID              shift and go to state 47


state 22

    (7) assign -> varassign . SEP

    SEP             shift and go to state 48


state 23

    (6) statement -> expression . SEP
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    SEP             shift and go to state 53
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 24

    (5) statement -> assign .

    RETURN          reduce using rule 5 (statement -> assign .)
    SUBTRACT_OP     reduce using rule 5 (statement -> assign .)
    LOGNOT_OP       reduce using rule 5 (statement -> assign .)
    ARRAY_LENGTH    reduce using rule 5 (statement -> assign .)
    INT             reduce using rule 5 (statement -> assign .)
    FLOAT           reduce using rule 5 (statement -> assign .)
    STRING          reduce using rule 5 (statement -> assign .)
    LPAREN          reduce using rule 5 (statement -> assign .)
    ID              reduce using rule 5 (statement -> assign .)
    FLOATNUMBER     reduce using rule 5 (statement -> assign .)
    INTNUMBER       reduce using rule 5 (statement -> assign .)
    STRINGCONSTANT  reduce using rule 5 (statement -> assign .)
    LBRACK          reduce using rule 5 (statement -> assign .)
    $end            reduce using rule 5 (statement -> assign .)


state 25

    (35) expression -> STRING . LPAREN expression RPAREN

    LPAREN          shift and go to state 34


state 26

    (34) expression -> FLOAT . LPAREN expression RPAREN

    LPAREN          shift and go to state 42


state 27

    (33) expression -> INT . LPAREN expression RPAREN

    LPAREN          shift and go to state 32


state 28

    (30) expression -> SUBTRACT_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    ADD_OP          reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    SUBTRACT_OP     reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    MULTIPLY_OP     reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    DIVIDE_OP       reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    MODULO_OP       reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    EQ_OP           reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    NE_OP           reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    GT_OP           reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    GE_OP           reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    LT_OP           reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    LE_OP           reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    LOGAND_OP       reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    LOGOR_OP        reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    TILDE_OP        reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    QUESTION_OP     reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    COMMA           reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    RPAREN          reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    SEP             reduce using rule 30 (expression -> SUBTRACT_OP expression .)
    RBRACK          reduce using rule 30 (expression -> SUBTRACT_OP expression .)

  ! ADD_OP          [ shift and go to state 59 ]
  ! SUBTRACT_OP     [ shift and go to state 55 ]
  ! MULTIPLY_OP     [ shift and go to state 62 ]
  ! DIVIDE_OP       [ shift and go to state 63 ]
  ! MODULO_OP       [ shift and go to state 58 ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 29

    (32) expression -> ARRAY_LENGTH LPAREN . ID RPAREN

    ID              shift and go to state 65


state 30

    (60) arraydecl -> epsilon .

    ID              reduce using rule 60 (arraydecl -> epsilon .)


state 31

    (59) arraydecl -> LBRACK . RBRACK

    RBRACK          shift and go to state 66


state 32

    (33) expression -> INT LPAREN . expression RPAREN
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 67
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 33

    (56) typedecl -> INT arraydecl .

    ID              reduce using rule 56 (typedecl -> INT arraydecl .)


state 34

    (35) expression -> STRING LPAREN . expression RPAREN
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 68
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 35

    (58) typedecl -> STRING arraydecl .

    ID              reduce using rule 58 (typedecl -> STRING arraydecl .)


state 36

    (37) expression -> LPAREN expression . RPAREN
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    RPAREN          shift and go to state 69
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 37

    (42) subscript -> epsilon .

    SEP             reduce using rule 42 (subscript -> epsilon .)
    ADD_OP          reduce using rule 42 (subscript -> epsilon .)
    SUBTRACT_OP     reduce using rule 42 (subscript -> epsilon .)
    MULTIPLY_OP     reduce using rule 42 (subscript -> epsilon .)
    DIVIDE_OP       reduce using rule 42 (subscript -> epsilon .)
    MODULO_OP       reduce using rule 42 (subscript -> epsilon .)
    EQ_OP           reduce using rule 42 (subscript -> epsilon .)
    NE_OP           reduce using rule 42 (subscript -> epsilon .)
    GT_OP           reduce using rule 42 (subscript -> epsilon .)
    GE_OP           reduce using rule 42 (subscript -> epsilon .)
    LT_OP           reduce using rule 42 (subscript -> epsilon .)
    LE_OP           reduce using rule 42 (subscript -> epsilon .)
    LOGAND_OP       reduce using rule 42 (subscript -> epsilon .)
    LOGOR_OP        reduce using rule 42 (subscript -> epsilon .)
    TILDE_OP        reduce using rule 42 (subscript -> epsilon .)
    QUESTION_OP     reduce using rule 42 (subscript -> epsilon .)
    RPAREN          reduce using rule 42 (subscript -> epsilon .)
    COMMA           reduce using rule 42 (subscript -> epsilon .)
    RBRACK          reduce using rule 42 (subscript -> epsilon .)
    COLON_OP        reduce using rule 42 (subscript -> epsilon .)


state 38

    (41) subscript -> LBRACK . expression RBRACK
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 70
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 39

    (43) expression -> ID LPAREN . arglist RPAREN
    (44) arglist -> . expression argrest
    (45) arglist -> . epsilon
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (61) epsilon -> .
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    RPAREN          reduce using rule 61 (epsilon -> .)
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    scalarvalue                    shift and go to state 18
    epsilon                        shift and go to state 72
    arrayvalues                    shift and go to state 11
    arglist                        shift and go to state 71
    expression                     shift and go to state 73

state 40

    (40) expression -> ID subscript .

    COLON_OP        reduce using rule 40 (expression -> ID subscript .)
    ADD_OP          reduce using rule 40 (expression -> ID subscript .)
    SUBTRACT_OP     reduce using rule 40 (expression -> ID subscript .)
    MULTIPLY_OP     reduce using rule 40 (expression -> ID subscript .)
    DIVIDE_OP       reduce using rule 40 (expression -> ID subscript .)
    MODULO_OP       reduce using rule 40 (expression -> ID subscript .)
    EQ_OP           reduce using rule 40 (expression -> ID subscript .)
    NE_OP           reduce using rule 40 (expression -> ID subscript .)
    GT_OP           reduce using rule 40 (expression -> ID subscript .)
    GE_OP           reduce using rule 40 (expression -> ID subscript .)
    LT_OP           reduce using rule 40 (expression -> ID subscript .)
    LE_OP           reduce using rule 40 (expression -> ID subscript .)
    LOGAND_OP       reduce using rule 40 (expression -> ID subscript .)
    LOGOR_OP        reduce using rule 40 (expression -> ID subscript .)
    TILDE_OP        reduce using rule 40 (expression -> ID subscript .)
    QUESTION_OP     reduce using rule 40 (expression -> ID subscript .)
    COMMA           reduce using rule 40 (expression -> ID subscript .)
    RPAREN          reduce using rule 40 (expression -> ID subscript .)
    SEP             reduce using rule 40 (expression -> ID subscript .)
    RBRACK          reduce using rule 40 (expression -> ID subscript .)


state 41

    (31) expression -> LOGNOT_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 31 (expression -> LOGNOT_OP expression .)
    ADD_OP          reduce using rule 31 (expression -> LOGNOT_OP expression .)
    SUBTRACT_OP     reduce using rule 31 (expression -> LOGNOT_OP expression .)
    MULTIPLY_OP     reduce using rule 31 (expression -> LOGNOT_OP expression .)
    DIVIDE_OP       reduce using rule 31 (expression -> LOGNOT_OP expression .)
    MODULO_OP       reduce using rule 31 (expression -> LOGNOT_OP expression .)
    EQ_OP           reduce using rule 31 (expression -> LOGNOT_OP expression .)
    NE_OP           reduce using rule 31 (expression -> LOGNOT_OP expression .)
    GT_OP           reduce using rule 31 (expression -> LOGNOT_OP expression .)
    GE_OP           reduce using rule 31 (expression -> LOGNOT_OP expression .)
    LT_OP           reduce using rule 31 (expression -> LOGNOT_OP expression .)
    LE_OP           reduce using rule 31 (expression -> LOGNOT_OP expression .)
    LOGAND_OP       reduce using rule 31 (expression -> LOGNOT_OP expression .)
    LOGOR_OP        reduce using rule 31 (expression -> LOGNOT_OP expression .)
    TILDE_OP        reduce using rule 31 (expression -> LOGNOT_OP expression .)
    QUESTION_OP     reduce using rule 31 (expression -> LOGNOT_OP expression .)
    COMMA           reduce using rule 31 (expression -> LOGNOT_OP expression .)
    RPAREN          reduce using rule 31 (expression -> LOGNOT_OP expression .)
    SEP             reduce using rule 31 (expression -> LOGNOT_OP expression .)
    RBRACK          reduce using rule 31 (expression -> LOGNOT_OP expression .)

  ! ADD_OP          [ shift and go to state 59 ]
  ! SUBTRACT_OP     [ shift and go to state 55 ]
  ! MULTIPLY_OP     [ shift and go to state 62 ]
  ! DIVIDE_OP       [ shift and go to state 63 ]
  ! MODULO_OP       [ shift and go to state 58 ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 42

    (34) expression -> FLOAT LPAREN . expression RPAREN
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 74
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 43

    (57) typedecl -> FLOAT arraydecl .

    ID              reduce using rule 57 (typedecl -> FLOAT arraydecl .)


state 44

    (53) arrayelements -> epsilon .

    RBRACK          reduce using rule 53 (arrayelements -> epsilon .)


state 45

    (51) arrayvalues -> LBRACK arrayelements . RBRACK

    RBRACK          shift and go to state 75


state 46

    (52) arrayelements -> expression . moreelements
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression
    (54) moreelements -> . COMMA expression moreelements
    (55) moreelements -> . epsilon
    (61) epsilon -> .

    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61
    COMMA           shift and go to state 78
    RBRACK          reduce using rule 61 (epsilon -> .)

    moreelements                   shift and go to state 76
    epsilon                        shift and go to state 77

state 47

    (9) varassign -> typedecl ID . ASSIGN_OP expression
    (10) funcassign -> typedecl ID . ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE

    ASSIGN_OP       shift and go to state 79


state 48

    (7) assign -> varassign SEP .

    RETURN          reduce using rule 7 (assign -> varassign SEP .)
    SUBTRACT_OP     reduce using rule 7 (assign -> varassign SEP .)
    LOGNOT_OP       reduce using rule 7 (assign -> varassign SEP .)
    ARRAY_LENGTH    reduce using rule 7 (assign -> varassign SEP .)
    INT             reduce using rule 7 (assign -> varassign SEP .)
    FLOAT           reduce using rule 7 (assign -> varassign SEP .)
    STRING          reduce using rule 7 (assign -> varassign SEP .)
    LPAREN          reduce using rule 7 (assign -> varassign SEP .)
    ID              reduce using rule 7 (assign -> varassign SEP .)
    FLOATNUMBER     reduce using rule 7 (assign -> varassign SEP .)
    INTNUMBER       reduce using rule 7 (assign -> varassign SEP .)
    STRINGCONSTANT  reduce using rule 7 (assign -> varassign SEP .)
    LBRACK          reduce using rule 7 (assign -> varassign SEP .)
    $end            reduce using rule 7 (assign -> varassign SEP .)


state 49

    (22) expression -> expression NE_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 80
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 50

    (23) expression -> expression GT_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 81
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 51

    (28) expression -> expression LOGOR_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 82
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 52

    (29) expression -> expression TILDE_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 83
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 53

    (6) statement -> expression SEP .

    RETURN          reduce using rule 6 (statement -> expression SEP .)
    SUBTRACT_OP     reduce using rule 6 (statement -> expression SEP .)
    LOGNOT_OP       reduce using rule 6 (statement -> expression SEP .)
    ARRAY_LENGTH    reduce using rule 6 (statement -> expression SEP .)
    INT             reduce using rule 6 (statement -> expression SEP .)
    FLOAT           reduce using rule 6 (statement -> expression SEP .)
    STRING          reduce using rule 6 (statement -> expression SEP .)
    LPAREN          reduce using rule 6 (statement -> expression SEP .)
    ID              reduce using rule 6 (statement -> expression SEP .)
    FLOATNUMBER     reduce using rule 6 (statement -> expression SEP .)
    INTNUMBER       reduce using rule 6 (statement -> expression SEP .)
    STRINGCONSTANT  reduce using rule 6 (statement -> expression SEP .)
    LBRACK          reduce using rule 6 (statement -> expression SEP .)
    $end            reduce using rule 6 (statement -> expression SEP .)


state 54

    (27) expression -> expression LOGAND_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 84
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 55

    (17) expression -> expression SUBTRACT_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 85
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 56

    (25) expression -> expression LT_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 86
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 57

    (24) expression -> expression GE_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 87
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 58

    (20) expression -> expression MODULO_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 88
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 59

    (16) expression -> expression ADD_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 89
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 60

    (26) expression -> expression LE_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 90
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 61

    (36) expression -> expression QUESTION_OP . expression COLON_OP expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 91
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 62

    (18) expression -> expression MULTIPLY_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 92
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 63

    (19) expression -> expression DIVIDE_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 93
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 64

    (21) expression -> expression EQ_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 94
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 65

    (32) expression -> ARRAY_LENGTH LPAREN ID . RPAREN

    RPAREN          shift and go to state 95


state 66

    (59) arraydecl -> LBRACK RBRACK .

    ID              reduce using rule 59 (arraydecl -> LBRACK RBRACK .)


state 67

    (33) expression -> INT LPAREN expression . RPAREN
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    RPAREN          shift and go to state 96
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 68

    (35) expression -> STRING LPAREN expression . RPAREN
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    RPAREN          shift and go to state 97
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 69

    (37) expression -> LPAREN expression RPAREN .

    COLON_OP        reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    ADD_OP          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    SUBTRACT_OP     reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MULTIPLY_OP     reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    DIVIDE_OP       reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    MODULO_OP       reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    EQ_OP           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    NE_OP           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    GT_OP           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    GE_OP           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LT_OP           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LE_OP           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LOGAND_OP       reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    LOGOR_OP        reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    TILDE_OP        reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    QUESTION_OP     reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    SEP             reduce using rule 37 (expression -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 37 (expression -> LPAREN expression RPAREN .)


state 70

    (41) subscript -> LBRACK expression . RBRACK
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    RBRACK          shift and go to state 98
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 71

    (43) expression -> ID LPAREN arglist . RPAREN

    RPAREN          shift and go to state 99


state 72

    (45) arglist -> epsilon .

    RPAREN          reduce using rule 45 (arglist -> epsilon .)


state 73

    (44) arglist -> expression . argrest
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression
    (46) argrest -> . argrest COMMA expression
    (47) argrest -> . epsilon
    (61) epsilon -> .

    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61
    COMMA           reduce using rule 61 (epsilon -> .)
    RPAREN          reduce using rule 61 (epsilon -> .)

    argrest                        shift and go to state 100
    epsilon                        shift and go to state 101

state 74

    (34) expression -> FLOAT LPAREN expression . RPAREN
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    RPAREN          shift and go to state 102
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 75

    (51) arrayvalues -> LBRACK arrayelements RBRACK .

    ADD_OP          reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    SUBTRACT_OP     reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    MULTIPLY_OP     reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    DIVIDE_OP       reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    MODULO_OP       reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    EQ_OP           reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    NE_OP           reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    GT_OP           reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    GE_OP           reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    LT_OP           reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    LE_OP           reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    LOGAND_OP       reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    LOGOR_OP        reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    TILDE_OP        reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    QUESTION_OP     reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    SEP             reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    RPAREN          reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    COMMA           reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    RBRACK          reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)
    COLON_OP        reduce using rule 51 (arrayvalues -> LBRACK arrayelements RBRACK .)


state 76

    (52) arrayelements -> expression moreelements .

    RBRACK          reduce using rule 52 (arrayelements -> expression moreelements .)


state 77

    (55) moreelements -> epsilon .

    RBRACK          reduce using rule 55 (moreelements -> epsilon .)


state 78

    (54) moreelements -> COMMA . expression moreelements
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    scalarvalue                    shift and go to state 18
    arrayvalues                    shift and go to state 11
    expression                     shift and go to state 103

state 79

    (9) varassign -> typedecl ID ASSIGN_OP . expression
    (10) funcassign -> typedecl ID ASSIGN_OP . FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    FUNCTION        shift and go to state 104
    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    scalarvalue                    shift and go to state 18
    arrayvalues                    shift and go to state 11
    expression                     shift and go to state 105

state 80

    (22) expression -> expression NE_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 22 (expression -> expression NE_OP expression .)
    EQ_OP           reduce using rule 22 (expression -> expression NE_OP expression .)
    NE_OP           reduce using rule 22 (expression -> expression NE_OP expression .)
    GT_OP           reduce using rule 22 (expression -> expression NE_OP expression .)
    GE_OP           reduce using rule 22 (expression -> expression NE_OP expression .)
    LT_OP           reduce using rule 22 (expression -> expression NE_OP expression .)
    LE_OP           reduce using rule 22 (expression -> expression NE_OP expression .)
    LOGAND_OP       reduce using rule 22 (expression -> expression NE_OP expression .)
    LOGOR_OP        reduce using rule 22 (expression -> expression NE_OP expression .)
    TILDE_OP        reduce using rule 22 (expression -> expression NE_OP expression .)
    QUESTION_OP     reduce using rule 22 (expression -> expression NE_OP expression .)
    COMMA           reduce using rule 22 (expression -> expression NE_OP expression .)
    RPAREN          reduce using rule 22 (expression -> expression NE_OP expression .)
    SEP             reduce using rule 22 (expression -> expression NE_OP expression .)
    RBRACK          reduce using rule 22 (expression -> expression NE_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58

  ! ADD_OP          [ reduce using rule 22 (expression -> expression NE_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 22 (expression -> expression NE_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 22 (expression -> expression NE_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 22 (expression -> expression NE_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 22 (expression -> expression NE_OP expression .) ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 81

    (23) expression -> expression GT_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 23 (expression -> expression GT_OP expression .)
    EQ_OP           reduce using rule 23 (expression -> expression GT_OP expression .)
    NE_OP           reduce using rule 23 (expression -> expression GT_OP expression .)
    GT_OP           reduce using rule 23 (expression -> expression GT_OP expression .)
    GE_OP           reduce using rule 23 (expression -> expression GT_OP expression .)
    LT_OP           reduce using rule 23 (expression -> expression GT_OP expression .)
    LE_OP           reduce using rule 23 (expression -> expression GT_OP expression .)
    LOGAND_OP       reduce using rule 23 (expression -> expression GT_OP expression .)
    LOGOR_OP        reduce using rule 23 (expression -> expression GT_OP expression .)
    TILDE_OP        reduce using rule 23 (expression -> expression GT_OP expression .)
    QUESTION_OP     reduce using rule 23 (expression -> expression GT_OP expression .)
    COMMA           reduce using rule 23 (expression -> expression GT_OP expression .)
    RPAREN          reduce using rule 23 (expression -> expression GT_OP expression .)
    SEP             reduce using rule 23 (expression -> expression GT_OP expression .)
    RBRACK          reduce using rule 23 (expression -> expression GT_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58

  ! ADD_OP          [ reduce using rule 23 (expression -> expression GT_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 23 (expression -> expression GT_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 23 (expression -> expression GT_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 23 (expression -> expression GT_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 23 (expression -> expression GT_OP expression .) ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 82

    (28) expression -> expression LOGOR_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 28 (expression -> expression LOGOR_OP expression .)
    LOGOR_OP        reduce using rule 28 (expression -> expression LOGOR_OP expression .)
    TILDE_OP        reduce using rule 28 (expression -> expression LOGOR_OP expression .)
    QUESTION_OP     reduce using rule 28 (expression -> expression LOGOR_OP expression .)
    COMMA           reduce using rule 28 (expression -> expression LOGOR_OP expression .)
    RPAREN          reduce using rule 28 (expression -> expression LOGOR_OP expression .)
    SEP             reduce using rule 28 (expression -> expression LOGOR_OP expression .)
    RBRACK          reduce using rule 28 (expression -> expression LOGOR_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54

  ! ADD_OP          [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! EQ_OP           [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! NE_OP           [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! GT_OP           [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! GE_OP           [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! LT_OP           [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! LE_OP           [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! LOGAND_OP       [ reduce using rule 28 (expression -> expression LOGOR_OP expression .) ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 83

    (29) expression -> expression TILDE_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 29 (expression -> expression TILDE_OP expression .)
    TILDE_OP        reduce using rule 29 (expression -> expression TILDE_OP expression .)
    COMMA           reduce using rule 29 (expression -> expression TILDE_OP expression .)
    RPAREN          reduce using rule 29 (expression -> expression TILDE_OP expression .)
    SEP             reduce using rule 29 (expression -> expression TILDE_OP expression .)
    RBRACK          reduce using rule 29 (expression -> expression TILDE_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    QUESTION_OP     shift and go to state 61

  ! ADD_OP          [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! EQ_OP           [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! NE_OP           [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! GT_OP           [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! GE_OP           [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! LT_OP           [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! LE_OP           [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! LOGAND_OP       [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! LOGOR_OP        [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! QUESTION_OP     [ reduce using rule 29 (expression -> expression TILDE_OP expression .) ]
  ! TILDE_OP        [ shift and go to state 52 ]


state 84

    (27) expression -> expression LOGAND_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    LOGAND_OP       reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    LOGOR_OP        reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    TILDE_OP        reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    QUESTION_OP     reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    COMMA           reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    RPAREN          reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    SEP             reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    RBRACK          reduce using rule 27 (expression -> expression LOGAND_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60

  ! ADD_OP          [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! EQ_OP           [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! NE_OP           [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! GT_OP           [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! GE_OP           [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! LT_OP           [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! LE_OP           [ reduce using rule 27 (expression -> expression LOGAND_OP expression .) ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 85

    (17) expression -> expression SUBTRACT_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    ADD_OP          reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    SUBTRACT_OP     reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    EQ_OP           reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    NE_OP           reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    GT_OP           reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    GE_OP           reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    LT_OP           reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    LE_OP           reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    LOGAND_OP       reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    LOGOR_OP        reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    TILDE_OP        reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    QUESTION_OP     reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    COMMA           reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    RPAREN          reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    SEP             reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    RBRACK          reduce using rule 17 (expression -> expression SUBTRACT_OP expression .)
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58

  ! MULTIPLY_OP     [ reduce using rule 17 (expression -> expression SUBTRACT_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 17 (expression -> expression SUBTRACT_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 17 (expression -> expression SUBTRACT_OP expression .) ]
  ! ADD_OP          [ shift and go to state 59 ]
  ! SUBTRACT_OP     [ shift and go to state 55 ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 86

    (25) expression -> expression LT_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 25 (expression -> expression LT_OP expression .)
    EQ_OP           reduce using rule 25 (expression -> expression LT_OP expression .)
    NE_OP           reduce using rule 25 (expression -> expression LT_OP expression .)
    GT_OP           reduce using rule 25 (expression -> expression LT_OP expression .)
    GE_OP           reduce using rule 25 (expression -> expression LT_OP expression .)
    LT_OP           reduce using rule 25 (expression -> expression LT_OP expression .)
    LE_OP           reduce using rule 25 (expression -> expression LT_OP expression .)
    LOGAND_OP       reduce using rule 25 (expression -> expression LT_OP expression .)
    LOGOR_OP        reduce using rule 25 (expression -> expression LT_OP expression .)
    TILDE_OP        reduce using rule 25 (expression -> expression LT_OP expression .)
    QUESTION_OP     reduce using rule 25 (expression -> expression LT_OP expression .)
    COMMA           reduce using rule 25 (expression -> expression LT_OP expression .)
    RPAREN          reduce using rule 25 (expression -> expression LT_OP expression .)
    SEP             reduce using rule 25 (expression -> expression LT_OP expression .)
    RBRACK          reduce using rule 25 (expression -> expression LT_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58

  ! ADD_OP          [ reduce using rule 25 (expression -> expression LT_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 25 (expression -> expression LT_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 25 (expression -> expression LT_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 25 (expression -> expression LT_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 25 (expression -> expression LT_OP expression .) ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 87

    (24) expression -> expression GE_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 24 (expression -> expression GE_OP expression .)
    EQ_OP           reduce using rule 24 (expression -> expression GE_OP expression .)
    NE_OP           reduce using rule 24 (expression -> expression GE_OP expression .)
    GT_OP           reduce using rule 24 (expression -> expression GE_OP expression .)
    GE_OP           reduce using rule 24 (expression -> expression GE_OP expression .)
    LT_OP           reduce using rule 24 (expression -> expression GE_OP expression .)
    LE_OP           reduce using rule 24 (expression -> expression GE_OP expression .)
    LOGAND_OP       reduce using rule 24 (expression -> expression GE_OP expression .)
    LOGOR_OP        reduce using rule 24 (expression -> expression GE_OP expression .)
    TILDE_OP        reduce using rule 24 (expression -> expression GE_OP expression .)
    QUESTION_OP     reduce using rule 24 (expression -> expression GE_OP expression .)
    COMMA           reduce using rule 24 (expression -> expression GE_OP expression .)
    RPAREN          reduce using rule 24 (expression -> expression GE_OP expression .)
    SEP             reduce using rule 24 (expression -> expression GE_OP expression .)
    RBRACK          reduce using rule 24 (expression -> expression GE_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58

  ! ADD_OP          [ reduce using rule 24 (expression -> expression GE_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 24 (expression -> expression GE_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 24 (expression -> expression GE_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 24 (expression -> expression GE_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 24 (expression -> expression GE_OP expression .) ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 88

    (20) expression -> expression MODULO_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 20 (expression -> expression MODULO_OP expression .)
    ADD_OP          reduce using rule 20 (expression -> expression MODULO_OP expression .)
    SUBTRACT_OP     reduce using rule 20 (expression -> expression MODULO_OP expression .)
    MULTIPLY_OP     reduce using rule 20 (expression -> expression MODULO_OP expression .)
    DIVIDE_OP       reduce using rule 20 (expression -> expression MODULO_OP expression .)
    MODULO_OP       reduce using rule 20 (expression -> expression MODULO_OP expression .)
    EQ_OP           reduce using rule 20 (expression -> expression MODULO_OP expression .)
    NE_OP           reduce using rule 20 (expression -> expression MODULO_OP expression .)
    GT_OP           reduce using rule 20 (expression -> expression MODULO_OP expression .)
    GE_OP           reduce using rule 20 (expression -> expression MODULO_OP expression .)
    LT_OP           reduce using rule 20 (expression -> expression MODULO_OP expression .)
    LE_OP           reduce using rule 20 (expression -> expression MODULO_OP expression .)
    LOGAND_OP       reduce using rule 20 (expression -> expression MODULO_OP expression .)
    LOGOR_OP        reduce using rule 20 (expression -> expression MODULO_OP expression .)
    TILDE_OP        reduce using rule 20 (expression -> expression MODULO_OP expression .)
    QUESTION_OP     reduce using rule 20 (expression -> expression MODULO_OP expression .)
    COMMA           reduce using rule 20 (expression -> expression MODULO_OP expression .)
    RPAREN          reduce using rule 20 (expression -> expression MODULO_OP expression .)
    SEP             reduce using rule 20 (expression -> expression MODULO_OP expression .)
    RBRACK          reduce using rule 20 (expression -> expression MODULO_OP expression .)

  ! ADD_OP          [ shift and go to state 59 ]
  ! SUBTRACT_OP     [ shift and go to state 55 ]
  ! MULTIPLY_OP     [ shift and go to state 62 ]
  ! DIVIDE_OP       [ shift and go to state 63 ]
  ! MODULO_OP       [ shift and go to state 58 ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 89

    (16) expression -> expression ADD_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 16 (expression -> expression ADD_OP expression .)
    ADD_OP          reduce using rule 16 (expression -> expression ADD_OP expression .)
    SUBTRACT_OP     reduce using rule 16 (expression -> expression ADD_OP expression .)
    EQ_OP           reduce using rule 16 (expression -> expression ADD_OP expression .)
    NE_OP           reduce using rule 16 (expression -> expression ADD_OP expression .)
    GT_OP           reduce using rule 16 (expression -> expression ADD_OP expression .)
    GE_OP           reduce using rule 16 (expression -> expression ADD_OP expression .)
    LT_OP           reduce using rule 16 (expression -> expression ADD_OP expression .)
    LE_OP           reduce using rule 16 (expression -> expression ADD_OP expression .)
    LOGAND_OP       reduce using rule 16 (expression -> expression ADD_OP expression .)
    LOGOR_OP        reduce using rule 16 (expression -> expression ADD_OP expression .)
    TILDE_OP        reduce using rule 16 (expression -> expression ADD_OP expression .)
    QUESTION_OP     reduce using rule 16 (expression -> expression ADD_OP expression .)
    COMMA           reduce using rule 16 (expression -> expression ADD_OP expression .)
    RPAREN          reduce using rule 16 (expression -> expression ADD_OP expression .)
    SEP             reduce using rule 16 (expression -> expression ADD_OP expression .)
    RBRACK          reduce using rule 16 (expression -> expression ADD_OP expression .)
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58

  ! MULTIPLY_OP     [ reduce using rule 16 (expression -> expression ADD_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 16 (expression -> expression ADD_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 16 (expression -> expression ADD_OP expression .) ]
  ! ADD_OP          [ shift and go to state 59 ]
  ! SUBTRACT_OP     [ shift and go to state 55 ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 90

    (26) expression -> expression LE_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 26 (expression -> expression LE_OP expression .)
    EQ_OP           reduce using rule 26 (expression -> expression LE_OP expression .)
    NE_OP           reduce using rule 26 (expression -> expression LE_OP expression .)
    GT_OP           reduce using rule 26 (expression -> expression LE_OP expression .)
    GE_OP           reduce using rule 26 (expression -> expression LE_OP expression .)
    LT_OP           reduce using rule 26 (expression -> expression LE_OP expression .)
    LE_OP           reduce using rule 26 (expression -> expression LE_OP expression .)
    LOGAND_OP       reduce using rule 26 (expression -> expression LE_OP expression .)
    LOGOR_OP        reduce using rule 26 (expression -> expression LE_OP expression .)
    TILDE_OP        reduce using rule 26 (expression -> expression LE_OP expression .)
    QUESTION_OP     reduce using rule 26 (expression -> expression LE_OP expression .)
    COMMA           reduce using rule 26 (expression -> expression LE_OP expression .)
    RPAREN          reduce using rule 26 (expression -> expression LE_OP expression .)
    SEP             reduce using rule 26 (expression -> expression LE_OP expression .)
    RBRACK          reduce using rule 26 (expression -> expression LE_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58

  ! ADD_OP          [ reduce using rule 26 (expression -> expression LE_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 26 (expression -> expression LE_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 26 (expression -> expression LE_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 26 (expression -> expression LE_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 26 (expression -> expression LE_OP expression .) ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 91

    (36) expression -> expression QUESTION_OP expression . COLON_OP expression
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        shift and go to state 106
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 92

    (18) expression -> expression MULTIPLY_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    ADD_OP          reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    SUBTRACT_OP     reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    MULTIPLY_OP     reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    DIVIDE_OP       reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    MODULO_OP       reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    EQ_OP           reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    NE_OP           reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    GT_OP           reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    GE_OP           reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    LT_OP           reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    LE_OP           reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    LOGAND_OP       reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    LOGOR_OP        reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    TILDE_OP        reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    QUESTION_OP     reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    COMMA           reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    RPAREN          reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    SEP             reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)
    RBRACK          reduce using rule 18 (expression -> expression MULTIPLY_OP expression .)

  ! ADD_OP          [ shift and go to state 59 ]
  ! SUBTRACT_OP     [ shift and go to state 55 ]
  ! MULTIPLY_OP     [ shift and go to state 62 ]
  ! DIVIDE_OP       [ shift and go to state 63 ]
  ! MODULO_OP       [ shift and go to state 58 ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 93

    (19) expression -> expression DIVIDE_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    ADD_OP          reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    SUBTRACT_OP     reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    MULTIPLY_OP     reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    DIVIDE_OP       reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    MODULO_OP       reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    EQ_OP           reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    NE_OP           reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    GT_OP           reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    GE_OP           reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    LT_OP           reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    LE_OP           reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    LOGAND_OP       reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    LOGOR_OP        reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    TILDE_OP        reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    QUESTION_OP     reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    COMMA           reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    RPAREN          reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    SEP             reduce using rule 19 (expression -> expression DIVIDE_OP expression .)
    RBRACK          reduce using rule 19 (expression -> expression DIVIDE_OP expression .)

  ! ADD_OP          [ shift and go to state 59 ]
  ! SUBTRACT_OP     [ shift and go to state 55 ]
  ! MULTIPLY_OP     [ shift and go to state 62 ]
  ! DIVIDE_OP       [ shift and go to state 63 ]
  ! MODULO_OP       [ shift and go to state 58 ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 94

    (21) expression -> expression EQ_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 21 (expression -> expression EQ_OP expression .)
    EQ_OP           reduce using rule 21 (expression -> expression EQ_OP expression .)
    NE_OP           reduce using rule 21 (expression -> expression EQ_OP expression .)
    GT_OP           reduce using rule 21 (expression -> expression EQ_OP expression .)
    GE_OP           reduce using rule 21 (expression -> expression EQ_OP expression .)
    LT_OP           reduce using rule 21 (expression -> expression EQ_OP expression .)
    LE_OP           reduce using rule 21 (expression -> expression EQ_OP expression .)
    LOGAND_OP       reduce using rule 21 (expression -> expression EQ_OP expression .)
    LOGOR_OP        reduce using rule 21 (expression -> expression EQ_OP expression .)
    TILDE_OP        reduce using rule 21 (expression -> expression EQ_OP expression .)
    QUESTION_OP     reduce using rule 21 (expression -> expression EQ_OP expression .)
    COMMA           reduce using rule 21 (expression -> expression EQ_OP expression .)
    RPAREN          reduce using rule 21 (expression -> expression EQ_OP expression .)
    SEP             reduce using rule 21 (expression -> expression EQ_OP expression .)
    RBRACK          reduce using rule 21 (expression -> expression EQ_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58

  ! ADD_OP          [ reduce using rule 21 (expression -> expression EQ_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 21 (expression -> expression EQ_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 21 (expression -> expression EQ_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 21 (expression -> expression EQ_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 21 (expression -> expression EQ_OP expression .) ]
  ! EQ_OP           [ shift and go to state 64 ]
  ! NE_OP           [ shift and go to state 49 ]
  ! GT_OP           [ shift and go to state 50 ]
  ! GE_OP           [ shift and go to state 57 ]
  ! LT_OP           [ shift and go to state 56 ]
  ! LE_OP           [ shift and go to state 60 ]
  ! LOGAND_OP       [ shift and go to state 54 ]
  ! LOGOR_OP        [ shift and go to state 51 ]
  ! TILDE_OP        [ shift and go to state 52 ]
  ! QUESTION_OP     [ shift and go to state 61 ]


state 95

    (32) expression -> ARRAY_LENGTH LPAREN ID RPAREN .

    COLON_OP        reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    ADD_OP          reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    SUBTRACT_OP     reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    MULTIPLY_OP     reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    DIVIDE_OP       reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    MODULO_OP       reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    EQ_OP           reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    NE_OP           reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    GT_OP           reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    GE_OP           reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    LT_OP           reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    LE_OP           reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    LOGAND_OP       reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    LOGOR_OP        reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    TILDE_OP        reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    QUESTION_OP     reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    COMMA           reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    RPAREN          reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    SEP             reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)
    RBRACK          reduce using rule 32 (expression -> ARRAY_LENGTH LPAREN ID RPAREN .)


state 96

    (33) expression -> INT LPAREN expression RPAREN .

    COLON_OP        reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    ADD_OP          reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    SUBTRACT_OP     reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    MULTIPLY_OP     reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    DIVIDE_OP       reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    MODULO_OP       reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    EQ_OP           reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    NE_OP           reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    GT_OP           reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    GE_OP           reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    LT_OP           reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    LE_OP           reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    LOGAND_OP       reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    LOGOR_OP        reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    TILDE_OP        reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    QUESTION_OP     reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    COMMA           reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    SEP             reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)
    RBRACK          reduce using rule 33 (expression -> INT LPAREN expression RPAREN .)


state 97

    (35) expression -> STRING LPAREN expression RPAREN .

    COLON_OP        reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    ADD_OP          reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    SUBTRACT_OP     reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    MULTIPLY_OP     reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    DIVIDE_OP       reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    MODULO_OP       reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    EQ_OP           reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    NE_OP           reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    GT_OP           reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    GE_OP           reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    LT_OP           reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    LE_OP           reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    LOGAND_OP       reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    LOGOR_OP        reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    TILDE_OP        reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    QUESTION_OP     reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    COMMA           reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    RPAREN          reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    SEP             reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)
    RBRACK          reduce using rule 35 (expression -> STRING LPAREN expression RPAREN .)


state 98

    (41) subscript -> LBRACK expression RBRACK .

    SEP             reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    ADD_OP          reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    SUBTRACT_OP     reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    MULTIPLY_OP     reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    DIVIDE_OP       reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    MODULO_OP       reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    EQ_OP           reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    NE_OP           reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    GT_OP           reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    GE_OP           reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    LT_OP           reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    LE_OP           reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    LOGAND_OP       reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    LOGOR_OP        reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    TILDE_OP        reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    QUESTION_OP     reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    RPAREN          reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    COMMA           reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    RBRACK          reduce using rule 41 (subscript -> LBRACK expression RBRACK .)
    COLON_OP        reduce using rule 41 (subscript -> LBRACK expression RBRACK .)


state 99

    (43) expression -> ID LPAREN arglist RPAREN .

    COLON_OP        reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    ADD_OP          reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    SUBTRACT_OP     reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    MULTIPLY_OP     reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    DIVIDE_OP       reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    MODULO_OP       reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    EQ_OP           reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    NE_OP           reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    GT_OP           reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    GE_OP           reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    LT_OP           reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    LE_OP           reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    LOGAND_OP       reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    LOGOR_OP        reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    TILDE_OP        reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    QUESTION_OP     reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    COMMA           reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    SEP             reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)
    RBRACK          reduce using rule 43 (expression -> ID LPAREN arglist RPAREN .)


state 100

    (44) arglist -> expression argrest .
    (46) argrest -> argrest . COMMA expression

    RPAREN          reduce using rule 44 (arglist -> expression argrest .)
    COMMA           shift and go to state 107


state 101

    (47) argrest -> epsilon .

    COMMA           reduce using rule 47 (argrest -> epsilon .)
    RPAREN          reduce using rule 47 (argrest -> epsilon .)


state 102

    (34) expression -> FLOAT LPAREN expression RPAREN .

    COLON_OP        reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    ADD_OP          reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    SUBTRACT_OP     reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    MULTIPLY_OP     reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    DIVIDE_OP       reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    MODULO_OP       reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    EQ_OP           reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    NE_OP           reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    GT_OP           reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    GE_OP           reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    LT_OP           reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    LE_OP           reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    LOGAND_OP       reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    LOGOR_OP        reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    TILDE_OP        reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    QUESTION_OP     reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    COMMA           reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    SEP             reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)
    RBRACK          reduce using rule 34 (expression -> FLOAT LPAREN expression RPAREN .)


state 103

    (54) moreelements -> COMMA expression . moreelements
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression
    (54) moreelements -> . COMMA expression moreelements
    (55) moreelements -> . epsilon
    (61) epsilon -> .

    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61
    COMMA           shift and go to state 78
    RBRACK          reduce using rule 61 (epsilon -> .)

    moreelements                   shift and go to state 108
    epsilon                        shift and go to state 77

state 104

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION . LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE

    LPAREN          shift and go to state 109


state 105

    (9) varassign -> typedecl ID ASSIGN_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    SEP             reduce using rule 9 (varassign -> typedecl ID ASSIGN_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 106

    (36) expression -> expression QUESTION_OP expression COLON_OP . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 110
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 107

    (46) argrest -> argrest COMMA . expression
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    scalarvalue                    shift and go to state 18
    arrayvalues                    shift and go to state 11
    expression                     shift and go to state 111

state 108

    (54) moreelements -> COMMA expression moreelements .

    RBRACK          reduce using rule 54 (moreelements -> COMMA expression moreelements .)


state 109

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN . paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE
    (12) paramlist -> . typedecl ID paramrest
    (13) paramlist -> . epsilon
    (56) typedecl -> . INT arraydecl
    (57) typedecl -> . FLOAT arraydecl
    (58) typedecl -> . STRING arraydecl
    (61) epsilon -> .

    INT             shift and go to state 116
    FLOAT           shift and go to state 115
    STRING          shift and go to state 117
    RPAREN          reduce using rule 61 (epsilon -> .)

    typedecl                       shift and go to state 112
    epsilon                        shift and go to state 114
    paramlist                      shift and go to state 113

state 110

    (36) expression -> expression QUESTION_OP expression COLON_OP expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COLON_OP        reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .)
    TILDE_OP        reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .)
    COMMA           reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .)
    RPAREN          reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .)
    SEP             reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .)
    RBRACK          reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    QUESTION_OP     shift and go to state 61

  ! ADD_OP          [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! SUBTRACT_OP     [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! MULTIPLY_OP     [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! DIVIDE_OP       [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! MODULO_OP       [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! EQ_OP           [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! NE_OP           [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! GT_OP           [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! GE_OP           [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! LT_OP           [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! LE_OP           [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! LOGAND_OP       [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! LOGOR_OP        [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! QUESTION_OP     [ reduce using rule 36 (expression -> expression QUESTION_OP expression COLON_OP expression .) ]
  ! TILDE_OP        [ shift and go to state 52 ]


state 111

    (46) argrest -> argrest COMMA expression .
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    COMMA           reduce using rule 46 (argrest -> argrest COMMA expression .)
    RPAREN          reduce using rule 46 (argrest -> argrest COMMA expression .)
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 112

    (12) paramlist -> typedecl . ID paramrest

    ID              shift and go to state 118


state 113

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist . pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE
    (11) pushToSymTable -> . epsilon
    (61) epsilon -> .

    RPAREN          reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 119
    pushToSymTable                 shift and go to state 120

state 114

    (13) paramlist -> epsilon .

    RPAREN          reduce using rule 13 (paramlist -> epsilon .)


state 115

    (57) typedecl -> FLOAT . arraydecl
    (59) arraydecl -> . LBRACK RBRACK
    (60) arraydecl -> . epsilon
    (61) epsilon -> .

    LBRACK          shift and go to state 31
    ID              reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 30
    arraydecl                      shift and go to state 43

state 116

    (56) typedecl -> INT . arraydecl
    (59) arraydecl -> . LBRACK RBRACK
    (60) arraydecl -> . epsilon
    (61) epsilon -> .

    LBRACK          shift and go to state 31
    ID              reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 30
    arraydecl                      shift and go to state 33

state 117

    (58) typedecl -> STRING . arraydecl
    (59) arraydecl -> . LBRACK RBRACK
    (60) arraydecl -> . epsilon
    (61) epsilon -> .

    LBRACK          shift and go to state 31
    ID              reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 30
    arraydecl                      shift and go to state 35

state 118

    (12) paramlist -> typedecl ID . paramrest
    (14) paramrest -> . paramrest COMMA typedecl ID
    (15) paramrest -> . epsilon
    (61) epsilon -> .

    COMMA           reduce using rule 61 (epsilon -> .)
    RPAREN          reduce using rule 61 (epsilon -> .)

    paramrest                      shift and go to state 121
    epsilon                        shift and go to state 122

state 119

    (11) pushToSymTable -> epsilon .

    RPAREN          reduce using rule 11 (pushToSymTable -> epsilon .)


state 120

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable . RPAREN LBRACE stmtrest RETURN expression SEP RBRACE

    RPAREN          shift and go to state 123


state 121

    (12) paramlist -> typedecl ID paramrest .
    (14) paramrest -> paramrest . COMMA typedecl ID

    RPAREN          reduce using rule 12 (paramlist -> typedecl ID paramrest .)
    COMMA           shift and go to state 124


state 122

    (15) paramrest -> epsilon .

    COMMA           reduce using rule 15 (paramrest -> epsilon .)
    RPAREN          reduce using rule 15 (paramrest -> epsilon .)


state 123

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN . LBRACE stmtrest RETURN expression SEP RBRACE

    LBRACE          shift and go to state 125


state 124

    (14) paramrest -> paramrest COMMA . typedecl ID
    (56) typedecl -> . INT arraydecl
    (57) typedecl -> . FLOAT arraydecl
    (58) typedecl -> . STRING arraydecl

    INT             shift and go to state 116
    FLOAT           shift and go to state 115
    STRING          shift and go to state 117

    typedecl                       shift and go to state 126

state 125

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE . stmtrest RETURN expression SEP RBRACE
    (3) stmtrest -> . stmtrest statement
    (4) stmtrest -> . epsilon
    (61) epsilon -> .

    RETURN          reduce using rule 61 (epsilon -> .)
    SUBTRACT_OP     reduce using rule 61 (epsilon -> .)
    LOGNOT_OP       reduce using rule 61 (epsilon -> .)
    ARRAY_LENGTH    reduce using rule 61 (epsilon -> .)
    INT             reduce using rule 61 (epsilon -> .)
    FLOAT           reduce using rule 61 (epsilon -> .)
    STRING          reduce using rule 61 (epsilon -> .)
    LPAREN          reduce using rule 61 (epsilon -> .)
    ID              reduce using rule 61 (epsilon -> .)
    FLOATNUMBER     reduce using rule 61 (epsilon -> .)
    INTNUMBER       reduce using rule 61 (epsilon -> .)
    STRINGCONSTANT  reduce using rule 61 (epsilon -> .)
    LBRACK          reduce using rule 61 (epsilon -> .)

    epsilon                        shift and go to state 1
    stmtrest                       shift and go to state 127

state 126

    (14) paramrest -> paramrest COMMA typedecl . ID

    ID              shift and go to state 128


state 127

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest . RETURN expression SEP RBRACE
    (3) stmtrest -> stmtrest . statement
    (5) statement -> . assign
    (6) statement -> . expression SEP
    (7) assign -> . varassign SEP
    (8) assign -> . funcassign
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (9) varassign -> . typedecl ID ASSIGN_OP expression
    (10) funcassign -> . typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK
    (56) typedecl -> . INT arraydecl
    (57) typedecl -> . FLOAT arraydecl
    (58) typedecl -> . STRING arraydecl

    RETURN          shift and go to state 129
    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 19
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    typedecl                       shift and go to state 21
    statement                      shift and go to state 130
    scalarvalue                    shift and go to state 18
    varassign                      shift and go to state 22
    arrayvalues                    shift and go to state 11
    expression                     shift and go to state 23
    assign                         shift and go to state 24
    funcassign                     shift and go to state 16

state 128

    (14) paramrest -> paramrest COMMA typedecl ID .

    COMMA           reduce using rule 14 (paramrest -> paramrest COMMA typedecl ID .)
    RPAREN          reduce using rule 14 (paramrest -> paramrest COMMA typedecl ID .)


state 129

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN . expression SEP RBRACE
    (16) expression -> . expression ADD_OP expression
    (17) expression -> . expression SUBTRACT_OP expression
    (18) expression -> . expression MULTIPLY_OP expression
    (19) expression -> . expression DIVIDE_OP expression
    (20) expression -> . expression MODULO_OP expression
    (21) expression -> . expression EQ_OP expression
    (22) expression -> . expression NE_OP expression
    (23) expression -> . expression GT_OP expression
    (24) expression -> . expression GE_OP expression
    (25) expression -> . expression LT_OP expression
    (26) expression -> . expression LE_OP expression
    (27) expression -> . expression LOGAND_OP expression
    (28) expression -> . expression LOGOR_OP expression
    (29) expression -> . expression TILDE_OP expression
    (30) expression -> . SUBTRACT_OP expression
    (31) expression -> . LOGNOT_OP expression
    (32) expression -> . ARRAY_LENGTH LPAREN ID RPAREN
    (33) expression -> . INT LPAREN expression RPAREN
    (34) expression -> . FLOAT LPAREN expression RPAREN
    (35) expression -> . STRING LPAREN expression RPAREN
    (36) expression -> . expression QUESTION_OP expression COLON_OP expression
    (37) expression -> . LPAREN expression RPAREN
    (38) expression -> . scalarvalue
    (39) expression -> . arrayvalues
    (40) expression -> . ID subscript
    (43) expression -> . ID LPAREN arglist RPAREN
    (48) scalarvalue -> . FLOATNUMBER
    (49) scalarvalue -> . INTNUMBER
    (50) scalarvalue -> . STRINGCONSTANT
    (51) arrayvalues -> . LBRACK arrayelements RBRACK

    SUBTRACT_OP     shift and go to state 7
    LOGNOT_OP       shift and go to state 17
    ARRAY_LENGTH    shift and go to state 8
    INT             shift and go to state 27
    FLOAT           shift and go to state 26
    STRING          shift and go to state 25
    LPAREN          shift and go to state 14
    ID              shift and go to state 15
    FLOATNUMBER     shift and go to state 5
    INTNUMBER       shift and go to state 9
    STRINGCONSTANT  shift and go to state 6
    LBRACK          shift and go to state 20

    expression                     shift and go to state 131
    arrayvalues                    shift and go to state 11
    scalarvalue                    shift and go to state 18

state 130

    (3) stmtrest -> stmtrest statement .

    RETURN          reduce using rule 3 (stmtrest -> stmtrest statement .)
    SUBTRACT_OP     reduce using rule 3 (stmtrest -> stmtrest statement .)
    LOGNOT_OP       reduce using rule 3 (stmtrest -> stmtrest statement .)
    ARRAY_LENGTH    reduce using rule 3 (stmtrest -> stmtrest statement .)
    INT             reduce using rule 3 (stmtrest -> stmtrest statement .)
    FLOAT           reduce using rule 3 (stmtrest -> stmtrest statement .)
    STRING          reduce using rule 3 (stmtrest -> stmtrest statement .)
    LPAREN          reduce using rule 3 (stmtrest -> stmtrest statement .)
    ID              reduce using rule 3 (stmtrest -> stmtrest statement .)
    FLOATNUMBER     reduce using rule 3 (stmtrest -> stmtrest statement .)
    INTNUMBER       reduce using rule 3 (stmtrest -> stmtrest statement .)
    STRINGCONSTANT  reduce using rule 3 (stmtrest -> stmtrest statement .)
    LBRACK          reduce using rule 3 (stmtrest -> stmtrest statement .)


state 131

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression . SEP RBRACE
    (16) expression -> expression . ADD_OP expression
    (17) expression -> expression . SUBTRACT_OP expression
    (18) expression -> expression . MULTIPLY_OP expression
    (19) expression -> expression . DIVIDE_OP expression
    (20) expression -> expression . MODULO_OP expression
    (21) expression -> expression . EQ_OP expression
    (22) expression -> expression . NE_OP expression
    (23) expression -> expression . GT_OP expression
    (24) expression -> expression . GE_OP expression
    (25) expression -> expression . LT_OP expression
    (26) expression -> expression . LE_OP expression
    (27) expression -> expression . LOGAND_OP expression
    (28) expression -> expression . LOGOR_OP expression
    (29) expression -> expression . TILDE_OP expression
    (36) expression -> expression . QUESTION_OP expression COLON_OP expression

    SEP             shift and go to state 132
    ADD_OP          shift and go to state 59
    SUBTRACT_OP     shift and go to state 55
    MULTIPLY_OP     shift and go to state 62
    DIVIDE_OP       shift and go to state 63
    MODULO_OP       shift and go to state 58
    EQ_OP           shift and go to state 64
    NE_OP           shift and go to state 49
    GT_OP           shift and go to state 50
    GE_OP           shift and go to state 57
    LT_OP           shift and go to state 56
    LE_OP           shift and go to state 60
    LOGAND_OP       shift and go to state 54
    LOGOR_OP        shift and go to state 51
    TILDE_OP        shift and go to state 52
    QUESTION_OP     shift and go to state 61


state 132

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP . RBRACE

    RBRACE          shift and go to state 133


state 133

    (10) funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .

    $end            reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    SUBTRACT_OP     reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    LOGNOT_OP       reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    ARRAY_LENGTH    reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    INT             reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    FLOAT           reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    STRING          reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    LPAREN          reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    ID              reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    FLOATNUMBER     reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    INTNUMBER       reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    STRINGCONSTANT  reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    LBRACK          reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)
    RETURN          reduce using rule 10 (funcassign -> typedecl ID ASSIGN_OP FUNCTION LPAREN paramlist pushToSymTable RPAREN LBRACE stmtrest RETURN expression SEP RBRACE .)

