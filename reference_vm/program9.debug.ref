PROGRAM MID LINK BEFORE BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	27
2:	STEP_PUSH_FP
3:	STEP_CALL_SECONDARY
4:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194]
5:	STEP_CONST
6:	F27: 
7:	STEP_PUSH_FP
8:	STEP_CONST
9:	0
10:	STEP_ADD
11:	STEP_FETCH_STACK
12:	STEP_DUP
13:	STEP_CONST
14:	1
15:	STEP_REFCNT
16:	STEP_DROP
17:	STEP_CONST
18:	0
19:	STEP_PUSH_FP
20:	STEP_CALL_SECONDARY
21:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
22:	STEP_PRINT
23:	STEP_CRLF
24:	STEP_CONST
25:	16
26:	STEP_PUSH_FP
27:	STEP_CALL_SECONDARY
28:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194]
29:	STEP_CONST
30:	F16: 
31:	STEP_PUSH_FP
32:	STEP_CONST
33:	1
34:	STEP_ADD
35:	STEP_FETCH_STACK
36:	STEP_DUP
37:	STEP_CONST
38:	1
39:	STEP_REFCNT
40:	STEP_DROP
41:	STEP_CONST
42:	0
43:	STEP_PUSH_FP
44:	STEP_CALL_SECONDARY
45:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
46:	STEP_PRINT
47:	STEP_CRLF
48:	STEP_CONST
49:	1
50:	STEP_MINUS
51:	STEP_PUSH_FP
52:	STEP_CALL_SECONDARY
53:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194]
54:	STEP_CONST
55:	F-1: 
56:	STEP_PUSH_FP
57:	STEP_CONST
58:	2
59:	STEP_ADD
60:	STEP_FETCH_STACK
61:	STEP_DUP
62:	STEP_CONST
63:	1
64:	STEP_REFCNT
65:	STEP_DROP
66:	STEP_CONST
67:	0
68:	STEP_PUSH_FP
69:	STEP_CALL_SECONDARY
70:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
71:	STEP_PRINT
72:	STEP_CRLF
73:	STEP_CONST
74:	0
75:	STEP_PUSH_FP
76:	STEP_CALL_SECONDARY
77:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194]
78:	STEP_CONST
79:	F0: 
80:	STEP_PUSH_FP
81:	STEP_CONST
82:	3
83:	STEP_ADD
84:	STEP_FETCH_STACK
85:	STEP_DUP
86:	STEP_CONST
87:	1
88:	STEP_REFCNT
89:	STEP_DROP
90:	STEP_CONST
91:	0
92:	STEP_PUSH_FP
93:	STEP_CALL_SECONDARY
94:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
95:	STEP_PRINT
96:	STEP_CRLF
97:	STEP_CONST
98:	1
99:	STEP_PUSH_FP
100:	STEP_CALL_SECONDARY
101:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194]
102:	STEP_CONST
103:	F1: 
104:	STEP_PUSH_FP
105:	STEP_CONST
106:	4
107:	STEP_ADD
108:	STEP_FETCH_STACK
109:	STEP_DUP
110:	STEP_CONST
111:	1
112:	STEP_REFCNT
113:	STEP_DROP
114:	STEP_CONST
115:	0
116:	STEP_PUSH_FP
117:	STEP_CALL_SECONDARY
118:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
119:	STEP_PRINT
120:	STEP_CRLF
121:	STEP_CONST
122:	12
123:	STEP_PUSH_FP
124:	STEP_CALL_SECONDARY
125:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194]
126:	STEP_CONST
127:	F12: 
128:	STEP_PUSH_FP
129:	STEP_CONST
130:	5
131:	STEP_ADD
132:	STEP_FETCH_STACK
133:	STEP_DUP
134:	STEP_CONST
135:	1
136:	STEP_REFCNT
137:	STEP_DROP
138:	STEP_CONST
139:	0
140:	STEP_PUSH_FP
141:	STEP_CALL_SECONDARY
142:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
143:	STEP_PRINT
144:	STEP_CRLF
145:	STEP_CONST
146:	123456789
147:	STEP_PUSH_FP
148:	STEP_CALL_SECONDARY
149:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194]
150:	STEP_CONST
151:	F123456789: 
152:	STEP_PUSH_FP
153:	STEP_CONST
154:	6
155:	STEP_ADD
156:	STEP_FETCH_STACK
157:	STEP_DUP
158:	STEP_CONST
159:	1
160:	STEP_REFCNT
161:	STEP_DROP
162:	STEP_CONST
163:	0
164:	STEP_PUSH_FP
165:	STEP_CALL_SECONDARY
166:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
167:	STEP_PRINT
168:	STEP_CRLF
169:	STEP_CONST
170:	1073741824
171:	STEP_PUSH_FP
172:	STEP_CALL_SECONDARY
173:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194]
174:	STEP_CONST
175:	twoTo30: 
176:	STEP_PUSH_FP
177:	STEP_CONST
178:	7
179:	STEP_ADD
180:	STEP_FETCH_STACK
181:	STEP_DUP
182:	STEP_CONST
183:	1
184:	STEP_REFCNT
185:	STEP_DROP
186:	STEP_CONST
187:	0
188:	STEP_PUSH_FP
189:	STEP_CALL_SECONDARY
190:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
191:	STEP_PRINT
192:	STEP_CRLF
193:	STEP_PAUSE
194*	FUNCTION outer scope::factor1	***************
194:	STEP_PUSH_FP
195:	STEP_CONST
196:	-2
197:	STEP_ADD
198:	STEP_FETCH_STACK
199:	STEP_CONST
200:	1
201:	STEP_GT
202:	STEP_GOTO0
203:	(36,)
204:	STEP_CONST
205:	Good parameter to factor1:
206:	STEP_PRINT
207:	STEP_CRLF
208:	STEP_PUSH_FP
209:	STEP_CONST
210:	-2
211:	STEP_ADD
212:	STEP_FETCH_STACK
213:	STEP_PRINT
214:	STEP_CRLF
215:	STEP_PUSH_FP
216:	STEP_CONST
217:	-2
218:	STEP_ADD
219:	STEP_FETCH_STACK
220:	STEP_CONST
221:	2
222:	STEP_CONST
223:	0
224:	STEP_ALLOC
225:	STEP_DUP
226:	STEP_CONST
227:	-1
228:	STEP_ARRAYCPY
229:	STEP_SWAP
230:	STEP_CONST
231:	-1
232:	STEP_REFCNT
233:	STEP_DROP
234:	STEP_PUSH_FP
235:	STEP_CALL_SECONDARY
236:	['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 265]
237:	STEP_GOTO
238:	(15,)
239:	STEP_CONST
240:	Bad parameter to factor1: 
241:	STEP_PRINT
242:	STEP_CRLF
243:	STEP_PUSH_FP
244:	STEP_CONST
245:	-2
246:	STEP_ADD
247:	STEP_FETCH_STACK
248:	STEP_PRINT
249:	STEP_CRLF
250:	STEP_CONST
251:	0
252:	STEP_ALLOC
253:	STEP_CONST
254:	0
255:	STEP_STORE
256:	STEP_CONST
257:	-2
258:	STEP_CONST
259:	-1
260:	STEP_DROPFRAME
261:	STEP_CONST
262:	0
263:	STEP_FETCH
264:	STEP_RETURN
265*	FUNCTION outer scope::factor1::helpFactor	***************
265:	STEP_PUSH_FP
266:	STEP_CONST
267:	-3
268:	STEP_ADD
269:	STEP_FETCH_STACK
270:	STEP_PUSH_FP
271:	STEP_CONST
272:	-4
273:	STEP_ADD
274:	STEP_FETCH_STACK
275:	STEP_LT
276:	STEP_GOTO0
277:	(122,)
278:	STEP_PUSH_FP
279:	STEP_CONST
280:	-4
281:	STEP_ADD
282:	STEP_FETCH_STACK
283:	STEP_PUSH_FP
284:	STEP_CONST
285:	-3
286:	STEP_ADD
287:	STEP_FETCH_STACK
288:	STEP_MOD
289:	STEP_CONST
290:	0
291:	STEP_EQ
292:	STEP_GOTO0
293:	(60,)
294:	STEP_PUSH_FP
295:	STEP_CONST
296:	-4
297:	STEP_ADD
298:	STEP_FETCH_STACK
299:	STEP_PUSH_FP
300:	STEP_CONST
301:	-3
302:	STEP_ADD
303:	STEP_FETCH_STACK
304:	STEP_DIV
305:	STEP_CONST
306:	2
307:	STEP_PUSH_FP
308:	STEP_CONST
309:	-2
310:	STEP_ADD
311:	STEP_FETCH_STACK
312:	STEP_DUP
313:	STEP_CONST
314:	1
315:	STEP_REFCNT
316:	STEP_DROP
317:	STEP_CONST
318:	1
319:	STEP_ALLOC
320:	STEP_PUSH_FP
321:	STEP_CONST
322:	-3
323:	STEP_ADD
324:	STEP_FETCH_STACK
325:	STEP_OVER
326:	STEP_CONST
327:	0
328:	STEP_ADD
329:	STEP_STORE
330:	STEP_OVER
331:	STEP_OVER
332:	STEP_CONST
333:	0
334:	STEP_ARRAYCAT
335:	STEP_SWAP2
336:	STEP_CONST
337:	-1
338:	STEP_REFCNT
339:	STEP_DROP
340:	STEP_CONST
341:	-1
342:	STEP_REFCNT
343:	STEP_DROP
344:	STEP_PUSH_FP
345:	STEP_CONST
346:	-1
347:	STEP_ADD
348:	STEP_FETCH_STACK
349:	STEP_CALL_SECONDARY
350:	['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 265]
351:	STEP_GOTO
352:	(45,)
353:	STEP_PUSH_FP
354:	STEP_CONST
355:	-4
356:	STEP_ADD
357:	STEP_FETCH_STACK
358:	STEP_PUSH_FP
359:	STEP_CONST
360:	-3
361:	STEP_ADD
362:	STEP_FETCH_STACK
363:	STEP_CONST
364:	2
365:	STEP_EQ
366:	STEP_GOTO0
367:	(5,)
368:	STEP_CONST
369:	3
370:	STEP_GOTO
371:	(9,)
372:	STEP_PUSH_FP
373:	STEP_CONST
374:	-3
375:	STEP_ADD
376:	STEP_FETCH_STACK
377:	STEP_CONST
378:	2
379:	STEP_ADD
380:	STEP_PUSH_FP
381:	STEP_CONST
382:	-2
383:	STEP_ADD
384:	STEP_FETCH_STACK
385:	STEP_DUP
386:	STEP_CONST
387:	1
388:	STEP_REFCNT
389:	STEP_DROP
390:	STEP_PUSH_FP
391:	STEP_CONST
392:	-1
393:	STEP_ADD
394:	STEP_FETCH_STACK
395:	STEP_CALL_SECONDARY
396:	['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 265]
397:	STEP_GOTO
398:	(38,)
399:	STEP_PUSH_FP
400:	STEP_CONST
401:	-2
402:	STEP_ADD
403:	STEP_FETCH_STACK
404:	STEP_DUP
405:	STEP_CONST
406:	1
407:	STEP_REFCNT
408:	STEP_DROP
409:	STEP_CONST
410:	1
411:	STEP_ALLOC
412:	STEP_PUSH_FP
413:	STEP_CONST
414:	-4
415:	STEP_ADD
416:	STEP_FETCH_STACK
417:	STEP_OVER
418:	STEP_CONST
419:	0
420:	STEP_ADD
421:	STEP_STORE
422:	STEP_OVER
423:	STEP_OVER
424:	STEP_CONST
425:	0
426:	STEP_ARRAYCAT
427:	STEP_SWAP2
428:	STEP_CONST
429:	-1
430:	STEP_REFCNT
431:	STEP_DROP
432:	STEP_CONST
433:	-1
434:	STEP_REFCNT
435:	STEP_DROP
436:	STEP_CONST
437:	0
438:	STEP_STORE
439:	STEP_PUSH_FP
440:	STEP_CONST
441:	-2
442:	STEP_ADD
443:	STEP_FETCH_STACK
444:	STEP_CONST
445:	-1
446:	STEP_REFCNT
447:	STEP_DROP
448:	STEP_CONST
449:	-4
450:	STEP_CONST
451:	-1
452:	STEP_DROPFRAME
453:	STEP_CONST
454:	0
455:	STEP_FETCH
456:	STEP_RETURN
457*	FUNCTION outer scope::printiarray	***************
457:	STEP_PUSH_FP
458:	STEP_CONST
459:	-2
460:	STEP_ADD
461:	STEP_FETCH_STACK
462:	STEP_CONST
463:	1
464:	STEP_MINUS
465:	STEP_GT
466:	STEP_DUP
467:	STEP_GOTO0
468:	(26,)
469:	STEP_DROP
470:	STEP_PUSH_FP
471:	STEP_CONST
472:	-2
473:	STEP_ADD
474:	STEP_FETCH_STACK
475:	STEP_PUSH_FP
476:	STEP_CONST
477:	-3
478:	STEP_ADD
479:	STEP_FETCH_STACK
480:	STEP_DUP
481:	STEP_CONST
482:	1
483:	STEP_REFCNT
484:	STEP_DROP
485:	STEP_DUP
486:	STEP_SUB1
487:	STEP_FETCH
488:	STEP_SWAP
489:	STEP_CONST
490:	-1
491:	STEP_REFCNT
492:	STEP_DROP
493:	STEP_LT
494:	STEP_GOTO0
495:	(50,)
496:	STEP_PUSH_FP
497:	STEP_CONST
498:	-4
499:	STEP_ADD
500:	STEP_FETCH_STACK
501:	STEP_CONST
502:	 
503:	STEP_ADD
504:	STEP_PUSH_FP
505:	STEP_CONST
506:	-3
507:	STEP_ADD
508:	STEP_FETCH_STACK
509:	STEP_PUSH_FP
510:	STEP_CONST
511:	-2
512:	STEP_ADD
513:	STEP_FETCH_STACK
514:	STEP_ADD
515:	STEP_FETCH
516:	STEP_CAST_STRING
517:	STEP_ADD
518:	STEP_PUSH_FP
519:	STEP_CONST
520:	-3
521:	STEP_ADD
522:	STEP_FETCH_STACK
523:	STEP_DUP
524:	STEP_CONST
525:	1
526:	STEP_REFCNT
527:	STEP_DROP
528:	STEP_PUSH_FP
529:	STEP_CONST
530:	-2
531:	STEP_ADD
532:	STEP_FETCH_STACK
533:	STEP_CONST
534:	1
535:	STEP_ADD
536:	STEP_PUSH_FP
537:	STEP_CONST
538:	-1
539:	STEP_ADD
540:	STEP_FETCH_STACK
541:	STEP_CALL_SECONDARY
542:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'foo12': ('var', 'foo12', 'int[]', 5), 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 265]}, 194], '#funcs': 2, '#locals': 8, 'foo0': ('var', 'foo0', 'int[]', 3), '#depth': 0, 'foo_1': ('var', 'foo_1', 'int[]', 2), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 7), 'foo16': ('var', 'foo16', 'int[]', 1), 'foo27': ('var', 'foo27', 'int[]', 0), 'foo1': ('var', 'foo1', 'int[]', 4), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 6)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 457]
543:	STEP_GOTO
544:	(6,)
545:	STEP_PUSH_FP
546:	STEP_CONST
547:	-4
548:	STEP_ADD
549:	STEP_FETCH_STACK
550:	STEP_CONST
551:	0
552:	STEP_STORE
553:	STEP_PUSH_FP
554:	STEP_CONST
555:	-3
556:	STEP_ADD
557:	STEP_FETCH_STACK
558:	STEP_CONST
559:	-1
560:	STEP_REFCNT
561:	STEP_DROP
562:	STEP_CONST
563:	-4
564:	STEP_CONST
565:	-1
566:	STEP_DROPFRAME
567:	STEP_CONST
568:	0
569:	STEP_FETCH
570:	STEP_RETURN
PROGRAM LINK AFTER BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	27
2:	STEP_PUSH_FP
3:	STEP_CALL_SECONDARY
4:	194
5:	STEP_CONST
6:	F27: 
7:	STEP_PUSH_FP
8:	STEP_CONST
9:	0
10:	STEP_ADD
11:	STEP_FETCH_STACK
12:	STEP_DUP
13:	STEP_CONST
14:	1
15:	STEP_REFCNT
16:	STEP_DROP
17:	STEP_CONST
18:	0
19:	STEP_PUSH_FP
20:	STEP_CALL_SECONDARY
21:	457
22:	STEP_PRINT
23:	STEP_CRLF
24:	STEP_CONST
25:	16
26:	STEP_PUSH_FP
27:	STEP_CALL_SECONDARY
28:	194
29:	STEP_CONST
30:	F16: 
31:	STEP_PUSH_FP
32:	STEP_CONST
33:	1
34:	STEP_ADD
35:	STEP_FETCH_STACK
36:	STEP_DUP
37:	STEP_CONST
38:	1
39:	STEP_REFCNT
40:	STEP_DROP
41:	STEP_CONST
42:	0
43:	STEP_PUSH_FP
44:	STEP_CALL_SECONDARY
45:	457
46:	STEP_PRINT
47:	STEP_CRLF
48:	STEP_CONST
49:	1
50:	STEP_MINUS
51:	STEP_PUSH_FP
52:	STEP_CALL_SECONDARY
53:	194
54:	STEP_CONST
55:	F-1: 
56:	STEP_PUSH_FP
57:	STEP_CONST
58:	2
59:	STEP_ADD
60:	STEP_FETCH_STACK
61:	STEP_DUP
62:	STEP_CONST
63:	1
64:	STEP_REFCNT
65:	STEP_DROP
66:	STEP_CONST
67:	0
68:	STEP_PUSH_FP
69:	STEP_CALL_SECONDARY
70:	457
71:	STEP_PRINT
72:	STEP_CRLF
73:	STEP_CONST
74:	0
75:	STEP_PUSH_FP
76:	STEP_CALL_SECONDARY
77:	194
78:	STEP_CONST
79:	F0: 
80:	STEP_PUSH_FP
81:	STEP_CONST
82:	3
83:	STEP_ADD
84:	STEP_FETCH_STACK
85:	STEP_DUP
86:	STEP_CONST
87:	1
88:	STEP_REFCNT
89:	STEP_DROP
90:	STEP_CONST
91:	0
92:	STEP_PUSH_FP
93:	STEP_CALL_SECONDARY
94:	457
95:	STEP_PRINT
96:	STEP_CRLF
97:	STEP_CONST
98:	1
99:	STEP_PUSH_FP
100:	STEP_CALL_SECONDARY
101:	194
102:	STEP_CONST
103:	F1: 
104:	STEP_PUSH_FP
105:	STEP_CONST
106:	4
107:	STEP_ADD
108:	STEP_FETCH_STACK
109:	STEP_DUP
110:	STEP_CONST
111:	1
112:	STEP_REFCNT
113:	STEP_DROP
114:	STEP_CONST
115:	0
116:	STEP_PUSH_FP
117:	STEP_CALL_SECONDARY
118:	457
119:	STEP_PRINT
120:	STEP_CRLF
121:	STEP_CONST
122:	12
123:	STEP_PUSH_FP
124:	STEP_CALL_SECONDARY
125:	194
126:	STEP_CONST
127:	F12: 
128:	STEP_PUSH_FP
129:	STEP_CONST
130:	5
131:	STEP_ADD
132:	STEP_FETCH_STACK
133:	STEP_DUP
134:	STEP_CONST
135:	1
136:	STEP_REFCNT
137:	STEP_DROP
138:	STEP_CONST
139:	0
140:	STEP_PUSH_FP
141:	STEP_CALL_SECONDARY
142:	457
143:	STEP_PRINT
144:	STEP_CRLF
145:	STEP_CONST
146:	123456789
147:	STEP_PUSH_FP
148:	STEP_CALL_SECONDARY
149:	194
150:	STEP_CONST
151:	F123456789: 
152:	STEP_PUSH_FP
153:	STEP_CONST
154:	6
155:	STEP_ADD
156:	STEP_FETCH_STACK
157:	STEP_DUP
158:	STEP_CONST
159:	1
160:	STEP_REFCNT
161:	STEP_DROP
162:	STEP_CONST
163:	0
164:	STEP_PUSH_FP
165:	STEP_CALL_SECONDARY
166:	457
167:	STEP_PRINT
168:	STEP_CRLF
169:	STEP_CONST
170:	1073741824
171:	STEP_PUSH_FP
172:	STEP_CALL_SECONDARY
173:	194
174:	STEP_CONST
175:	twoTo30: 
176:	STEP_PUSH_FP
177:	STEP_CONST
178:	7
179:	STEP_ADD
180:	STEP_FETCH_STACK
181:	STEP_DUP
182:	STEP_CONST
183:	1
184:	STEP_REFCNT
185:	STEP_DROP
186:	STEP_CONST
187:	0
188:	STEP_PUSH_FP
189:	STEP_CALL_SECONDARY
190:	457
191:	STEP_PRINT
192:	STEP_CRLF
193:	STEP_PAUSE
194*	FUNCTION outer scope::factor1	***************
194:	STEP_PUSH_FP
195:	STEP_CONST
196:	-2
197:	STEP_ADD
198:	STEP_FETCH_STACK
199:	STEP_CONST
200:	1
201:	STEP_GT
202:	STEP_GOTO0
203:	239
204:	STEP_CONST
205:	Good parameter to factor1:
206:	STEP_PRINT
207:	STEP_CRLF
208:	STEP_PUSH_FP
209:	STEP_CONST
210:	-2
211:	STEP_ADD
212:	STEP_FETCH_STACK
213:	STEP_PRINT
214:	STEP_CRLF
215:	STEP_PUSH_FP
216:	STEP_CONST
217:	-2
218:	STEP_ADD
219:	STEP_FETCH_STACK
220:	STEP_CONST
221:	2
222:	STEP_CONST
223:	0
224:	STEP_ALLOC
225:	STEP_DUP
226:	STEP_CONST
227:	-1
228:	STEP_ARRAYCPY
229:	STEP_SWAP
230:	STEP_CONST
231:	-1
232:	STEP_REFCNT
233:	STEP_DROP
234:	STEP_PUSH_FP
235:	STEP_CALL_SECONDARY
236:	265
237:	STEP_GOTO
238:	253
239:	STEP_CONST
240:	Bad parameter to factor1: 
241:	STEP_PRINT
242:	STEP_CRLF
243:	STEP_PUSH_FP
244:	STEP_CONST
245:	-2
246:	STEP_ADD
247:	STEP_FETCH_STACK
248:	STEP_PRINT
249:	STEP_CRLF
250:	STEP_CONST
251:	0
252:	STEP_ALLOC
253:	STEP_CONST
254:	0
255:	STEP_STORE
256:	STEP_CONST
257:	-2
258:	STEP_CONST
259:	-1
260:	STEP_DROPFRAME
261:	STEP_CONST
262:	0
263:	STEP_FETCH
264:	STEP_RETURN
265*	FUNCTION outer scope::factor1::helpFactor	***************
265:	STEP_PUSH_FP
266:	STEP_CONST
267:	-3
268:	STEP_ADD
269:	STEP_FETCH_STACK
270:	STEP_PUSH_FP
271:	STEP_CONST
272:	-4
273:	STEP_ADD
274:	STEP_FETCH_STACK
275:	STEP_LT
276:	STEP_GOTO0
277:	399
278:	STEP_PUSH_FP
279:	STEP_CONST
280:	-4
281:	STEP_ADD
282:	STEP_FETCH_STACK
283:	STEP_PUSH_FP
284:	STEP_CONST
285:	-3
286:	STEP_ADD
287:	STEP_FETCH_STACK
288:	STEP_MOD
289:	STEP_CONST
290:	0
291:	STEP_EQ
292:	STEP_GOTO0
293:	353
294:	STEP_PUSH_FP
295:	STEP_CONST
296:	-4
297:	STEP_ADD
298:	STEP_FETCH_STACK
299:	STEP_PUSH_FP
300:	STEP_CONST
301:	-3
302:	STEP_ADD
303:	STEP_FETCH_STACK
304:	STEP_DIV
305:	STEP_CONST
306:	2
307:	STEP_PUSH_FP
308:	STEP_CONST
309:	-2
310:	STEP_ADD
311:	STEP_FETCH_STACK
312:	STEP_DUP
313:	STEP_CONST
314:	1
315:	STEP_REFCNT
316:	STEP_DROP
317:	STEP_CONST
318:	1
319:	STEP_ALLOC
320:	STEP_PUSH_FP
321:	STEP_CONST
322:	-3
323:	STEP_ADD
324:	STEP_FETCH_STACK
325:	STEP_OVER
326:	STEP_CONST
327:	0
328:	STEP_ADD
329:	STEP_STORE
330:	STEP_OVER
331:	STEP_OVER
332:	STEP_CONST
333:	0
334:	STEP_ARRAYCAT
335:	STEP_SWAP2
336:	STEP_CONST
337:	-1
338:	STEP_REFCNT
339:	STEP_DROP
340:	STEP_CONST
341:	-1
342:	STEP_REFCNT
343:	STEP_DROP
344:	STEP_PUSH_FP
345:	STEP_CONST
346:	-1
347:	STEP_ADD
348:	STEP_FETCH_STACK
349:	STEP_CALL_SECONDARY
350:	265
351:	STEP_GOTO
352:	397
353:	STEP_PUSH_FP
354:	STEP_CONST
355:	-4
356:	STEP_ADD
357:	STEP_FETCH_STACK
358:	STEP_PUSH_FP
359:	STEP_CONST
360:	-3
361:	STEP_ADD
362:	STEP_FETCH_STACK
363:	STEP_CONST
364:	2
365:	STEP_EQ
366:	STEP_GOTO0
367:	372
368:	STEP_CONST
369:	3
370:	STEP_GOTO
371:	380
372:	STEP_PUSH_FP
373:	STEP_CONST
374:	-3
375:	STEP_ADD
376:	STEP_FETCH_STACK
377:	STEP_CONST
378:	2
379:	STEP_ADD
380:	STEP_PUSH_FP
381:	STEP_CONST
382:	-2
383:	STEP_ADD
384:	STEP_FETCH_STACK
385:	STEP_DUP
386:	STEP_CONST
387:	1
388:	STEP_REFCNT
389:	STEP_DROP
390:	STEP_PUSH_FP
391:	STEP_CONST
392:	-1
393:	STEP_ADD
394:	STEP_FETCH_STACK
395:	STEP_CALL_SECONDARY
396:	265
397:	STEP_GOTO
398:	436
399:	STEP_PUSH_FP
400:	STEP_CONST
401:	-2
402:	STEP_ADD
403:	STEP_FETCH_STACK
404:	STEP_DUP
405:	STEP_CONST
406:	1
407:	STEP_REFCNT
408:	STEP_DROP
409:	STEP_CONST
410:	1
411:	STEP_ALLOC
412:	STEP_PUSH_FP
413:	STEP_CONST
414:	-4
415:	STEP_ADD
416:	STEP_FETCH_STACK
417:	STEP_OVER
418:	STEP_CONST
419:	0
420:	STEP_ADD
421:	STEP_STORE
422:	STEP_OVER
423:	STEP_OVER
424:	STEP_CONST
425:	0
426:	STEP_ARRAYCAT
427:	STEP_SWAP2
428:	STEP_CONST
429:	-1
430:	STEP_REFCNT
431:	STEP_DROP
432:	STEP_CONST
433:	-1
434:	STEP_REFCNT
435:	STEP_DROP
436:	STEP_CONST
437:	0
438:	STEP_STORE
439:	STEP_PUSH_FP
440:	STEP_CONST
441:	-2
442:	STEP_ADD
443:	STEP_FETCH_STACK
444:	STEP_CONST
445:	-1
446:	STEP_REFCNT
447:	STEP_DROP
448:	STEP_CONST
449:	-4
450:	STEP_CONST
451:	-1
452:	STEP_DROPFRAME
453:	STEP_CONST
454:	0
455:	STEP_FETCH
456:	STEP_RETURN
457*	FUNCTION outer scope::printiarray	***************
457:	STEP_PUSH_FP
458:	STEP_CONST
459:	-2
460:	STEP_ADD
461:	STEP_FETCH_STACK
462:	STEP_CONST
463:	1
464:	STEP_MINUS
465:	STEP_GT
466:	STEP_DUP
467:	STEP_GOTO0
468:	494
469:	STEP_DROP
470:	STEP_PUSH_FP
471:	STEP_CONST
472:	-2
473:	STEP_ADD
474:	STEP_FETCH_STACK
475:	STEP_PUSH_FP
476:	STEP_CONST
477:	-3
478:	STEP_ADD
479:	STEP_FETCH_STACK
480:	STEP_DUP
481:	STEP_CONST
482:	1
483:	STEP_REFCNT
484:	STEP_DROP
485:	STEP_DUP
486:	STEP_SUB1
487:	STEP_FETCH
488:	STEP_SWAP
489:	STEP_CONST
490:	-1
491:	STEP_REFCNT
492:	STEP_DROP
493:	STEP_LT
494:	STEP_GOTO0
495:	545
496:	STEP_PUSH_FP
497:	STEP_CONST
498:	-4
499:	STEP_ADD
500:	STEP_FETCH_STACK
501:	STEP_CONST
502:	 
503:	STEP_ADD
504:	STEP_PUSH_FP
505:	STEP_CONST
506:	-3
507:	STEP_ADD
508:	STEP_FETCH_STACK
509:	STEP_PUSH_FP
510:	STEP_CONST
511:	-2
512:	STEP_ADD
513:	STEP_FETCH_STACK
514:	STEP_ADD
515:	STEP_FETCH
516:	STEP_CAST_STRING
517:	STEP_ADD
518:	STEP_PUSH_FP
519:	STEP_CONST
520:	-3
521:	STEP_ADD
522:	STEP_FETCH_STACK
523:	STEP_DUP
524:	STEP_CONST
525:	1
526:	STEP_REFCNT
527:	STEP_DROP
528:	STEP_PUSH_FP
529:	STEP_CONST
530:	-2
531:	STEP_ADD
532:	STEP_FETCH_STACK
533:	STEP_CONST
534:	1
535:	STEP_ADD
536:	STEP_PUSH_FP
537:	STEP_CONST
538:	-1
539:	STEP_ADD
540:	STEP_FETCH_STACK
541:	STEP_CALL_SECONDARY
542:	457
543:	STEP_GOTO
544:	550
545:	STEP_PUSH_FP
546:	STEP_CONST
547:	-4
548:	STEP_ADD
549:	STEP_FETCH_STACK
550:	STEP_CONST
551:	0
552:	STEP_STORE
553:	STEP_PUSH_FP
554:	STEP_CONST
555:	-3
556:	STEP_ADD
557:	STEP_FETCH_STACK
558:	STEP_CONST
559:	-1
560:	STEP_REFCNT
561:	STEP_DROP
562:	STEP_CONST
563:	-4
564:	STEP_CONST
565:	-1
566:	STEP_DROPFRAME
567:	STEP_CONST
568:	0
569:	STEP_FETCH
570:	STEP_RETURN
UNINTERPRETED DUMP OF THE ENTIRE DATA_DICTIONARY:
[   'twoTo30:  2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2',
    59,
    4,
    9223372036854775807,
    0,
    4,
    16,
    0,
    59,
    44,
    5,
    11,
    0,
    None,
    None,
    2,
    6,
    5,
    0,
    None,
    None,
    16,
    7,
    1,
    3,
    3,
    3,
    3,
    7,
    7,
    1,
    3,
    2,
    2,
    3,
    7,
    8,
    1,
    4,
    2,
    2,
    2,
    2,
    8,
    7,
    0,
    6,
    None,
    2,
    2,
    7,
    8,
    1,
    4,
    3,
    3,
    3607,
    3803,
    8,
    533,
    0,
    None,
    6,
    2,
    2,
    2,
    8,
    525,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    9,
    516,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    10,
    506,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    11,
    495,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    12,
    483,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    13,
    470,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    14,
    456,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    15,
    441,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    16,
    425,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    17,
    408,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    18,
    390,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    19,
    371,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    20,
    351,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    21,
    330,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    22,
    308,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    23,
    285,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    24,
    261,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    25,
    236,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    26,
    210,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    27,
    183,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    28,
    155,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    29,
    126,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    30,
    96,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    31,
    65,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    32,
    33,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    533,
    34,
    1,
    30,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    34]
DEBUG HEAP: size of data_dictionary = 626.
DEBUG HEAP: free list pointer at location 1 = 59.
DEBUG HEAP @ 2: HDR=4|RFC=9223372036854775807|0|4
FOOTER@5 = 4.
DEBUG HEAP @ 6: HDR=16|RFC=0|59|44
FOOTER@21 = 16.
DEBUG HEAP @ 22: HDR=7|RFC=1|3|3
FOOTER@28 = 7.
	[0] = 3
	[1] = 3
	[2] = 3
DEBUG HEAP @ 29: HDR=7|RFC=1|3|2
FOOTER@35 = 7.
	[0] = 2
	[1] = 2
	[2] = 3
DEBUG HEAP @ 36: HDR=8|RFC=1|4|2
FOOTER@43 = 8.
	[0] = 2
	[1] = 2
	[2] = 2
	[3] = 2
DEBUG HEAP @ 44: HDR=7|RFC=0|6|None
FOOTER@50 = 7.
DEBUG HEAP @ 51: HDR=8|RFC=1|4|3
FOOTER@58 = 8.
	[0] = 3
	[1] = 3
	[2] = 3607
	[3] = 3803
DEBUG HEAP @ 59: HDR=533|RFC=0|None|6
FOOTER@591 = 533.
DEBUG HEAP @ 592: HDR=34|RFC=1|30|2
FOOTER@625 = 34.
	[0] = 2
	[1] = 2
	[2] = 2
	[3] = 2
	[4] = 2
	[5] = 2
	[6] = 2
	[7] = 2
	[8] = 2
	[9] = 2
	[10] = 2
	[11] = 2
	[12] = 2
	[13] = 2
	[14] = 2
	[15] = 2
	[16] = 2
	[17] = 2
	[18] = 2
	[19] = 2
	[20] = 2
	[21] = 2
	[22] = 2
	[23] = 2
	[24] = 2
	[25] = 2
	[26] = 2
	[27] = 2
	[28] = 2
	[29] = 2
DEBUG FREE LIST ENTRY @ 59: HDR=533|RFC=0|None|6.
DEBUG FREE LIST ENTRY @ 6: HDR=16|RFC=0|59|44.
DEBUG FREE LIST ENTRY @ 44: HDR=7|RFC=0|6|None.
