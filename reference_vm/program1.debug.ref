PROGRAM MID LINK BEFORE BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	2
2:	STEP_CONST
3:	3
4:	STEP_PUSH_FP
5:	STEP_CONST
6:	0
7:	STEP_ADD
8:	STEP_FETCH_STACK
9:	STEP_ADD
10:	STEP_PUSH_FP
11:	STEP_CONST
12:	0
13:	STEP_ADD
14:	STEP_FETCH_STACK
15:	STEP_PUSH_FP
16:	STEP_CONST
17:	1
18:	STEP_ADD
19:	STEP_FETCH_STACK
20:	STEP_CAST_FLOAT
21:	STEP_PUSH_FP
22:	STEP_CALL_SECONDARY
23:	['func', 'f', 'int', (('b', ('typedecl', 'int')), ('c', ('typedecl', 'float'))), {'c': ('var', 'c', 'float', -2), 'b': ('var', 'b', 'int', -3), '#funcs': 1, '#locals': 1, '#depth': 1, 'innerf': ['func', 'innerf', 'int', (('count', ('typedecl', 'int')), ('text', ('typedecl', 'string'))), {'count': ('var', 'count', 'int', -3), 'a': ('symref', 'a', 2, {'a': ('var', 'a', 'int', 0), 'f1': ('var', 'f1', 'float', 2), 'f2': ('var', 'f2', 'float', 3), 'b': ('var', 'b', 'int', 1), '#funcs': 1, 'f': [...], '#locals': 5, '#depth': 0, 's': ('var', 's', 'string', 4), '#params': 0}), '#funcs': 0, '#locals': 1, 'text': ('var', 'text', 'string', -2), '#depth': 2, '#params': 2, 'x': ('var', 'x', 'int', 0)}, 124], '#params': 2, 'x': ('var', 'x', 'int', 0)}, 63]
24:	STEP_PRINT
25:	STEP_CRLF
26:	STEP_CONST
27:	3
28:	STEP_PRINT
29:	STEP_CRLF
30:	STEP_CONST
31:	3
32:	STEP_CAST_FLOAT
33:	STEP_PUSH_FP
34:	STEP_CONST
35:	2
36:	STEP_ADD
37:	STEP_FETCH_STACK
38:	STEP_PRINT
39:	STEP_CRLF
40:	STEP_PUSH_FP
41:	STEP_CONST
42:	2
43:	STEP_ADD
44:	STEP_FETCH_STACK
45:	STEP_CAST_INT
46:	STEP_CONST
47:	3
48:	STEP_CAST_FLOAT
49:	STEP_PUSH_FP
50:	STEP_CALL_SECONDARY
51:	['func', 'f', 'int', (('b', ('typedecl', 'int')), ('c', ('typedecl', 'float'))), {'c': ('var', 'c', 'float', -2), 'b': ('var', 'b', 'int', -3), '#funcs': 1, '#locals': 1, '#depth': 1, 'innerf': ['func', 'innerf', 'int', (('count', ('typedecl', 'int')), ('text', ('typedecl', 'string'))), {'count': ('var', 'count', 'int', -3), 'a': ('symref', 'a', 2, {'a': ('var', 'a', 'int', 0), 'f1': ('var', 'f1', 'float', 2), 'f2': ('var', 'f2', 'float', 3), 'b': ('var', 'b', 'int', 1), '#funcs': 1, 'f': [...], '#locals': 5, '#depth': 0, 's': ('var', 's', 'string', 4), '#params': 0}), '#funcs': 0, '#locals': 1, 'text': ('var', 'text', 'string', -2), '#depth': 2, '#params': 2, 'x': ('var', 'x', 'int', 0)}, 124], '#params': 2, 'x': ('var', 'x', 'int', 0)}, 63]
52:	STEP_CAST_FLOAT
53:	STEP_CONST
54:	my string
55:	STEP_PUSH_FP
56:	STEP_CONST
57:	4
58:	STEP_ADD
59:	STEP_FETCH_STACK
60:	STEP_PRINT
61:	STEP_CRLF
62:	STEP_PAUSE
63*	FUNCTION outer scope::f	***************
63:	STEP_PUSH_FP
64:	STEP_CONST
65:	-3
66:	STEP_ADD
67:	STEP_FETCH_STACK
68:	STEP_PRINT
69:	STEP_CRLF
70:	STEP_PUSH_FP
71:	STEP_CONST
72:	-2
73:	STEP_ADD
74:	STEP_FETCH_STACK
75:	STEP_PRINT
76:	STEP_CRLF
77:	STEP_CONST
78:	5
79:	STEP_PUSH_FP
80:	STEP_CONST
81:	-3
82:	STEP_ADD
83:	STEP_FETCH_STACK
84:	STEP_MULT
85:	STEP_PUSH_FP
86:	STEP_CONST
87:	0
88:	STEP_ADD
89:	STEP_FETCH_STACK
90:	STEP_CONST
91:	7
92:	STEP_GT
93:	STEP_GOTO0
94:	(11,)
95:	STEP_PUSH_FP
96:	STEP_CONST
97:	0
98:	STEP_ADD
99:	STEP_FETCH_STACK
100:	STEP_CONST
101:	3
102:	STEP_ADD
103:	STEP_GOTO
104:	(8,)
105:	STEP_CONST
106:	3
107:	STEP_CONST
108:	stringarg
109:	STEP_PUSH_FP
110:	STEP_CALL_SECONDARY
111:	['func', 'innerf', 'int', (('count', ('typedecl', 'int')), ('text', ('typedecl', 'string'))), {'count': ('var', 'count', 'int', -3), 'a': ('symref', 'a', 2, {'a': ('var', 'a', 'int', 0), 'f1': ('var', 'f1', 'float', 2), 'f2': ('var', 'f2', 'float', 3), 'b': ('var', 'b', 'int', 1), '#funcs': 1, 'f': ['func', 'f', 'int', (('b', ('typedecl', 'int')), ('c', ('typedecl', 'float'))), {'c': ('var', 'c', 'float', -2), 'b': ('var', 'b', 'int', -3), '#funcs': 1, '#locals': 1, '#depth': 1, 'innerf': [...], '#params': 2, 'x': ('var', 'x', 'int', 0)}, 63], '#locals': 5, '#depth': 0, 's': ('var', 's', 'string', 4), '#params': 0}), '#funcs': 0, '#locals': 1, 'text': ('var', 'text', 'string', -2), '#depth': 2, '#params': 2, 'x': ('var', 'x', 'int', 0)}, 124]
112:	STEP_CONST
113:	0
114:	STEP_STORE
115:	STEP_CONST
116:	-3
117:	STEP_CONST
118:	0
119:	STEP_DROPFRAME
120:	STEP_CONST
121:	0
122:	STEP_FETCH
123:	STEP_RETURN
124*	FUNCTION outer scope::f::innerf	***************
124:	STEP_PUSH_FP
125:	STEP_CONST
126:	-1
127:	STEP_ADD
128:	STEP_FETCH_STACK
129:	STEP_CONST
130:	-1
131:	STEP_ADD
132:	STEP_FETCH_STACK
133:	STEP_CONST
134:	0
135:	STEP_ADD
136:	STEP_FETCH_STACK
137:	STEP_CONST
138:	2
139:	STEP_MOD
140:	STEP_PUSH_FP
141:	STEP_CONST
142:	-2
143:	STEP_ADD
144:	STEP_FETCH_STACK
145:	STEP_PRINT
146:	STEP_CRLF
147:	STEP_PUSH_FP
148:	STEP_CONST
149:	-1
150:	STEP_ADD
151:	STEP_FETCH_STACK
152:	STEP_CONST
153:	-1
154:	STEP_ADD
155:	STEP_FETCH_STACK
156:	STEP_CONST
157:	0
158:	STEP_ADD
159:	STEP_FETCH_STACK
160:	STEP_CONST
161:	0
162:	STEP_STORE
163:	STEP_CONST
164:	-3
165:	STEP_CONST
166:	0
167:	STEP_DROPFRAME
168:	STEP_CONST
169:	0
170:	STEP_FETCH
171:	STEP_RETURN
PROGRAM LINK AFTER BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	2
2:	STEP_CONST
3:	3
4:	STEP_PUSH_FP
5:	STEP_CONST
6:	0
7:	STEP_ADD
8:	STEP_FETCH_STACK
9:	STEP_ADD
10:	STEP_PUSH_FP
11:	STEP_CONST
12:	0
13:	STEP_ADD
14:	STEP_FETCH_STACK
15:	STEP_PUSH_FP
16:	STEP_CONST
17:	1
18:	STEP_ADD
19:	STEP_FETCH_STACK
20:	STEP_CAST_FLOAT
21:	STEP_PUSH_FP
22:	STEP_CALL_SECONDARY
23:	63
24:	STEP_PRINT
25:	STEP_CRLF
26:	STEP_CONST
27:	3
28:	STEP_PRINT
29:	STEP_CRLF
30:	STEP_CONST
31:	3
32:	STEP_CAST_FLOAT
33:	STEP_PUSH_FP
34:	STEP_CONST
35:	2
36:	STEP_ADD
37:	STEP_FETCH_STACK
38:	STEP_PRINT
39:	STEP_CRLF
40:	STEP_PUSH_FP
41:	STEP_CONST
42:	2
43:	STEP_ADD
44:	STEP_FETCH_STACK
45:	STEP_CAST_INT
46:	STEP_CONST
47:	3
48:	STEP_CAST_FLOAT
49:	STEP_PUSH_FP
50:	STEP_CALL_SECONDARY
51:	63
52:	STEP_CAST_FLOAT
53:	STEP_CONST
54:	my string
55:	STEP_PUSH_FP
56:	STEP_CONST
57:	4
58:	STEP_ADD
59:	STEP_FETCH_STACK
60:	STEP_PRINT
61:	STEP_CRLF
62:	STEP_PAUSE
63*	FUNCTION outer scope::f	***************
63:	STEP_PUSH_FP
64:	STEP_CONST
65:	-3
66:	STEP_ADD
67:	STEP_FETCH_STACK
68:	STEP_PRINT
69:	STEP_CRLF
70:	STEP_PUSH_FP
71:	STEP_CONST
72:	-2
73:	STEP_ADD
74:	STEP_FETCH_STACK
75:	STEP_PRINT
76:	STEP_CRLF
77:	STEP_CONST
78:	5
79:	STEP_PUSH_FP
80:	STEP_CONST
81:	-3
82:	STEP_ADD
83:	STEP_FETCH_STACK
84:	STEP_MULT
85:	STEP_PUSH_FP
86:	STEP_CONST
87:	0
88:	STEP_ADD
89:	STEP_FETCH_STACK
90:	STEP_CONST
91:	7
92:	STEP_GT
93:	STEP_GOTO0
94:	105
95:	STEP_PUSH_FP
96:	STEP_CONST
97:	0
98:	STEP_ADD
99:	STEP_FETCH_STACK
100:	STEP_CONST
101:	3
102:	STEP_ADD
103:	STEP_GOTO
104:	112
105:	STEP_CONST
106:	3
107:	STEP_CONST
108:	stringarg
109:	STEP_PUSH_FP
110:	STEP_CALL_SECONDARY
111:	124
112:	STEP_CONST
113:	0
114:	STEP_STORE
115:	STEP_CONST
116:	-3
117:	STEP_CONST
118:	0
119:	STEP_DROPFRAME
120:	STEP_CONST
121:	0
122:	STEP_FETCH
123:	STEP_RETURN
124*	FUNCTION outer scope::f::innerf	***************
124:	STEP_PUSH_FP
125:	STEP_CONST
126:	-1
127:	STEP_ADD
128:	STEP_FETCH_STACK
129:	STEP_CONST
130:	-1
131:	STEP_ADD
132:	STEP_FETCH_STACK
133:	STEP_CONST
134:	0
135:	STEP_ADD
136:	STEP_FETCH_STACK
137:	STEP_CONST
138:	2
139:	STEP_MOD
140:	STEP_PUSH_FP
141:	STEP_CONST
142:	-2
143:	STEP_ADD
144:	STEP_FETCH_STACK
145:	STEP_PRINT
146:	STEP_CRLF
147:	STEP_PUSH_FP
148:	STEP_CONST
149:	-1
150:	STEP_ADD
151:	STEP_FETCH_STACK
152:	STEP_CONST
153:	-1
154:	STEP_ADD
155:	STEP_FETCH_STACK
156:	STEP_CONST
157:	0
158:	STEP_ADD
159:	STEP_FETCH_STACK
160:	STEP_CONST
161:	0
162:	STEP_STORE
163:	STEP_CONST
164:	-3
165:	STEP_CONST
166:	0
167:	STEP_DROPFRAME
168:	STEP_CONST
169:	0
170:	STEP_FETCH
171:	STEP_RETURN
UNINTERPRETED DUMP OF THE ENTIRE DATA_DICTIONARY:
[18, None, 4, 9223372036854775807, 0, 4]
DEBUG HEAP: size of data_dictionary = 6.
DEBUG HEAP: free list pointer at location 1 = None.
DEBUG HEAP @ 2: HDR=4|RFC=9223372036854775807|0|4
FOOTER@5 = 4.
