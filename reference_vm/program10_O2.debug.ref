PROGRAM MID LINK BEFORE BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	123456789
2:	STEP_PUSH_FP
3:	STEP_CALL_SECONDARY
4:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97]
5:	STEP_CONST
6:	F123456789: 
7:	STEP_PUSH_FP
8:	STEP_CONST
9:	0
10:	STEP_ADD
11:	STEP_FETCH_STACK
12:	STEP_DUP
13:	STEP_CONST
14:	1
15:	STEP_REFCNT
16:	STEP_DROP
17:	STEP_CONST
18:	0
19:	STEP_PUSH_FP
20:	STEP_CALL_SECONDARY
21:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97], '#funcs': 2, 'twoTo30Plus51': ('var', 'twoTo30Plus51', 'int[]', 2), '#locals': 4, '#depth': 0, 'twoTo30PlusFiftyOne': ('var', 'twoTo30PlusFiftyOne', 'int[]', 3), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 1), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 0)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 388]
22:	STEP_PRINT
23:	STEP_CRLF
24:	STEP_CONST
25:	1073741824
26:	STEP_PUSH_FP
27:	STEP_CALL_SECONDARY
28:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97]
29:	STEP_CONST
30:	twoTo30: 
31:	STEP_PUSH_FP
32:	STEP_CONST
33:	1
34:	STEP_ADD
35:	STEP_FETCH_STACK
36:	STEP_DUP
37:	STEP_CONST
38:	1
39:	STEP_REFCNT
40:	STEP_DROP
41:	STEP_CONST
42:	0
43:	STEP_PUSH_FP
44:	STEP_CALL_SECONDARY
45:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97], '#funcs': 2, 'twoTo30Plus51': ('var', 'twoTo30Plus51', 'int[]', 2), '#locals': 4, '#depth': 0, 'twoTo30PlusFiftyOne': ('var', 'twoTo30PlusFiftyOne', 'int[]', 3), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 1), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 0)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 388]
46:	STEP_PRINT
47:	STEP_CRLF
48:	STEP_CONST
49:	1073741875
50:	STEP_PUSH_FP
51:	STEP_CALL_SECONDARY
52:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97]
53:	STEP_CONST
54:	twoTo30Plus51: 
55:	STEP_PUSH_FP
56:	STEP_CONST
57:	2
58:	STEP_ADD
59:	STEP_FETCH_STACK
60:	STEP_DUP
61:	STEP_CONST
62:	1
63:	STEP_REFCNT
64:	STEP_DROP
65:	STEP_CONST
66:	0
67:	STEP_PUSH_FP
68:	STEP_CALL_SECONDARY
69:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97], '#funcs': 2, 'twoTo30Plus51': ('var', 'twoTo30Plus51', 'int[]', 2), '#locals': 4, '#depth': 0, 'twoTo30PlusFiftyOne': ('var', 'twoTo30PlusFiftyOne', 'int[]', 3), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 1), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 0)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 388]
70:	STEP_PRINT
71:	STEP_CRLF
72:	STEP_CONST
73:	1073741875
74:	STEP_PUSH_FP
75:	STEP_CALL_SECONDARY
76:	['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97]
77:	STEP_CONST
78:	twoTo30PlusFiftyOne: 
79:	STEP_PUSH_FP
80:	STEP_CONST
81:	3
82:	STEP_ADD
83:	STEP_FETCH_STACK
84:	STEP_DUP
85:	STEP_CONST
86:	1
87:	STEP_REFCNT
88:	STEP_DROP
89:	STEP_CONST
90:	0
91:	STEP_PUSH_FP
92:	STEP_CALL_SECONDARY
93:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97], '#funcs': 2, 'twoTo30Plus51': ('var', 'twoTo30Plus51', 'int[]', 2), '#locals': 4, '#depth': 0, 'twoTo30PlusFiftyOne': ('var', 'twoTo30PlusFiftyOne', 'int[]', 3), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 1), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 0)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 388]
94:	STEP_PRINT
95:	STEP_CRLF
96:	STEP_PAUSE
97*	FUNCTION outer scope::factor1	***************
97:	STEP_PUSH_FP
98:	STEP_CONST
99:	-2
100:	STEP_ADD
101:	STEP_FETCH_STACK
102:	STEP_CONST
103:	1
104:	STEP_GT
105:	STEP_GOTO0
106:	(36,)
107:	STEP_CONST
108:	Good parameter to factor1:
109:	STEP_PRINT
110:	STEP_CRLF
111:	STEP_PUSH_FP
112:	STEP_CONST
113:	-2
114:	STEP_ADD
115:	STEP_FETCH_STACK
116:	STEP_PRINT
117:	STEP_CRLF
118:	STEP_PUSH_FP
119:	STEP_CONST
120:	-2
121:	STEP_ADD
122:	STEP_FETCH_STACK
123:	STEP_CONST
124:	2
125:	STEP_CONST
126:	0
127:	STEP_ALLOC
128:	STEP_DUP
129:	STEP_CONST
130:	-1
131:	STEP_ARRAYCPY
132:	STEP_SWAP
133:	STEP_CONST
134:	-1
135:	STEP_REFCNT
136:	STEP_DROP
137:	STEP_PUSH_FP
138:	STEP_CALL_SECONDARY
139:	['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 168]
140:	STEP_GOTO
141:	(15,)
142:	STEP_CONST
143:	Bad parameter to factor1: 
144:	STEP_PRINT
145:	STEP_CRLF
146:	STEP_PUSH_FP
147:	STEP_CONST
148:	-2
149:	STEP_ADD
150:	STEP_FETCH_STACK
151:	STEP_PRINT
152:	STEP_CRLF
153:	STEP_CONST
154:	0
155:	STEP_ALLOC
156:	STEP_CONST
157:	0
158:	STEP_STORE
159:	STEP_CONST
160:	-2
161:	STEP_CONST
162:	-1
163:	STEP_DROPFRAME
164:	STEP_CONST
165:	0
166:	STEP_FETCH
167:	STEP_RETURN
168*	FUNCTION outer scope::factor1::helpFactor	***************
168:	STEP_PUSH_FP
169:	STEP_CONST
170:	-3
171:	STEP_ADD
172:	STEP_FETCH_STACK
173:	STEP_PUSH_FP
174:	STEP_CONST
175:	-4
176:	STEP_ADD
177:	STEP_FETCH_STACK
178:	STEP_LT
179:	STEP_GOTO0
180:	(150,)
181:	STEP_PUSH_FP
182:	STEP_CONST
183:	-4
184:	STEP_ADD
185:	STEP_FETCH_STACK
186:	STEP_PUSH_FP
187:	STEP_CONST
188:	-3
189:	STEP_ADD
190:	STEP_FETCH_STACK
191:	STEP_MOD
192:	STEP_CONST
193:	0
194:	STEP_EQ
195:	STEP_GOTO0
196:	(74,)
197:	STEP_PUSH_FP
198:	STEP_CONST
199:	-4
200:	STEP_ADD
201:	STEP_FETCH_STACK
202:	STEP_PUSH_FP
203:	STEP_CONST
204:	-3
205:	STEP_ADD
206:	STEP_FETCH_STACK
207:	STEP_DIV
208:	STEP_CONST
209:	2
210:	STEP_PUSH_FP
211:	STEP_CONST
212:	-2
213:	STEP_ADD
214:	STEP_FETCH_STACK
215:	STEP_DUP
216:	STEP_CONST
217:	1
218:	STEP_REFCNT
219:	STEP_DROP
220:	STEP_CONST
221:	1
222:	STEP_ALLOC
223:	STEP_PUSH_FP
224:	STEP_CONST
225:	-3
226:	STEP_ADD
227:	STEP_FETCH_STACK
228:	STEP_OVER
229:	STEP_CONST
230:	0
231:	STEP_ADD
232:	STEP_STORE
233:	STEP_OVER
234:	STEP_OVER
235:	STEP_CONST
236:	0
237:	STEP_ARRAYCAT
238:	STEP_SWAP2
239:	STEP_CONST
240:	-1
241:	STEP_REFCNT
242:	STEP_DROP
243:	STEP_CONST
244:	-1
245:	STEP_REFCNT
246:	STEP_DROP
247:	STEP_PUSH_FP
248:	STEP_CONST
249:	-1
250:	STEP_ADD
251:	STEP_FETCH_STACK
252:	STEP_PUSH_FP
253:	STEP_CONST
254:	-2
255:	STEP_ADD
256:	STEP_FETCH_STACK
257:	STEP_CONST
258:	-1
259:	STEP_REFCNT
260:	STEP_DROP
261:	STEP_CONST
262:	-4
263:	STEP_CONST
264:	-1
265:	STEP_DROPFRAME
266:	STEP_GOTO
267:	['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 168]
268:	STEP_GOTO
269:	(59,)
270:	STEP_PUSH_FP
271:	STEP_CONST
272:	-4
273:	STEP_ADD
274:	STEP_FETCH_STACK
275:	STEP_PUSH_FP
276:	STEP_CONST
277:	-3
278:	STEP_ADD
279:	STEP_FETCH_STACK
280:	STEP_CONST
281:	2
282:	STEP_EQ
283:	STEP_GOTO0
284:	(5,)
285:	STEP_CONST
286:	3
287:	STEP_GOTO
288:	(9,)
289:	STEP_PUSH_FP
290:	STEP_CONST
291:	-3
292:	STEP_ADD
293:	STEP_FETCH_STACK
294:	STEP_CONST
295:	2
296:	STEP_ADD
297:	STEP_PUSH_FP
298:	STEP_CONST
299:	-2
300:	STEP_ADD
301:	STEP_FETCH_STACK
302:	STEP_DUP
303:	STEP_CONST
304:	1
305:	STEP_REFCNT
306:	STEP_DROP
307:	STEP_PUSH_FP
308:	STEP_CONST
309:	-1
310:	STEP_ADD
311:	STEP_FETCH_STACK
312:	STEP_PUSH_FP
313:	STEP_CONST
314:	-2
315:	STEP_ADD
316:	STEP_FETCH_STACK
317:	STEP_CONST
318:	-1
319:	STEP_REFCNT
320:	STEP_DROP
321:	STEP_CONST
322:	-4
323:	STEP_CONST
324:	-1
325:	STEP_DROPFRAME
326:	STEP_GOTO
327:	['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 168]
328:	STEP_GOTO
329:	(38,)
330:	STEP_PUSH_FP
331:	STEP_CONST
332:	-2
333:	STEP_ADD
334:	STEP_FETCH_STACK
335:	STEP_DUP
336:	STEP_CONST
337:	1
338:	STEP_REFCNT
339:	STEP_DROP
340:	STEP_CONST
341:	1
342:	STEP_ALLOC
343:	STEP_PUSH_FP
344:	STEP_CONST
345:	-4
346:	STEP_ADD
347:	STEP_FETCH_STACK
348:	STEP_OVER
349:	STEP_CONST
350:	0
351:	STEP_ADD
352:	STEP_STORE
353:	STEP_OVER
354:	STEP_OVER
355:	STEP_CONST
356:	0
357:	STEP_ARRAYCAT
358:	STEP_SWAP2
359:	STEP_CONST
360:	-1
361:	STEP_REFCNT
362:	STEP_DROP
363:	STEP_CONST
364:	-1
365:	STEP_REFCNT
366:	STEP_DROP
367:	STEP_CONST
368:	0
369:	STEP_STORE
370:	STEP_PUSH_FP
371:	STEP_CONST
372:	-2
373:	STEP_ADD
374:	STEP_FETCH_STACK
375:	STEP_CONST
376:	-1
377:	STEP_REFCNT
378:	STEP_DROP
379:	STEP_CONST
380:	-4
381:	STEP_CONST
382:	-1
383:	STEP_DROPFRAME
384:	STEP_CONST
385:	0
386:	STEP_FETCH
387:	STEP_RETURN
388*	FUNCTION outer scope::printiarray	***************
388:	STEP_PUSH_FP
389:	STEP_CONST
390:	-2
391:	STEP_ADD
392:	STEP_FETCH_STACK
393:	STEP_CONST
394:	1
395:	STEP_MINUS
396:	STEP_GT
397:	STEP_DUP
398:	STEP_GOTO0
399:	(26,)
400:	STEP_DROP
401:	STEP_PUSH_FP
402:	STEP_CONST
403:	-2
404:	STEP_ADD
405:	STEP_FETCH_STACK
406:	STEP_PUSH_FP
407:	STEP_CONST
408:	-3
409:	STEP_ADD
410:	STEP_FETCH_STACK
411:	STEP_DUP
412:	STEP_CONST
413:	1
414:	STEP_REFCNT
415:	STEP_DROP
416:	STEP_DUP
417:	STEP_SUB1
418:	STEP_FETCH
419:	STEP_SWAP
420:	STEP_CONST
421:	-1
422:	STEP_REFCNT
423:	STEP_DROP
424:	STEP_LT
425:	STEP_GOTO0
426:	(64,)
427:	STEP_PUSH_FP
428:	STEP_CONST
429:	-4
430:	STEP_ADD
431:	STEP_FETCH_STACK
432:	STEP_CONST
433:	 
434:	STEP_ADD
435:	STEP_PUSH_FP
436:	STEP_CONST
437:	-3
438:	STEP_ADD
439:	STEP_FETCH_STACK
440:	STEP_PUSH_FP
441:	STEP_CONST
442:	-2
443:	STEP_ADD
444:	STEP_FETCH_STACK
445:	STEP_ADD
446:	STEP_FETCH
447:	STEP_CAST_STRING
448:	STEP_ADD
449:	STEP_PUSH_FP
450:	STEP_CONST
451:	-3
452:	STEP_ADD
453:	STEP_FETCH_STACK
454:	STEP_DUP
455:	STEP_CONST
456:	1
457:	STEP_REFCNT
458:	STEP_DROP
459:	STEP_PUSH_FP
460:	STEP_CONST
461:	-2
462:	STEP_ADD
463:	STEP_FETCH_STACK
464:	STEP_CONST
465:	1
466:	STEP_ADD
467:	STEP_PUSH_FP
468:	STEP_CONST
469:	-1
470:	STEP_ADD
471:	STEP_FETCH_STACK
472:	STEP_PUSH_FP
473:	STEP_CONST
474:	-3
475:	STEP_ADD
476:	STEP_FETCH_STACK
477:	STEP_CONST
478:	-1
479:	STEP_REFCNT
480:	STEP_DROP
481:	STEP_CONST
482:	-4
483:	STEP_CONST
484:	-1
485:	STEP_DROPFRAME
486:	STEP_GOTO
487:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'factor1': ['func', 'factor1', 'int[]', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'int[]', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int')), ('factors', ('typedecl', 'int[]'))), {'#funcs': 0, 'factors': ('var', 'factors', 'int[]', -2), '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -4), 'tryfactor': ('var', 'tryfactor', 'int', -3), '#params': 3, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 168]}, 97], '#funcs': 2, 'twoTo30Plus51': ('var', 'twoTo30Plus51', 'int[]', 2), '#locals': 4, '#depth': 0, 'twoTo30PlusFiftyOne': ('var', 'twoTo30PlusFiftyOne', 'int[]', 3), '#params': 0, 'twoTo30': ('var', 'twoTo30', 'int[]', 1), 'foo1123456789': ('var', 'foo1123456789', 'int[]', 0)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 388]
488:	STEP_GOTO
489:	(6,)
490:	STEP_PUSH_FP
491:	STEP_CONST
492:	-4
493:	STEP_ADD
494:	STEP_FETCH_STACK
495:	STEP_CONST
496:	0
497:	STEP_STORE
498:	STEP_PUSH_FP
499:	STEP_CONST
500:	-3
501:	STEP_ADD
502:	STEP_FETCH_STACK
503:	STEP_CONST
504:	-1
505:	STEP_REFCNT
506:	STEP_DROP
507:	STEP_CONST
508:	-4
509:	STEP_CONST
510:	-1
511:	STEP_DROPFRAME
512:	STEP_CONST
513:	0
514:	STEP_FETCH
515:	STEP_RETURN
PROGRAM LINK AFTER BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	123456789
2:	STEP_PUSH_FP
3:	STEP_CALL_SECONDARY
4:	97
5:	STEP_CONST
6:	F123456789: 
7:	STEP_PUSH_FP
8:	STEP_CONST
9:	0
10:	STEP_ADD
11:	STEP_FETCH_STACK
12:	STEP_DUP
13:	STEP_CONST
14:	1
15:	STEP_REFCNT
16:	STEP_DROP
17:	STEP_CONST
18:	0
19:	STEP_PUSH_FP
20:	STEP_CALL_SECONDARY
21:	388
22:	STEP_PRINT
23:	STEP_CRLF
24:	STEP_CONST
25:	1073741824
26:	STEP_PUSH_FP
27:	STEP_CALL_SECONDARY
28:	97
29:	STEP_CONST
30:	twoTo30: 
31:	STEP_PUSH_FP
32:	STEP_CONST
33:	1
34:	STEP_ADD
35:	STEP_FETCH_STACK
36:	STEP_DUP
37:	STEP_CONST
38:	1
39:	STEP_REFCNT
40:	STEP_DROP
41:	STEP_CONST
42:	0
43:	STEP_PUSH_FP
44:	STEP_CALL_SECONDARY
45:	388
46:	STEP_PRINT
47:	STEP_CRLF
48:	STEP_CONST
49:	1073741875
50:	STEP_PUSH_FP
51:	STEP_CALL_SECONDARY
52:	97
53:	STEP_CONST
54:	twoTo30Plus51: 
55:	STEP_PUSH_FP
56:	STEP_CONST
57:	2
58:	STEP_ADD
59:	STEP_FETCH_STACK
60:	STEP_DUP
61:	STEP_CONST
62:	1
63:	STEP_REFCNT
64:	STEP_DROP
65:	STEP_CONST
66:	0
67:	STEP_PUSH_FP
68:	STEP_CALL_SECONDARY
69:	388
70:	STEP_PRINT
71:	STEP_CRLF
72:	STEP_CONST
73:	1073741875
74:	STEP_PUSH_FP
75:	STEP_CALL_SECONDARY
76:	97
77:	STEP_CONST
78:	twoTo30PlusFiftyOne: 
79:	STEP_PUSH_FP
80:	STEP_CONST
81:	3
82:	STEP_ADD
83:	STEP_FETCH_STACK
84:	STEP_DUP
85:	STEP_CONST
86:	1
87:	STEP_REFCNT
88:	STEP_DROP
89:	STEP_CONST
90:	0
91:	STEP_PUSH_FP
92:	STEP_CALL_SECONDARY
93:	388
94:	STEP_PRINT
95:	STEP_CRLF
96:	STEP_PAUSE
97*	FUNCTION outer scope::factor1	***************
97:	STEP_PUSH_FP
98:	STEP_CONST
99:	-2
100:	STEP_ADD
101:	STEP_FETCH_STACK
102:	STEP_CONST
103:	1
104:	STEP_GT
105:	STEP_GOTO0
106:	142
107:	STEP_CONST
108:	Good parameter to factor1:
109:	STEP_PRINT
110:	STEP_CRLF
111:	STEP_PUSH_FP
112:	STEP_CONST
113:	-2
114:	STEP_ADD
115:	STEP_FETCH_STACK
116:	STEP_PRINT
117:	STEP_CRLF
118:	STEP_PUSH_FP
119:	STEP_CONST
120:	-2
121:	STEP_ADD
122:	STEP_FETCH_STACK
123:	STEP_CONST
124:	2
125:	STEP_CONST
126:	0
127:	STEP_ALLOC
128:	STEP_DUP
129:	STEP_CONST
130:	-1
131:	STEP_ARRAYCPY
132:	STEP_SWAP
133:	STEP_CONST
134:	-1
135:	STEP_REFCNT
136:	STEP_DROP
137:	STEP_PUSH_FP
138:	STEP_CALL_SECONDARY
139:	168
140:	STEP_GOTO
141:	156
142:	STEP_CONST
143:	Bad parameter to factor1: 
144:	STEP_PRINT
145:	STEP_CRLF
146:	STEP_PUSH_FP
147:	STEP_CONST
148:	-2
149:	STEP_ADD
150:	STEP_FETCH_STACK
151:	STEP_PRINT
152:	STEP_CRLF
153:	STEP_CONST
154:	0
155:	STEP_ALLOC
156:	STEP_CONST
157:	0
158:	STEP_STORE
159:	STEP_CONST
160:	-2
161:	STEP_CONST
162:	-1
163:	STEP_DROPFRAME
164:	STEP_CONST
165:	0
166:	STEP_FETCH
167:	STEP_RETURN
168*	FUNCTION outer scope::factor1::helpFactor	***************
168:	STEP_PUSH_FP
169:	STEP_CONST
170:	-3
171:	STEP_ADD
172:	STEP_FETCH_STACK
173:	STEP_PUSH_FP
174:	STEP_CONST
175:	-4
176:	STEP_ADD
177:	STEP_FETCH_STACK
178:	STEP_LT
179:	STEP_GOTO0
180:	330
181:	STEP_PUSH_FP
182:	STEP_CONST
183:	-4
184:	STEP_ADD
185:	STEP_FETCH_STACK
186:	STEP_PUSH_FP
187:	STEP_CONST
188:	-3
189:	STEP_ADD
190:	STEP_FETCH_STACK
191:	STEP_MOD
192:	STEP_CONST
193:	0
194:	STEP_EQ
195:	STEP_GOTO0
196:	270
197:	STEP_PUSH_FP
198:	STEP_CONST
199:	-4
200:	STEP_ADD
201:	STEP_FETCH_STACK
202:	STEP_PUSH_FP
203:	STEP_CONST
204:	-3
205:	STEP_ADD
206:	STEP_FETCH_STACK
207:	STEP_DIV
208:	STEP_CONST
209:	2
210:	STEP_PUSH_FP
211:	STEP_CONST
212:	-2
213:	STEP_ADD
214:	STEP_FETCH_STACK
215:	STEP_DUP
216:	STEP_CONST
217:	1
218:	STEP_REFCNT
219:	STEP_DROP
220:	STEP_CONST
221:	1
222:	STEP_ALLOC
223:	STEP_PUSH_FP
224:	STEP_CONST
225:	-3
226:	STEP_ADD
227:	STEP_FETCH_STACK
228:	STEP_OVER
229:	STEP_CONST
230:	0
231:	STEP_ADD
232:	STEP_STORE
233:	STEP_OVER
234:	STEP_OVER
235:	STEP_CONST
236:	0
237:	STEP_ARRAYCAT
238:	STEP_SWAP2
239:	STEP_CONST
240:	-1
241:	STEP_REFCNT
242:	STEP_DROP
243:	STEP_CONST
244:	-1
245:	STEP_REFCNT
246:	STEP_DROP
247:	STEP_PUSH_FP
248:	STEP_CONST
249:	-1
250:	STEP_ADD
251:	STEP_FETCH_STACK
252:	STEP_PUSH_FP
253:	STEP_CONST
254:	-2
255:	STEP_ADD
256:	STEP_FETCH_STACK
257:	STEP_CONST
258:	-1
259:	STEP_REFCNT
260:	STEP_DROP
261:	STEP_CONST
262:	-4
263:	STEP_CONST
264:	-1
265:	STEP_DROPFRAME
266:	STEP_GOTO
267:	168
268:	STEP_GOTO
269:	328
270:	STEP_PUSH_FP
271:	STEP_CONST
272:	-4
273:	STEP_ADD
274:	STEP_FETCH_STACK
275:	STEP_PUSH_FP
276:	STEP_CONST
277:	-3
278:	STEP_ADD
279:	STEP_FETCH_STACK
280:	STEP_CONST
281:	2
282:	STEP_EQ
283:	STEP_GOTO0
284:	289
285:	STEP_CONST
286:	3
287:	STEP_GOTO
288:	297
289:	STEP_PUSH_FP
290:	STEP_CONST
291:	-3
292:	STEP_ADD
293:	STEP_FETCH_STACK
294:	STEP_CONST
295:	2
296:	STEP_ADD
297:	STEP_PUSH_FP
298:	STEP_CONST
299:	-2
300:	STEP_ADD
301:	STEP_FETCH_STACK
302:	STEP_DUP
303:	STEP_CONST
304:	1
305:	STEP_REFCNT
306:	STEP_DROP
307:	STEP_PUSH_FP
308:	STEP_CONST
309:	-1
310:	STEP_ADD
311:	STEP_FETCH_STACK
312:	STEP_PUSH_FP
313:	STEP_CONST
314:	-2
315:	STEP_ADD
316:	STEP_FETCH_STACK
317:	STEP_CONST
318:	-1
319:	STEP_REFCNT
320:	STEP_DROP
321:	STEP_CONST
322:	-4
323:	STEP_CONST
324:	-1
325:	STEP_DROPFRAME
326:	STEP_GOTO
327:	168
328:	STEP_GOTO
329:	367
330:	STEP_PUSH_FP
331:	STEP_CONST
332:	-2
333:	STEP_ADD
334:	STEP_FETCH_STACK
335:	STEP_DUP
336:	STEP_CONST
337:	1
338:	STEP_REFCNT
339:	STEP_DROP
340:	STEP_CONST
341:	1
342:	STEP_ALLOC
343:	STEP_PUSH_FP
344:	STEP_CONST
345:	-4
346:	STEP_ADD
347:	STEP_FETCH_STACK
348:	STEP_OVER
349:	STEP_CONST
350:	0
351:	STEP_ADD
352:	STEP_STORE
353:	STEP_OVER
354:	STEP_OVER
355:	STEP_CONST
356:	0
357:	STEP_ARRAYCAT
358:	STEP_SWAP2
359:	STEP_CONST
360:	-1
361:	STEP_REFCNT
362:	STEP_DROP
363:	STEP_CONST
364:	-1
365:	STEP_REFCNT
366:	STEP_DROP
367:	STEP_CONST
368:	0
369:	STEP_STORE
370:	STEP_PUSH_FP
371:	STEP_CONST
372:	-2
373:	STEP_ADD
374:	STEP_FETCH_STACK
375:	STEP_CONST
376:	-1
377:	STEP_REFCNT
378:	STEP_DROP
379:	STEP_CONST
380:	-4
381:	STEP_CONST
382:	-1
383:	STEP_DROPFRAME
384:	STEP_CONST
385:	0
386:	STEP_FETCH
387:	STEP_RETURN
388*	FUNCTION outer scope::printiarray	***************
388:	STEP_PUSH_FP
389:	STEP_CONST
390:	-2
391:	STEP_ADD
392:	STEP_FETCH_STACK
393:	STEP_CONST
394:	1
395:	STEP_MINUS
396:	STEP_GT
397:	STEP_DUP
398:	STEP_GOTO0
399:	425
400:	STEP_DROP
401:	STEP_PUSH_FP
402:	STEP_CONST
403:	-2
404:	STEP_ADD
405:	STEP_FETCH_STACK
406:	STEP_PUSH_FP
407:	STEP_CONST
408:	-3
409:	STEP_ADD
410:	STEP_FETCH_STACK
411:	STEP_DUP
412:	STEP_CONST
413:	1
414:	STEP_REFCNT
415:	STEP_DROP
416:	STEP_DUP
417:	STEP_SUB1
418:	STEP_FETCH
419:	STEP_SWAP
420:	STEP_CONST
421:	-1
422:	STEP_REFCNT
423:	STEP_DROP
424:	STEP_LT
425:	STEP_GOTO0
426:	490
427:	STEP_PUSH_FP
428:	STEP_CONST
429:	-4
430:	STEP_ADD
431:	STEP_FETCH_STACK
432:	STEP_CONST
433:	 
434:	STEP_ADD
435:	STEP_PUSH_FP
436:	STEP_CONST
437:	-3
438:	STEP_ADD
439:	STEP_FETCH_STACK
440:	STEP_PUSH_FP
441:	STEP_CONST
442:	-2
443:	STEP_ADD
444:	STEP_FETCH_STACK
445:	STEP_ADD
446:	STEP_FETCH
447:	STEP_CAST_STRING
448:	STEP_ADD
449:	STEP_PUSH_FP
450:	STEP_CONST
451:	-3
452:	STEP_ADD
453:	STEP_FETCH_STACK
454:	STEP_DUP
455:	STEP_CONST
456:	1
457:	STEP_REFCNT
458:	STEP_DROP
459:	STEP_PUSH_FP
460:	STEP_CONST
461:	-2
462:	STEP_ADD
463:	STEP_FETCH_STACK
464:	STEP_CONST
465:	1
466:	STEP_ADD
467:	STEP_PUSH_FP
468:	STEP_CONST
469:	-1
470:	STEP_ADD
471:	STEP_FETCH_STACK
472:	STEP_PUSH_FP
473:	STEP_CONST
474:	-3
475:	STEP_ADD
476:	STEP_FETCH_STACK
477:	STEP_CONST
478:	-1
479:	STEP_REFCNT
480:	STEP_DROP
481:	STEP_CONST
482:	-4
483:	STEP_CONST
484:	-1
485:	STEP_DROPFRAME
486:	STEP_GOTO
487:	388
488:	STEP_GOTO
489:	495
490:	STEP_PUSH_FP
491:	STEP_CONST
492:	-4
493:	STEP_ADD
494:	STEP_FETCH_STACK
495:	STEP_CONST
496:	0
497:	STEP_STORE
498:	STEP_PUSH_FP
499:	STEP_CONST
500:	-3
501:	STEP_ADD
502:	STEP_FETCH_STACK
503:	STEP_CONST
504:	-1
505:	STEP_REFCNT
506:	STEP_DROP
507:	STEP_CONST
508:	-4
509:	STEP_CONST
510:	-1
511:	STEP_DROPFRAME
512:	STEP_CONST
513:	0
514:	STEP_FETCH
515:	STEP_RETURN
UNINTERPRETED DUMP OF THE ENTIRE DATA_DICTIONARY:
[   'twoTo30PlusFiftyOne:  5 5 5 5 71 24197',
    33,
    4,
    9223372036854775807,
    0,
    4,
    5,
    0,
    33,
    None,
    5,
    11,
    1,
    4,
    3,
    3,
    3607,
    3803,
    None,
    None,
    3,
    11,
    11,
    1,
    6,
    5,
    5,
    5,
    5,
    71,
    24197,
    5,
    11,
    54,
    0,
    None,
    6,
    5,
    5,
    5,
    71,
    9,
    45,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    32,
    33,
    0,
    None,
    None,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    54,
    34,
    1,
    30,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    34,
    14,
    1,
    6,
    5,
    5,
    5,
    5,
    71,
    24197,
    0,
    None,
    None,
    2,
    14]
DEBUG HEAP: size of data_dictionary = 135.
DEBUG HEAP: free list pointer at location 1 = 33.
DEBUG HEAP @ 2: HDR=4|RFC=9223372036854775807|0|4
FOOTER@5 = 4.
DEBUG HEAP @ 6: HDR=5|RFC=0|33|None
FOOTER@10 = 5.
DEBUG HEAP @ 11: HDR=11|RFC=1|4|3
FOOTER@21 = 11.
	[0] = 3
	[1] = 3
	[2] = 3607
	[3] = 3803
DEBUG HEAP @ 22: HDR=11|RFC=1|6|5
FOOTER@32 = 11.
	[0] = 5
	[1] = 5
	[2] = 5
	[3] = 5
	[4] = 71
	[5] = 24197
DEBUG HEAP @ 33: HDR=54|RFC=0|None|6
FOOTER@86 = 54.
DEBUG HEAP @ 87: HDR=34|RFC=1|30|2
FOOTER@120 = 34.
	[0] = 2
	[1] = 2
	[2] = 2
	[3] = 2
	[4] = 2
	[5] = 2
	[6] = 2
	[7] = 2
	[8] = 2
	[9] = 2
	[10] = 2
	[11] = 2
	[12] = 2
	[13] = 2
	[14] = 2
	[15] = 2
	[16] = 2
	[17] = 2
	[18] = 2
	[19] = 2
	[20] = 2
	[21] = 2
	[22] = 2
	[23] = 2
	[24] = 2
	[25] = 2
	[26] = 2
	[27] = 2
	[28] = 2
	[29] = 2
DEBUG HEAP @ 121: HDR=14|RFC=1|6|5
FOOTER@134 = 14.
	[0] = 5
	[1] = 5
	[2] = 5
	[3] = 5
	[4] = 71
	[5] = 24197
DEBUG FREE LIST ENTRY @ 33: HDR=54|RFC=0|None|6.
DEBUG FREE LIST ENTRY @ 6: HDR=5|RFC=0|33|None.
