(   ('varassign', 'i', ('typedecl', 'int'), ('constant', 'int', '1')),
    (   'varassign',
        'iarray1',
        ('typedecl', 'int[]'),
        (   'arrayvalues',
            'int[]',
            (   ('constant', 'int', '1'),
                ('constant', 'int', '2'),
                ('constant', 'int', '3')))),
    (   'varassign',
        'iarray2',
        ('typedecl', 'int[]'),
        (   'arrayvalues',
            'float[]',
            (   ('constant', 'int', '1'),
                ('constant', 'float', '2.0'),
                ('uminus', 'int', ('constant', 'int', '3'))))),
    (   'varassign',
        'iarray3',
        ('typedecl', 'int[]'),
        ('arrayvalues', 'any[]', ())),
    (   'varassign',
        'iarray4',
        ('typedecl', 'int[]'),
        (   '+',
            'int[]',
            ('id', 'int[]', 'iarray1'),
            ('id', 'int[]', 'iarray2'))),
    (   'varassign',
        'iarray5',
        ('typedecl', 'int[]'),
        (   '+',
            'int[]',
            (   '+',
                'int[]',
                (   '+',
                    'int[]',
                    ('id', 'int[]', 'iarray1'),
                    ('id', 'int[]', 'iarray3')),
                (   'arrayvalues',
                    'int[]',
                    (('id', 'int', 'i'), ('constant', 'int', '1')))),
            ('arrayvalues', 'any[]', ()))),
    (   'varassign',
        'farray1',
        ('typedecl', 'float[]'),
        (   'arrayvalues',
            'float[]',
            (   ('constant', 'float', '1.0'),
                ('uminus', 'float', ('constant', 'float', '2.5')),
                ('constant', 'int', '3')))),
    (   'varassign',
        'farray2',
        ('typedecl', 'float[]'),
        ('arrayvalues', 'any[]', ())),
    (   'varassign',
        'iarray6',
        ('typedecl', 'int[]'),
        (   '+',
            'float[]',
            ('id', 'float[]', 'farray1'),
            ('id', 'int[]', 'iarray1'))),
    (   'varassign',
        'farray3',
        ('typedecl', 'float[]'),
        (   '+',
            'float[]',
            ('id', 'float[]', 'farray1'),
            ('id', 'int[]', 'iarray1'))),
    ('printexpression', ('constant', 'string', 'test 1')),
    ('printexpression', ('id', 'int', 'iarray1', ('constant', 'int', '1'))),
    (   'funcassign',
        'printiarray',
        ('typedecl', 'string'),
        (   ('prefix', ('typedecl', 'string')),
            ('iarray', ('typedecl', 'int[]')),
            ('i', ('typedecl', 'int'))),
        (),
        (   'return',
            (   '?:',
                'string',
                (   '&&',
                    'int',
                    (   (   '>',
                            'int',
                            ('id', 'int', 'i'),
                            ('uminus', 'int', ('constant', 'int', '1'))),
                        (   '<',
                            'int',
                            ('id', 'int', 'i'),
                            ('arraylen', 'int', 'iarray', 'int[]')))),
                (   'funcall',
                    'string',
                    'printiarray',
                    (   (   '+',
                            'string',
                            (   '+',
                                'string',
                                ('id', 'string', 'prefix'),
                                ('constant', 'string', ' ')),
                            (   'typecast',
                                'string',
                                (   'id',
                                    'int',
                                    'iarray',
                                    ('id', 'int', 'i')))),
                        ('id', 'int[]', 'iarray'),
                        (   '+',
                            'int',
                            ('id', 'int', 'i'),
                            ('constant', 'int', '1')))),
                ('id', 'string', 'prefix')))),
    (   'funcassign',
        'printfarray',
        ('typedecl', 'string'),
        (   ('prefix', ('typedecl', 'string')),
            ('farray', ('typedecl', 'float[]')),
            ('i', ('typedecl', 'int'))),
        (),
        (   'return',
            (   '?:',
                'string',
                (   '&&',
                    'int',
                    (   (   '>',
                            'int',
                            ('id', 'int', 'i'),
                            ('uminus', 'int', ('constant', 'int', '1'))),
                        (   '<',
                            'int',
                            ('id', 'int', 'i'),
                            ('arraylen', 'int', 'farray', 'float[]')))),
                (   'funcall',
                    'string',
                    'printfarray',
                    (   (   '+',
                            'string',
                            (   '+',
                                'string',
                                ('id', 'string', 'prefix'),
                                ('constant', 'string', ' ')),
                            (   'typecast',
                                'string',
                                (   'id',
                                    'float',
                                    'farray',
                                    ('id', 'int', 'i')))),
                        ('id', 'float[]', 'farray'),
                        (   '+',
                            'int',
                            ('id', 'int', 'i'),
                            ('constant', 'int', '1')))),
                ('id', 'string', 'prefix')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test iarray1'),
                ('id', 'int[]', 'iarray1'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test iarray2'),
                ('id', 'int[]', 'iarray2'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test iarray3'),
                ('id', 'int[]', 'iarray3'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test farray1'),
                ('id', 'float[]', 'farray1'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test farray2'),
                ('id', 'float[]', 'farray2'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test i farray1'),
                ('id', 'float[]', 'farray1'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test i farray2'),
                ('id', 'float[]', 'farray2'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test f iarray1'),
                ('id', 'int[]', 'iarray1'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test f iarray2'),
                ('id', 'int[]', 'iarray2'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test f iarray3'),
                ('id', 'int[]', 'iarray3'),
                ('constant', 'int', '0')))))
OPTIMIZED 2 ABSTRACT SYNTAX TREE
(   ('varassign', 'i', ('typedecl', 'int'), ('constant', 'int', '1')),
    (   'varassign',
        'iarray1',
        ('typedecl', 'int[]'),
        (   'arrayliterals',
            'int[]',
            (   ('constant', 'int', '1'),
                ('constant', 'int', '2'),
                ('constant', 'int', '3')))),
    (   'varassign',
        'iarray2',
        ('typedecl', 'int[]'),
        (   'arrayvalues',
            'int[]',
            (   ('constant', 'int', '1'),
                ('constant', 'float', '2.0'),
                ('uminus', 'int', ('constant', 'int', '3'))))),
    (   'varassign',
        'iarray3',
        ('typedecl', 'int[]'),
        ('arrayvalues', 'int[]', ())),
    (   'varassign',
        'iarray4',
        ('typedecl', 'int[]'),
        (   '+',
            'int[]',
            ('id', 'int[]', 'iarray1'),
            ('id', 'int[]', 'iarray2'))),
    (   'varassign',
        'iarray5',
        ('typedecl', 'int[]'),
        (   '+',
            'int[]',
            (   '+',
                'int[]',
                (   '+',
                    'int[]',
                    ('id', 'int[]', 'iarray1'),
                    ('id', 'int[]', 'iarray3')),
                (   'arrayvalues',
                    'int[]',
                    (('id', 'int', 'i'), ('constant', 'int', '1')))),
            ('arrayvalues', 'int[]', ()))),
    (   'varassign',
        'farray1',
        ('typedecl', 'float[]'),
        (   'arrayvalues',
            'float[]',
            (   ('constant', 'float', '1.0'),
                ('uminus', 'float', ('constant', 'float', '2.5')),
                ('constant', 'int', '3')))),
    (   'varassign',
        'farray2',
        ('typedecl', 'float[]'),
        ('arrayvalues', 'float[]', ())),
    (   'varassign',
        'iarray6',
        ('typedecl', 'int[]'),
        (   '+',
            'float[]',
            ('id', 'float[]', 'farray1'),
            ('id', 'int[]', 'iarray1'))),
    (   'varassign',
        'farray3',
        ('typedecl', 'float[]'),
        (   '+',
            'float[]',
            ('id', 'float[]', 'farray1'),
            ('id', 'int[]', 'iarray1'))),
    ('printexpression', ('constant', 'string', 'test 1')),
    ('printexpression', ('id', 'int', 'iarray1', ('constant', 'int', '1'))),
    (   'funcassign',
        'printiarray',
        ('typedecl', 'string'),
        (   ('prefix', ('typedecl', 'string')),
            ('iarray', ('typedecl', 'int[]')),
            ('i', ('typedecl', 'int'))),
        (),
        (   'return',
            (   '?:',
                'string',
                (   '&&',
                    'int',
                    (   (   '>',
                            'int',
                            ('id', 'int', 'i'),
                            ('uminus', 'int', ('constant', 'int', '1'))),
                        (   '<',
                            'int',
                            ('id', 'int', 'i'),
                            ('arraylen', 'int', 'iarray', 'int[]')))),
                (   'tailcall',
                    'string',
                    'printiarray',
                    (   (   '+',
                            'string',
                            (   '+',
                                'string',
                                ('id', 'string', 'prefix'),
                                ('constant', 'string', ' ')),
                            (   'typecast',
                                'string',
                                (   'id',
                                    'int',
                                    'iarray',
                                    ('id', 'int', 'i')))),
                        ('id', 'int[]', 'iarray'),
                        (   '+',
                            'int',
                            ('id', 'int', 'i'),
                            ('constant', 'int', '1'))),
                    (   (   'funcassign',
                            'printiarray',
                            ('typedecl', 'string'),
                            (   ('prefix', ('typedecl', 'string')),
                                ('iarray', ('typedecl', 'int[]')),
                                ('i', ('typedecl', 'int'))),
                            (),
                            (   'return',
                                (   '?:',
                                    'string',
                                    (   '&&',
                                        'int',
                                        (   (   '>',
                                                'int',
                                                ('id', 'int', 'i'),
                                                (   'uminus',
                                                    'int',
                                                    (   'constant',
                                                        'int',
                                                        '1'))),
                                            (   '<',
                                                'int',
                                                ('id', 'int', 'i'),
                                                (   'arraylen',
                                                    'int',
                                                    'iarray',
                                                    'int[]')))),
                                    (   'funcall',
                                        'string',
                                        'printiarray',
                                        (   (   '+',
                                                'string',
                                                (   '+',
                                                    'string',
                                                    (   'id',
                                                        'string',
                                                        'prefix'),
                                                    (   'constant',
                                                        'string',
                                                        ' ')),
                                                (   'typecast',
                                                    'string',
                                                    (   'id',
                                                        'int',
                                                        'iarray',
                                                        (   'id',
                                                            'int',
                                                            'i')))),
                                            (   'id',
                                                'int[]',
                                                'iarray'),
                                            (   '+',
                                                'int',
                                                ('id', 'int', 'i'),
                                                (   'constant',
                                                    'int',
                                                    '1')))),
                                    ('id', 'string', 'prefix')))),
                        {   '#depth': 0,
                            '#funcs': 2,
                            '#locals': 10,
                            '#params': 0,
                            'farray1': ('var', 'farray1', 'float[]', 6),
                            'farray2': ('var', 'farray2', 'float[]', 7),
                            'farray3': ('var', 'farray3', 'float[]', 9),
                            'i': ('var', 'i', 'int', 0),
                            'iarray1': ('var', 'iarray1', 'int[]', 1),
                            'iarray2': ('var', 'iarray2', 'int[]', 2),
                            'iarray3': ('var', 'iarray3', 'int[]', 3),
                            'iarray4': ('var', 'iarray4', 'int[]', 4),
                            'iarray5': ('var', 'iarray5', 'int[]', 5),
                            'iarray6': ('var', 'iarray6', 'int[]', 8),
                            'printfarray': [   'func',
                                               'printfarray',
                                               'string',
                                               (   (   'prefix',
                                                       (   'typedecl',
                                                           'string')),
                                                   (   'farray',
                                                       (   'typedecl',
                                                           'float[]')),
                                                   (   'i',
                                                       (   'typedecl',
                                                           'int'))),
                                               {   '#depth': 1,
                                                   '#funcs': 0,
                                                   '#locals': 0,
                                                   '#params': 3,
                                                   'farray': (   'var',
                                                                 'farray',
                                                                 'float[]',
                                                                 -3),
                                                   'i': (   'var',
                                                            'i',
                                                            'int',
                                                            -2),
                                                   'prefix': (   'var',
                                                                 'prefix',
                                                                 'string',
                                                                 -4),
                                                   'printfarray': (   'symref',
                                                                      'printfarray',
                                                                      1,
                                                                      CYCLIC SYMTAB PTR)},
                                               NNN],
                            'printiarray': [   'func',
                                               'printiarray',
                                               'string',
                                               (   (   'prefix',
                                                       (   'typedecl',
                                                           'string')),
                                                   (   'iarray',
                                                       (   'typedecl',
                                                           'int[]')),
                                                   (   'i',
                                                       (   'typedecl',
                                                           'int'))),
                                               {   '#depth': 1,
                                                   '#funcs': 0,
                                                   '#locals': 0,
                                                   '#params': 3,
                                                   'i': (   'var',
                                                            'i',
                                                            'int',
                                                            -2),
                                                   'iarray': (   'var',
                                                                 'iarray',
                                                                 'int[]',
                                                                 -3),
                                                   'prefix': (   'var',
                                                                 'prefix',
                                                                 'string',
                                                                 -4),
                                                   'printiarray': (   'symref',
                                                                      'printiarray',
                                                                      1,
                                                                      CYCLIC SYMTAB PTR)},
                                               NNN]})),
                ('id', 'string', 'prefix')))),
    (   'funcassign',
        'printfarray',
        ('typedecl', 'string'),
        (   ('prefix', ('typedecl', 'string')),
            ('farray', ('typedecl', 'float[]')),
            ('i', ('typedecl', 'int'))),
        (),
        (   'return',
            (   '?:',
                'string',
                (   '&&',
                    'int',
                    (   (   '>',
                            'int',
                            ('id', 'int', 'i'),
                            ('uminus', 'int', ('constant', 'int', '1'))),
                        (   '<',
                            'int',
                            ('id', 'int', 'i'),
                            ('arraylen', 'int', 'farray', 'float[]')))),
                (   'tailcall',
                    'string',
                    'printfarray',
                    (   (   '+',
                            'string',
                            (   '+',
                                'string',
                                ('id', 'string', 'prefix'),
                                ('constant', 'string', ' ')),
                            (   'typecast',
                                'string',
                                (   'id',
                                    'float',
                                    'farray',
                                    ('id', 'int', 'i')))),
                        ('id', 'float[]', 'farray'),
                        (   '+',
                            'int',
                            ('id', 'int', 'i'),
                            ('constant', 'int', '1'))),
                    (   (   'funcassign',
                            'printfarray',
                            ('typedecl', 'string'),
                            (   ('prefix', ('typedecl', 'string')),
                                ('farray', ('typedecl', 'float[]')),
                                ('i', ('typedecl', 'int'))),
                            (),
                            (   'return',
                                (   '?:',
                                    'string',
                                    (   '&&',
                                        'int',
                                        (   (   '>',
                                                'int',
                                                ('id', 'int', 'i'),
                                                (   'uminus',
                                                    'int',
                                                    (   'constant',
                                                        'int',
                                                        '1'))),
                                            (   '<',
                                                'int',
                                                ('id', 'int', 'i'),
                                                (   'arraylen',
                                                    'int',
                                                    'farray',
                                                    'float[]')))),
                                    (   'funcall',
                                        'string',
                                        'printfarray',
                                        (   (   '+',
                                                'string',
                                                (   '+',
                                                    'string',
                                                    (   'id',
                                                        'string',
                                                        'prefix'),
                                                    (   'constant',
                                                        'string',
                                                        ' ')),
                                                (   'typecast',
                                                    'string',
                                                    (   'id',
                                                        'float',
                                                        'farray',
                                                        (   'id',
                                                            'int',
                                                            'i')))),
                                            (   'id',
                                                'float[]',
                                                'farray'),
                                            (   '+',
                                                'int',
                                                ('id', 'int', 'i'),
                                                (   'constant',
                                                    'int',
                                                    '1')))),
                                    ('id', 'string', 'prefix')))),
                        {   '#depth': 0,
                            '#funcs': 2,
                            '#locals': 10,
                            '#params': 0,
                            'farray1': ('var', 'farray1', 'float[]', 6),
                            'farray2': ('var', 'farray2', 'float[]', 7),
                            'farray3': ('var', 'farray3', 'float[]', 9),
                            'i': ('var', 'i', 'int', 0),
                            'iarray1': ('var', 'iarray1', 'int[]', 1),
                            'iarray2': ('var', 'iarray2', 'int[]', 2),
                            'iarray3': ('var', 'iarray3', 'int[]', 3),
                            'iarray4': ('var', 'iarray4', 'int[]', 4),
                            'iarray5': ('var', 'iarray5', 'int[]', 5),
                            'iarray6': ('var', 'iarray6', 'int[]', 8),
                            'printfarray': [   'func',
                                               'printfarray',
                                               'string',
                                               (   (   'prefix',
                                                       (   'typedecl',
                                                           'string')),
                                                   (   'farray',
                                                       (   'typedecl',
                                                           'float[]')),
                                                   (   'i',
                                                       (   'typedecl',
                                                           'int'))),
                                               {   '#depth': 1,
                                                   '#funcs': 0,
                                                   '#locals': 0,
                                                   '#params': 3,
                                                   'farray': (   'var',
                                                                 'farray',
                                                                 'float[]',
                                                                 -3),
                                                   'i': (   'var',
                                                            'i',
                                                            'int',
                                                            -2),
                                                   'prefix': (   'var',
                                                                 'prefix',
                                                                 'string',
                                                                 -4),
                                                   'printfarray': (   'symref',
                                                                      'printfarray',
                                                                      1,
                                                                      CYCLIC SYMTAB PTR)},
                                               NNN],
                            'printiarray': [   'func',
                                               'printiarray',
                                               'string',
                                               (   (   'prefix',
                                                       (   'typedecl',
                                                           'string')),
                                                   (   'iarray',
                                                       (   'typedecl',
                                                           'int[]')),
                                                   (   'i',
                                                       (   'typedecl',
                                                           'int'))),
                                               {   '#depth': 1,
                                                   '#funcs': 0,
                                                   '#locals': 0,
                                                   '#params': 3,
                                                   'i': (   'var',
                                                            'i',
                                                            'int',
                                                            -2),
                                                   'iarray': (   'var',
                                                                 'iarray',
                                                                 'int[]',
                                                                 -3),
                                                   'prefix': (   'var',
                                                                 'prefix',
                                                                 'string',
                                                                 -4),
                                                   'printiarray': (   'symref',
                                                                      'printiarray',
                                                                      1,
                                                                      CYCLIC SYMTAB PTR)},
                                               NNN]})),
                ('id', 'string', 'prefix')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test iarray1'),
                ('id', 'int[]', 'iarray1'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test iarray2'),
                ('id', 'int[]', 'iarray2'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test iarray3'),
                ('id', 'int[]', 'iarray3'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test farray1'),
                ('id', 'float[]', 'farray1'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test farray2'),
                ('id', 'float[]', 'farray2'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test i farray1'),
                ('id', 'float[]', 'farray1'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printiarray',
            (   ('constant', 'string', 'test i farray2'),
                ('id', 'float[]', 'farray2'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test f iarray1'),
                ('id', 'int[]', 'iarray1'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test f iarray2'),
                ('id', 'int[]', 'iarray2'),
                ('constant', 'int', '0')))),
    (   'printexpression',
        (   'funcall',
            'string',
            'printfarray',
            (   ('constant', 'string', 'test f iarray3'),
                ('id', 'int[]', 'iarray3'),
                ('constant', 'int', '0')))))
counter #depth : 0
counter #funcs : 2
counter #locals : 10
counter #params : 0
var float[] global::farray1, frame offset: 6
var float[] global::farray2, frame offset: 7
var float[] global::farray3, frame offset: 9
var int global::i, frame offset: 0
var int[] global::iarray1, frame offset: 1
var int[] global::iarray2, frame offset: 2
var int[] global::iarray3, frame offset: 3
var int[] global::iarray4, frame offset: 4
var int[] global::iarray5, frame offset: 5
var int[] global::iarray6, frame offset: 8
function string global::printfarray
counter #depth : 1
counter #funcs : 0
counter #locals : 0
counter #params : 3
var float[] global::printfarray::farray, frame offset: -3
var int global::printfarray::i, frame offset: -2
var string global::printfarray::prefix, frame offset: -4
symref printfarray from scope global::printfarray, depth of 1
function string global::printiarray
counter #depth : 1
counter #funcs : 0
counter #locals : 0
counter #params : 3
var int global::printiarray::i, frame offset: -2
var int[] global::printiarray::iarray, frame offset: -3
var string global::printiarray::prefix, frame offset: -4
symref printiarray from scope global::printiarray, depth of 1
PROGRAM EXECUTION:
test 1
2
test iarray1 1 2 3
test iarray2 1 2 -3
test iarray3
test farray1 1.0 -2.5 3.0
test farray2
test i farray1 1 -2 3
test i farray2
test f iarray1 1.0 2.0 3.0
test f iarray2 1.0 2.0 -3.0
test f iarray3
