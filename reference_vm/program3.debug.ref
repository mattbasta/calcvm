PROGRAM MID LINK BEFORE BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	27
2:	STEP_PUSH_FP
3:	STEP_CALL_SECONDARY
4:	['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216]
5:	STEP_PRINT
6:	STEP_CRLF
7:	STEP_CONST
8:	16
9:	STEP_PUSH_FP
10:	STEP_CALL_SECONDARY
11:	['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216]
12:	STEP_PRINT
13:	STEP_CRLF
14:	STEP_CONST
15:	1
16:	STEP_MINUS
17:	STEP_PUSH_FP
18:	STEP_CALL_SECONDARY
19:	['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216]
20:	STEP_PRINT
21:	STEP_CRLF
22:	STEP_CONST
23:	0
24:	STEP_PUSH_FP
25:	STEP_CALL_SECONDARY
26:	['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216]
27:	STEP_PRINT
28:	STEP_CRLF
29:	STEP_CONST
30:	1
31:	STEP_PUSH_FP
32:	STEP_CALL_SECONDARY
33:	['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216]
34:	STEP_PRINT
35:	STEP_CRLF
36:	STEP_CONST
37:	12
38:	STEP_PUSH_FP
39:	STEP_CALL_SECONDARY
40:	['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216]
41:	STEP_PRINT
42:	STEP_CRLF
43:	STEP_CONST
44:	27
45:	STEP_PUSH_FP
46:	STEP_CALL_SECONDARY
47:	['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': [...], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375]
48:	STEP_PRINT
49:	STEP_CRLF
50:	STEP_CONST
51:	16
52:	STEP_PUSH_FP
53:	STEP_CALL_SECONDARY
54:	['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': [...], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375]
55:	STEP_PRINT
56:	STEP_CRLF
57:	STEP_CONST
58:	1
59:	STEP_MINUS
60:	STEP_PUSH_FP
61:	STEP_CALL_SECONDARY
62:	['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': [...], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375]
63:	STEP_PRINT
64:	STEP_CRLF
65:	STEP_CONST
66:	0
67:	STEP_PUSH_FP
68:	STEP_CALL_SECONDARY
69:	['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': [...], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375]
70:	STEP_PRINT
71:	STEP_CRLF
72:	STEP_CONST
73:	1
74:	STEP_PUSH_FP
75:	STEP_CALL_SECONDARY
76:	['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': [...], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375]
77:	STEP_PRINT
78:	STEP_CRLF
79:	STEP_CONST
80:	12
81:	STEP_PUSH_FP
82:	STEP_CALL_SECONDARY
83:	['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': [...], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375]
84:	STEP_PRINT
85:	STEP_CRLF
86:	STEP_CONST
87:	27
88:	STEP_PUSH_FP
89:	STEP_CALL_SECONDARY
90:	['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': [...], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550]
91:	STEP_PRINT
92:	STEP_CRLF
93:	STEP_CONST
94:	16
95:	STEP_PUSH_FP
96:	STEP_CALL_SECONDARY
97:	['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': [...], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550]
98:	STEP_PRINT
99:	STEP_CRLF
100:	STEP_CONST
101:	1
102:	STEP_MINUS
103:	STEP_PUSH_FP
104:	STEP_CALL_SECONDARY
105:	['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': [...], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550]
106:	STEP_PRINT
107:	STEP_CRLF
108:	STEP_CONST
109:	0
110:	STEP_PUSH_FP
111:	STEP_CALL_SECONDARY
112:	['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': [...], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550]
113:	STEP_PRINT
114:	STEP_CRLF
115:	STEP_CONST
116:	1
117:	STEP_PUSH_FP
118:	STEP_CALL_SECONDARY
119:	['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': [...], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550]
120:	STEP_PRINT
121:	STEP_CRLF
122:	STEP_CONST
123:	12
124:	STEP_PUSH_FP
125:	STEP_CALL_SECONDARY
126:	['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': [...], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550]
127:	STEP_PRINT
128:	STEP_CRLF
129:	STEP_CONST
130:	27
131:	STEP_PUSH_FP
132:	STEP_CALL_SECONDARY
133:	['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788]
134:	STEP_PRINT
135:	STEP_CRLF
136:	STEP_CONST
137:	16
138:	STEP_PUSH_FP
139:	STEP_CALL_SECONDARY
140:	['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788]
141:	STEP_PRINT
142:	STEP_CRLF
143:	STEP_CONST
144:	1
145:	STEP_MINUS
146:	STEP_PUSH_FP
147:	STEP_CALL_SECONDARY
148:	['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788]
149:	STEP_PRINT
150:	STEP_CRLF
151:	STEP_CONST
152:	0
153:	STEP_PUSH_FP
154:	STEP_CALL_SECONDARY
155:	['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788]
156:	STEP_PRINT
157:	STEP_CRLF
158:	STEP_CONST
159:	1
160:	STEP_PUSH_FP
161:	STEP_CALL_SECONDARY
162:	['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788]
163:	STEP_PRINT
164:	STEP_CRLF
165:	STEP_CONST
166:	12
167:	STEP_PUSH_FP
168:	STEP_CALL_SECONDARY
169:	['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788]
170:	STEP_PRINT
171:	STEP_CRLF
172:	STEP_CONST
173:	27
174:	STEP_PUSH_FP
175:	STEP_CALL_SECONDARY
176:	['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995]
177:	STEP_PRINT
178:	STEP_CRLF
179:	STEP_CONST
180:	16
181:	STEP_PUSH_FP
182:	STEP_CALL_SECONDARY
183:	['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995]
184:	STEP_PRINT
185:	STEP_CRLF
186:	STEP_CONST
187:	1
188:	STEP_MINUS
189:	STEP_PUSH_FP
190:	STEP_CALL_SECONDARY
191:	['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995]
192:	STEP_PRINT
193:	STEP_CRLF
194:	STEP_CONST
195:	0
196:	STEP_PUSH_FP
197:	STEP_CALL_SECONDARY
198:	['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995]
199:	STEP_PRINT
200:	STEP_CRLF
201:	STEP_CONST
202:	1
203:	STEP_PUSH_FP
204:	STEP_CALL_SECONDARY
205:	['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995]
206:	STEP_PRINT
207:	STEP_CRLF
208:	STEP_CONST
209:	12
210:	STEP_PUSH_FP
211:	STEP_CALL_SECONDARY
212:	['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995]
213:	STEP_PRINT
214:	STEP_CRLF
215:	STEP_PAUSE
216*	FUNCTION outer scope::factor1	***************
216:	STEP_PUSH_FP
217:	STEP_CONST
218:	-2
219:	STEP_ADD
220:	STEP_FETCH_STACK
221:	STEP_CONST
222:	1
223:	STEP_GT
224:	STEP_GOTO0
225:	(24,)
226:	STEP_CONST
227:	Good parameter to factor1:
228:	STEP_PRINT
229:	STEP_CRLF
230:	STEP_PUSH_FP
231:	STEP_CONST
232:	-2
233:	STEP_ADD
234:	STEP_FETCH_STACK
235:	STEP_PRINT
236:	STEP_CRLF
237:	STEP_PUSH_FP
238:	STEP_CONST
239:	-2
240:	STEP_ADD
241:	STEP_FETCH_STACK
242:	STEP_CONST
243:	2
244:	STEP_PUSH_FP
245:	STEP_CALL_SECONDARY
246:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 274]
247:	STEP_GOTO
248:	(14,)
249:	STEP_CONST
250:	Bad parameter to factor1: 
251:	STEP_PRINT
252:	STEP_CRLF
253:	STEP_PUSH_FP
254:	STEP_CONST
255:	-2
256:	STEP_ADD
257:	STEP_FETCH_STACK
258:	STEP_PRINT
259:	STEP_CRLF
260:	STEP_CONST
261:	bad
262:	STEP_CONST
263:	0
264:	STEP_STORE
265:	STEP_CONST
266:	-2
267:	STEP_CONST
268:	-1
269:	STEP_DROPFRAME
270:	STEP_CONST
271:	0
272:	STEP_FETCH
273:	STEP_RETURN
274*	FUNCTION outer scope::factor1::helpFactor	***************
274:	STEP_PUSH_FP
275:	STEP_CONST
276:	-2
277:	STEP_ADD
278:	STEP_FETCH_STACK
279:	STEP_PUSH_FP
280:	STEP_CONST
281:	-3
282:	STEP_ADD
283:	STEP_FETCH_STACK
284:	STEP_LT
285:	STEP_GOTO0
286:	(68,)
287:	STEP_PUSH_FP
288:	STEP_CONST
289:	-3
290:	STEP_ADD
291:	STEP_FETCH_STACK
292:	STEP_PUSH_FP
293:	STEP_CONST
294:	-2
295:	STEP_ADD
296:	STEP_FETCH_STACK
297:	STEP_MOD
298:	STEP_CONST
299:	0
300:	STEP_EQ
301:	STEP_GOTO0
302:	(30,)
303:	STEP_PUSH_FP
304:	STEP_CONST
305:	-2
306:	STEP_ADD
307:	STEP_FETCH_STACK
308:	STEP_PRINT
309:	STEP_CRLF
310:	STEP_PUSH_FP
311:	STEP_CONST
312:	-3
313:	STEP_ADD
314:	STEP_FETCH_STACK
315:	STEP_PUSH_FP
316:	STEP_CONST
317:	-2
318:	STEP_ADD
319:	STEP_FETCH_STACK
320:	STEP_DIV
321:	STEP_CONST
322:	2
323:	STEP_PUSH_FP
324:	STEP_CONST
325:	-1
326:	STEP_ADD
327:	STEP_FETCH_STACK
328:	STEP_CALL_SECONDARY
329:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 274]
330:	STEP_GOTO
331:	(21,)
332:	STEP_PUSH_FP
333:	STEP_CONST
334:	-3
335:	STEP_ADD
336:	STEP_FETCH_STACK
337:	STEP_PUSH_FP
338:	STEP_CONST
339:	-2
340:	STEP_ADD
341:	STEP_FETCH_STACK
342:	STEP_CONST
343:	1
344:	STEP_ADD
345:	STEP_PUSH_FP
346:	STEP_CONST
347:	-1
348:	STEP_ADD
349:	STEP_FETCH_STACK
350:	STEP_CALL_SECONDARY
351:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 274]
352:	STEP_GOTO
353:	(10,)
354:	STEP_PUSH_FP
355:	STEP_CONST
356:	-3
357:	STEP_ADD
358:	STEP_FETCH_STACK
359:	STEP_PRINT
360:	STEP_CRLF
361:	STEP_CONST
362:	good
363:	STEP_CONST
364:	0
365:	STEP_STORE
366:	STEP_CONST
367:	-3
368:	STEP_CONST
369:	-1
370:	STEP_DROPFRAME
371:	STEP_CONST
372:	0
373:	STEP_FETCH
374:	STEP_RETURN
375*	FUNCTION outer scope::factor2	***************
375:	STEP_CONST
376:	0
377:	STEP_PUSH_FP
378:	STEP_CONST
379:	-2
380:	STEP_ADD
381:	STEP_FETCH_STACK
382:	STEP_CONST
383:	1
384:	STEP_MULT
385:	STEP_CONST
386:	1
387:	STEP_DIV
388:	STEP_ADD
389:	STEP_PUSH_FP
390:	STEP_CONST
391:	0
392:	STEP_ADD
393:	STEP_FETCH_STACK
394:	STEP_CONST
395:	1
396:	STEP_GT
397:	STEP_GOTO0
398:	(24,)
399:	STEP_CONST
400:	Good parameter to factor2:
401:	STEP_PRINT
402:	STEP_CRLF
403:	STEP_PUSH_FP
404:	STEP_CONST
405:	0
406:	STEP_ADD
407:	STEP_FETCH_STACK
408:	STEP_PRINT
409:	STEP_CRLF
410:	STEP_PUSH_FP
411:	STEP_CONST
412:	0
413:	STEP_ADD
414:	STEP_FETCH_STACK
415:	STEP_CONST
416:	2
417:	STEP_PUSH_FP
418:	STEP_CALL_SECONDARY
419:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]}, 375], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 447]
420:	STEP_GOTO
421:	(14,)
422:	STEP_CONST
423:	Bad parameter to factor2: 
424:	STEP_PRINT
425:	STEP_CRLF
426:	STEP_PUSH_FP
427:	STEP_CONST
428:	0
429:	STEP_ADD
430:	STEP_FETCH_STACK
431:	STEP_PRINT
432:	STEP_CRLF
433:	STEP_CONST
434:	bad
435:	STEP_CONST
436:	0
437:	STEP_STORE
438:	STEP_CONST
439:	-2
440:	STEP_CONST
441:	0
442:	STEP_DROPFRAME
443:	STEP_CONST
444:	0
445:	STEP_FETCH
446:	STEP_RETURN
447*	FUNCTION outer scope::factor2::helpFactor	***************
447:	STEP_PUSH_FP
448:	STEP_CONST
449:	-2
450:	STEP_ADD
451:	STEP_FETCH_STACK
452:	STEP_PUSH_FP
453:	STEP_CONST
454:	-3
455:	STEP_ADD
456:	STEP_FETCH_STACK
457:	STEP_LT
458:	STEP_GOTO0
459:	(70,)
460:	STEP_PUSH_FP
461:	STEP_CONST
462:	-3
463:	STEP_ADD
464:	STEP_FETCH_STACK
465:	STEP_PUSH_FP
466:	STEP_CONST
467:	-2
468:	STEP_ADD
469:	STEP_FETCH_STACK
470:	STEP_MOD
471:	STEP_CONST
472:	0
473:	STEP_EQ
474:	STEP_GOTO0
475:	(32,)
476:	STEP_PUSH_FP
477:	STEP_CONST
478:	-2
479:	STEP_ADD
480:	STEP_FETCH_STACK
481:	STEP_PRINT
482:	STEP_CRLF
483:	STEP_PUSH_FP
484:	STEP_CONST
485:	-3
486:	STEP_ADD
487:	STEP_FETCH_STACK
488:	STEP_PUSH_FP
489:	STEP_CONST
490:	-2
491:	STEP_ADD
492:	STEP_FETCH_STACK
493:	STEP_DIV
494:	STEP_PUSH_FP
495:	STEP_CONST
496:	-1
497:	STEP_ADD
498:	STEP_FETCH_STACK
499:	STEP_CONST
500:	-1
501:	STEP_ADD
502:	STEP_FETCH_STACK
503:	STEP_CALL_SECONDARY
504:	['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': [...], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375]
505:	STEP_GOTO
506:	(21,)
507:	STEP_PUSH_FP
508:	STEP_CONST
509:	-3
510:	STEP_ADD
511:	STEP_FETCH_STACK
512:	STEP_PUSH_FP
513:	STEP_CONST
514:	-2
515:	STEP_ADD
516:	STEP_FETCH_STACK
517:	STEP_CONST
518:	1
519:	STEP_ADD
520:	STEP_PUSH_FP
521:	STEP_CONST
522:	-1
523:	STEP_ADD
524:	STEP_FETCH_STACK
525:	STEP_CALL_SECONDARY
526:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]}, 375], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {...}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 447]
527:	STEP_GOTO
528:	(10,)
529:	STEP_PUSH_FP
530:	STEP_CONST
531:	-3
532:	STEP_ADD
533:	STEP_FETCH_STACK
534:	STEP_PRINT
535:	STEP_CRLF
536:	STEP_CONST
537:	good
538:	STEP_CONST
539:	0
540:	STEP_STORE
541:	STEP_CONST
542:	-3
543:	STEP_CONST
544:	-1
545:	STEP_DROPFRAME
546:	STEP_CONST
547:	0
548:	STEP_FETCH
549:	STEP_RETURN
550*	FUNCTION outer scope::factor3	***************
550:	STEP_CONST
551:	0
552:	STEP_PUSH_FP
553:	STEP_CONST
554:	-2
555:	STEP_ADD
556:	STEP_FETCH_STACK
557:	STEP_CONST
558:	1
559:	STEP_MULT
560:	STEP_CONST
561:	1
562:	STEP_DIV
563:	STEP_ADD
564:	STEP_PUSH_FP
565:	STEP_CONST
566:	0
567:	STEP_ADD
568:	STEP_FETCH_STACK
569:	STEP_CONST
570:	1
571:	STEP_GT
572:	STEP_GOTO0
573:	(24,)
574:	STEP_CONST
575:	Good parameter to factor3:
576:	STEP_PRINT
577:	STEP_CRLF
578:	STEP_PUSH_FP
579:	STEP_CONST
580:	0
581:	STEP_ADD
582:	STEP_FETCH_STACK
583:	STEP_PRINT
584:	STEP_CRLF
585:	STEP_PUSH_FP
586:	STEP_CONST
587:	0
588:	STEP_ADD
589:	STEP_FETCH_STACK
590:	STEP_CONST
591:	2
592:	STEP_PUSH_FP
593:	STEP_CALL_SECONDARY
594:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]
595:	STEP_GOTO
596:	(14,)
597:	STEP_CONST
598:	Bad parameter to factor3: 
599:	STEP_PRINT
600:	STEP_CRLF
601:	STEP_PUSH_FP
602:	STEP_CONST
603:	0
604:	STEP_ADD
605:	STEP_FETCH_STACK
606:	STEP_PRINT
607:	STEP_CRLF
608:	STEP_CONST
609:	bad
610:	STEP_CONST
611:	0
612:	STEP_STORE
613:	STEP_CONST
614:	-2
615:	STEP_CONST
616:	0
617:	STEP_DROPFRAME
618:	STEP_CONST
619:	0
620:	STEP_FETCH
621:	STEP_RETURN
622*	FUNCTION outer scope::factor3::helpFactor	***************
622:	STEP_PUSH_FP
623:	STEP_CALL_SECONDARY
624:	['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': [...], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {'#funcs': 1, 'helpDeep': [...], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}), 'tryfactor': ('symref', 'tryfactor', 1, {'#funcs': 1, 'helpDeep': [...], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': [...], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]})}, 637]
625:	STEP_CONST
626:	0
627:	STEP_STORE
628:	STEP_CONST
629:	-3
630:	STEP_CONST
631:	-1
632:	STEP_DROPFRAME
633:	STEP_CONST
634:	0
635:	STEP_FETCH
636:	STEP_RETURN
637*	FUNCTION outer scope::factor3::helpFactor::helpDeep	***************
637:	STEP_PUSH_FP
638:	STEP_CONST
639:	-1
640:	STEP_ADD
641:	STEP_FETCH_STACK
642:	STEP_CONST
643:	-2
644:	STEP_ADD
645:	STEP_FETCH_STACK
646:	STEP_PUSH_FP
647:	STEP_CONST
648:	-1
649:	STEP_ADD
650:	STEP_FETCH_STACK
651:	STEP_CONST
652:	-3
653:	STEP_ADD
654:	STEP_FETCH_STACK
655:	STEP_LT
656:	STEP_GOTO0
657:	(106,)
658:	STEP_PUSH_FP
659:	STEP_CONST
660:	-1
661:	STEP_ADD
662:	STEP_FETCH_STACK
663:	STEP_CONST
664:	-3
665:	STEP_ADD
666:	STEP_FETCH_STACK
667:	STEP_PUSH_FP
668:	STEP_CONST
669:	-1
670:	STEP_ADD
671:	STEP_FETCH_STACK
672:	STEP_CONST
673:	-2
674:	STEP_ADD
675:	STEP_FETCH_STACK
676:	STEP_MOD
677:	STEP_CONST
678:	0
679:	STEP_EQ
680:	STEP_GOTO0
681:	(48,)
682:	STEP_PUSH_FP
683:	STEP_CONST
684:	-1
685:	STEP_ADD
686:	STEP_FETCH_STACK
687:	STEP_CONST
688:	-2
689:	STEP_ADD
690:	STEP_FETCH_STACK
691:	STEP_PRINT
692:	STEP_CRLF
693:	STEP_PUSH_FP
694:	STEP_CONST
695:	-1
696:	STEP_ADD
697:	STEP_FETCH_STACK
698:	STEP_CONST
699:	-3
700:	STEP_ADD
701:	STEP_FETCH_STACK
702:	STEP_PUSH_FP
703:	STEP_CONST
704:	-1
705:	STEP_ADD
706:	STEP_FETCH_STACK
707:	STEP_CONST
708:	-2
709:	STEP_ADD
710:	STEP_FETCH_STACK
711:	STEP_DIV
712:	STEP_PUSH_FP
713:	STEP_CONST
714:	-1
715:	STEP_ADD
716:	STEP_FETCH_STACK
717:	STEP_CONST
718:	-1
719:	STEP_ADD
720:	STEP_FETCH_STACK
721:	STEP_CONST
722:	-1
723:	STEP_ADD
724:	STEP_FETCH_STACK
725:	STEP_CALL_SECONDARY
726:	['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': [...], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]}, 550]
727:	STEP_GOTO
728:	(33,)
729:	STEP_PUSH_FP
730:	STEP_CONST
731:	-1
732:	STEP_ADD
733:	STEP_FETCH_STACK
734:	STEP_CONST
735:	-3
736:	STEP_ADD
737:	STEP_FETCH_STACK
738:	STEP_PUSH_FP
739:	STEP_CONST
740:	-1
741:	STEP_ADD
742:	STEP_FETCH_STACK
743:	STEP_CONST
744:	-2
745:	STEP_ADD
746:	STEP_FETCH_STACK
747:	STEP_CONST
748:	1
749:	STEP_ADD
750:	STEP_PUSH_FP
751:	STEP_CONST
752:	-1
753:	STEP_ADD
754:	STEP_FETCH_STACK
755:	STEP_CONST
756:	-1
757:	STEP_ADD
758:	STEP_FETCH_STACK
759:	STEP_CALL_SECONDARY
760:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, 'helpDeep': ['func', 'helpDeep', 'string', (), {'#funcs': 0, 'factor3': ('symref', 'factor3', 3, {'factor4': ['func', 'factor4', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {...})}, 866]}, 846]}, 788], 'factor5': ['func', 'factor5', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {...})}, 1101]}, 1073]}, 1053]}, 995], 'factor1': ['func', 'factor1', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 274]}, 216], 'factor2': ['func', 'factor2', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'factor2': ('symref', 'factor2', 2, {...}), '#funcs': 0, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'helpFactor': ('symref', 'helpFactor', 1, {...})}, 447]}, 375], 'factor3': ['func', 'factor3', 'string', (('valueToFactor', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]}, 550], '#locals': 0, '#depth': 0, '#funcs': 5, '#params': 0}), '#locals': 0, '#depth': 3, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 0, 'helpFactor': ('symref', 'helpFactor', 2, {'#funcs': 1, '#locals': 1, '#depth': 1, 'value2factor': ('var', 'value2factor', 'int', 0), 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 637], '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2}, 622]
761:	STEP_GOTO
762:	(14,)
763:	STEP_PUSH_FP
764:	STEP_CONST
765:	-1
766:	STEP_ADD
767:	STEP_FETCH_STACK
768:	STEP_CONST
769:	-3
770:	STEP_ADD
771:	STEP_FETCH_STACK
772:	STEP_PRINT
773:	STEP_CRLF
774:	STEP_CONST
775:	good
776:	STEP_CONST
777:	0
778:	STEP_STORE
779:	STEP_CONST
780:	-1
781:	STEP_CONST
782:	-1
783:	STEP_DROPFRAME
784:	STEP_CONST
785:	0
786:	STEP_FETCH
787:	STEP_RETURN
788*	FUNCTION outer scope::factor4	***************
788:	STEP_PUSH_FP
789:	STEP_CONST
790:	-2
791:	STEP_ADD
792:	STEP_FETCH_STACK
793:	STEP_CONST
794:	1
795:	STEP_GT
796:	STEP_GOTO0
797:	(24,)
798:	STEP_CONST
799:	Good parameter to factor4:
800:	STEP_PRINT
801:	STEP_CRLF
802:	STEP_PUSH_FP
803:	STEP_CONST
804:	-2
805:	STEP_ADD
806:	STEP_FETCH_STACK
807:	STEP_PRINT
808:	STEP_CRLF
809:	STEP_PUSH_FP
810:	STEP_CONST
811:	-2
812:	STEP_ADD
813:	STEP_FETCH_STACK
814:	STEP_CONST
815:	2
816:	STEP_PUSH_FP
817:	STEP_CALL_SECONDARY
818:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 866]}, 846]
819:	STEP_GOTO
820:	(14,)
821:	STEP_CONST
822:	Bad parameter to factor4: 
823:	STEP_PRINT
824:	STEP_CRLF
825:	STEP_PUSH_FP
826:	STEP_CONST
827:	-2
828:	STEP_ADD
829:	STEP_FETCH_STACK
830:	STEP_PRINT
831:	STEP_CRLF
832:	STEP_CONST
833:	bad
834:	STEP_CONST
835:	0
836:	STEP_STORE
837:	STEP_CONST
838:	-2
839:	STEP_CONST
840:	-1
841:	STEP_DROPFRAME
842:	STEP_CONST
843:	0
844:	STEP_FETCH
845:	STEP_RETURN
846*	FUNCTION outer scope::factor4::helpFactor	***************
846:	STEP_PUSH_FP
847:	STEP_CONST
848:	-3
849:	STEP_ADD
850:	STEP_FETCH_STACK
851:	STEP_PUSH_FP
852:	STEP_CALL_SECONDARY
853:	['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': [...]}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': [...]}, 846]})}, 866]
854:	STEP_CONST
855:	0
856:	STEP_STORE
857:	STEP_CONST
858:	-3
859:	STEP_CONST
860:	-1
861:	STEP_DROPFRAME
862:	STEP_CONST
863:	0
864:	STEP_FETCH
865:	STEP_RETURN
866*	FUNCTION outer scope::factor4::helpFactor::deep4	***************
866:	STEP_PUSH_FP
867:	STEP_CONST
868:	-1
869:	STEP_ADD
870:	STEP_FETCH_STACK
871:	STEP_CONST
872:	-2
873:	STEP_ADD
874:	STEP_FETCH_STACK
875:	STEP_PUSH_FP
876:	STEP_CONST
877:	-2
878:	STEP_ADD
879:	STEP_FETCH_STACK
880:	STEP_LT
881:	STEP_GOTO0
882:	(92,)
883:	STEP_PUSH_FP
884:	STEP_CONST
885:	-2
886:	STEP_ADD
887:	STEP_FETCH_STACK
888:	STEP_PUSH_FP
889:	STEP_CONST
890:	-1
891:	STEP_ADD
892:	STEP_FETCH_STACK
893:	STEP_CONST
894:	-2
895:	STEP_ADD
896:	STEP_FETCH_STACK
897:	STEP_MOD
898:	STEP_CONST
899:	0
900:	STEP_EQ
901:	STEP_GOTO0
902:	(42,)
903:	STEP_PUSH_FP
904:	STEP_CONST
905:	-1
906:	STEP_ADD
907:	STEP_FETCH_STACK
908:	STEP_CONST
909:	-2
910:	STEP_ADD
911:	STEP_FETCH_STACK
912:	STEP_PRINT
913:	STEP_CRLF
914:	STEP_PUSH_FP
915:	STEP_CONST
916:	-2
917:	STEP_ADD
918:	STEP_FETCH_STACK
919:	STEP_PUSH_FP
920:	STEP_CONST
921:	-1
922:	STEP_ADD
923:	STEP_FETCH_STACK
924:	STEP_CONST
925:	-2
926:	STEP_ADD
927:	STEP_FETCH_STACK
928:	STEP_DIV
929:	STEP_CONST
930:	2
931:	STEP_PUSH_FP
932:	STEP_CONST
933:	-1
934:	STEP_ADD
935:	STEP_FETCH_STACK
936:	STEP_CONST
937:	-1
938:	STEP_ADD
939:	STEP_FETCH_STACK
940:	STEP_CALL_SECONDARY
941:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 866]}, 846]
942:	STEP_GOTO
943:	(29,)
944:	STEP_PUSH_FP
945:	STEP_CONST
946:	-2
947:	STEP_ADD
948:	STEP_FETCH_STACK
949:	STEP_PUSH_FP
950:	STEP_CONST
951:	-1
952:	STEP_ADD
953:	STEP_FETCH_STACK
954:	STEP_CONST
955:	-2
956:	STEP_ADD
957:	STEP_FETCH_STACK
958:	STEP_CONST
959:	1
960:	STEP_ADD
961:	STEP_PUSH_FP
962:	STEP_CONST
963:	-1
964:	STEP_ADD
965:	STEP_FETCH_STACK
966:	STEP_CONST
967:	-1
968:	STEP_ADD
969:	STEP_FETCH_STACK
970:	STEP_CALL_SECONDARY
971:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 3, 'value': ('var', 'value', 'int', -2), 'tryfactor': ('symref', 'tryfactor', 1, {...}), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 866]}, 846]
972:	STEP_GOTO
973:	(10,)
974:	STEP_PUSH_FP
975:	STEP_CONST
976:	-2
977:	STEP_ADD
978:	STEP_FETCH_STACK
979:	STEP_PRINT
980:	STEP_CRLF
981:	STEP_CONST
982:	good
983:	STEP_CONST
984:	0
985:	STEP_STORE
986:	STEP_CONST
987:	-2
988:	STEP_CONST
989:	-1
990:	STEP_DROPFRAME
991:	STEP_CONST
992:	0
993:	STEP_FETCH
994:	STEP_RETURN
995*	FUNCTION outer scope::factor5	***************
995:	STEP_PUSH_FP
996:	STEP_CONST
997:	-2
998:	STEP_ADD
999:	STEP_FETCH_STACK
1000:	STEP_CONST
1001:	1
1002:	STEP_GT
1003:	STEP_GOTO0
1004:	(24,)
1005:	STEP_CONST
1006:	Good parameter to factor5:
1007:	STEP_PRINT
1008:	STEP_CRLF
1009:	STEP_PUSH_FP
1010:	STEP_CONST
1011:	-2
1012:	STEP_ADD
1013:	STEP_FETCH_STACK
1014:	STEP_PRINT
1015:	STEP_CRLF
1016:	STEP_PUSH_FP
1017:	STEP_CONST
1018:	-2
1019:	STEP_ADD
1020:	STEP_FETCH_STACK
1021:	STEP_CONST
1022:	2
1023:	STEP_PUSH_FP
1024:	STEP_CALL_SECONDARY
1025:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 1101]}, 1073]}, 1053]
1026:	STEP_GOTO
1027:	(14,)
1028:	STEP_CONST
1029:	Bad parameter to factor5: 
1030:	STEP_PRINT
1031:	STEP_CRLF
1032:	STEP_PUSH_FP
1033:	STEP_CONST
1034:	-2
1035:	STEP_ADD
1036:	STEP_FETCH_STACK
1037:	STEP_PRINT
1038:	STEP_CRLF
1039:	STEP_CONST
1040:	bad
1041:	STEP_CONST
1042:	0
1043:	STEP_STORE
1044:	STEP_CONST
1045:	-2
1046:	STEP_CONST
1047:	-1
1048:	STEP_DROPFRAME
1049:	STEP_CONST
1050:	0
1051:	STEP_FETCH
1052:	STEP_RETURN
1053*	FUNCTION outer scope::factor5::helpFactor	***************
1053:	STEP_PUSH_FP
1054:	STEP_CONST
1055:	-3
1056:	STEP_ADD
1057:	STEP_FETCH_STACK
1058:	STEP_PUSH_FP
1059:	STEP_CALL_SECONDARY
1060:	['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': [...]}, 1053]}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': [...]}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': [...]}, 1053]})}, 1101]}, 1073]
1061:	STEP_CONST
1062:	0
1063:	STEP_STORE
1064:	STEP_CONST
1065:	-3
1066:	STEP_CONST
1067:	-1
1068:	STEP_DROPFRAME
1069:	STEP_CONST
1070:	0
1071:	STEP_FETCH
1072:	STEP_RETURN
1073*	FUNCTION outer scope::factor5::helpFactor::deep4	***************
1073:	STEP_PUSH_FP
1074:	STEP_CONST
1075:	-1
1076:	STEP_ADD
1077:	STEP_FETCH_STACK
1078:	STEP_CONST
1079:	-1
1080:	STEP_ADD
1081:	STEP_FETCH_STACK
1082:	STEP_CONST
1083:	-2
1084:	STEP_ADD
1085:	STEP_FETCH_STACK
1086:	STEP_PUSH_FP
1087:	STEP_CALL_SECONDARY
1088:	['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {...}, 1073]}, 1053]}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': [...]}), 'tryfactor': ('symref', 'tryfactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {...}, 1053]}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': [...]}, 1073]}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': ['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {...}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': [...]}, 1073]}, 1053]})}, 1101]
1089:	STEP_CONST
1090:	0
1091:	STEP_STORE
1092:	STEP_CONST
1093:	-2
1094:	STEP_CONST
1095:	-1
1096:	STEP_DROPFRAME
1097:	STEP_CONST
1098:	0
1099:	STEP_FETCH
1100:	STEP_RETURN
1101*	FUNCTION outer scope::factor5::helpFactor::deep4::deepest	***************
1101:	STEP_PUSH_FP
1102:	STEP_CONST
1103:	-1
1104:	STEP_ADD
1105:	STEP_FETCH_STACK
1106:	STEP_CONST
1107:	-1
1108:	STEP_ADD
1109:	STEP_FETCH_STACK
1110:	STEP_CONST
1111:	-2
1112:	STEP_ADD
1113:	STEP_FETCH_STACK
1114:	STEP_PUSH_FP
1115:	STEP_CONST
1116:	-1
1117:	STEP_ADD
1118:	STEP_FETCH_STACK
1119:	STEP_CONST
1120:	-2
1121:	STEP_ADD
1122:	STEP_FETCH_STACK
1123:	STEP_LT
1124:	STEP_GOTO0
1125:	(128,)
1126:	STEP_PUSH_FP
1127:	STEP_CONST
1128:	-1
1129:	STEP_ADD
1130:	STEP_FETCH_STACK
1131:	STEP_CONST
1132:	-2
1133:	STEP_ADD
1134:	STEP_FETCH_STACK
1135:	STEP_PUSH_FP
1136:	STEP_CONST
1137:	-1
1138:	STEP_ADD
1139:	STEP_FETCH_STACK
1140:	STEP_CONST
1141:	-1
1142:	STEP_ADD
1143:	STEP_FETCH_STACK
1144:	STEP_CONST
1145:	-2
1146:	STEP_ADD
1147:	STEP_FETCH_STACK
1148:	STEP_MOD
1149:	STEP_CONST
1150:	0
1151:	STEP_EQ
1152:	STEP_GOTO0
1153:	(58,)
1154:	STEP_PUSH_FP
1155:	STEP_CONST
1156:	-1
1157:	STEP_ADD
1158:	STEP_FETCH_STACK
1159:	STEP_CONST
1160:	-1
1161:	STEP_ADD
1162:	STEP_FETCH_STACK
1163:	STEP_CONST
1164:	-2
1165:	STEP_ADD
1166:	STEP_FETCH_STACK
1167:	STEP_PRINT
1168:	STEP_CRLF
1169:	STEP_PUSH_FP
1170:	STEP_CONST
1171:	-1
1172:	STEP_ADD
1173:	STEP_FETCH_STACK
1174:	STEP_CONST
1175:	-2
1176:	STEP_ADD
1177:	STEP_FETCH_STACK
1178:	STEP_PUSH_FP
1179:	STEP_CONST
1180:	-1
1181:	STEP_ADD
1182:	STEP_FETCH_STACK
1183:	STEP_CONST
1184:	-1
1185:	STEP_ADD
1186:	STEP_FETCH_STACK
1187:	STEP_CONST
1188:	-2
1189:	STEP_ADD
1190:	STEP_FETCH_STACK
1191:	STEP_DIV
1192:	STEP_CONST
1193:	2
1194:	STEP_PUSH_FP
1195:	STEP_CONST
1196:	-1
1197:	STEP_ADD
1198:	STEP_FETCH_STACK
1199:	STEP_CONST
1200:	-1
1201:	STEP_ADD
1202:	STEP_FETCH_STACK
1203:	STEP_CONST
1204:	-1
1205:	STEP_ADD
1206:	STEP_FETCH_STACK
1207:	STEP_CALL_SECONDARY
1208:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 1101]}, 1073]}, 1053]
1209:	STEP_GOTO
1210:	(41,)
1211:	STEP_PUSH_FP
1212:	STEP_CONST
1213:	-1
1214:	STEP_ADD
1215:	STEP_FETCH_STACK
1216:	STEP_CONST
1217:	-2
1218:	STEP_ADD
1219:	STEP_FETCH_STACK
1220:	STEP_PUSH_FP
1221:	STEP_CONST
1222:	-1
1223:	STEP_ADD
1224:	STEP_FETCH_STACK
1225:	STEP_CONST
1226:	-1
1227:	STEP_ADD
1228:	STEP_FETCH_STACK
1229:	STEP_CONST
1230:	-2
1231:	STEP_ADD
1232:	STEP_FETCH_STACK
1233:	STEP_CONST
1234:	1
1235:	STEP_ADD
1236:	STEP_PUSH_FP
1237:	STEP_CONST
1238:	-1
1239:	STEP_ADD
1240:	STEP_FETCH_STACK
1241:	STEP_CONST
1242:	-1
1243:	STEP_ADD
1244:	STEP_FETCH_STACK
1245:	STEP_CONST
1246:	-1
1247:	STEP_ADD
1248:	STEP_FETCH_STACK
1249:	STEP_CALL_SECONDARY
1250:	['func', 'helpFactor', 'string', (('value', ('typedecl', 'int')), ('tryfactor', ('typedecl', 'int'))), {'#funcs': 1, '#locals': 0, '#depth': 2, 'value': ('var', 'value', 'int', -3), 'tryfactor': ('var', 'tryfactor', 'int', -2), '#params': 2, 'deep4': ['func', 'deep4', 'string', (('value', ('typedecl', 'int')),), {'#funcs': 1, '#locals': 0, 'valueToFactor': ('symref', 'valueToFactor', 2, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]}), '#depth': 3, 'value': ('var', 'value', 'int', -2), '#params': 1, 'deepest': ['func', 'deepest', 'string', (('unused', ('typedecl', 'int')),), {'#funcs': 0, '#locals': 0, '#depth': 4, 'value': ('symref', 'value', 1, {...}), 'tryfactor': ('symref', 'tryfactor', 2, {...}), 'unused': ('var', 'unused', 'int', -2), '#params': 1, 'helpFactor': ('symref', 'helpFactor', 3, {'#funcs': 1, '#locals': 0, '#depth': 1, 'valueToFactor': ('var', 'valueToFactor', 'int', -2), '#params': 1, 'helpFactor': [...]})}, 1101]}, 1073]}, 1053]
1251:	STEP_GOTO
1252:	(14,)
1253:	STEP_PUSH_FP
1254:	STEP_CONST
1255:	-1
1256:	STEP_ADD
1257:	STEP_FETCH_STACK
1258:	STEP_CONST
1259:	-2
1260:	STEP_ADD
1261:	STEP_FETCH_STACK
1262:	STEP_PRINT
1263:	STEP_CRLF
1264:	STEP_CONST
1265:	good
1266:	STEP_CONST
1267:	0
1268:	STEP_STORE
1269:	STEP_CONST
1270:	-2
1271:	STEP_CONST
1272:	-1
1273:	STEP_DROPFRAME
1274:	STEP_CONST
1275:	0
1276:	STEP_FETCH
1277:	STEP_RETURN
PROGRAM LINK AFTER BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	27
2:	STEP_PUSH_FP
3:	STEP_CALL_SECONDARY
4:	216
5:	STEP_PRINT
6:	STEP_CRLF
7:	STEP_CONST
8:	16
9:	STEP_PUSH_FP
10:	STEP_CALL_SECONDARY
11:	216
12:	STEP_PRINT
13:	STEP_CRLF
14:	STEP_CONST
15:	1
16:	STEP_MINUS
17:	STEP_PUSH_FP
18:	STEP_CALL_SECONDARY
19:	216
20:	STEP_PRINT
21:	STEP_CRLF
22:	STEP_CONST
23:	0
24:	STEP_PUSH_FP
25:	STEP_CALL_SECONDARY
26:	216
27:	STEP_PRINT
28:	STEP_CRLF
29:	STEP_CONST
30:	1
31:	STEP_PUSH_FP
32:	STEP_CALL_SECONDARY
33:	216
34:	STEP_PRINT
35:	STEP_CRLF
36:	STEP_CONST
37:	12
38:	STEP_PUSH_FP
39:	STEP_CALL_SECONDARY
40:	216
41:	STEP_PRINT
42:	STEP_CRLF
43:	STEP_CONST
44:	27
45:	STEP_PUSH_FP
46:	STEP_CALL_SECONDARY
47:	375
48:	STEP_PRINT
49:	STEP_CRLF
50:	STEP_CONST
51:	16
52:	STEP_PUSH_FP
53:	STEP_CALL_SECONDARY
54:	375
55:	STEP_PRINT
56:	STEP_CRLF
57:	STEP_CONST
58:	1
59:	STEP_MINUS
60:	STEP_PUSH_FP
61:	STEP_CALL_SECONDARY
62:	375
63:	STEP_PRINT
64:	STEP_CRLF
65:	STEP_CONST
66:	0
67:	STEP_PUSH_FP
68:	STEP_CALL_SECONDARY
69:	375
70:	STEP_PRINT
71:	STEP_CRLF
72:	STEP_CONST
73:	1
74:	STEP_PUSH_FP
75:	STEP_CALL_SECONDARY
76:	375
77:	STEP_PRINT
78:	STEP_CRLF
79:	STEP_CONST
80:	12
81:	STEP_PUSH_FP
82:	STEP_CALL_SECONDARY
83:	375
84:	STEP_PRINT
85:	STEP_CRLF
86:	STEP_CONST
87:	27
88:	STEP_PUSH_FP
89:	STEP_CALL_SECONDARY
90:	550
91:	STEP_PRINT
92:	STEP_CRLF
93:	STEP_CONST
94:	16
95:	STEP_PUSH_FP
96:	STEP_CALL_SECONDARY
97:	550
98:	STEP_PRINT
99:	STEP_CRLF
100:	STEP_CONST
101:	1
102:	STEP_MINUS
103:	STEP_PUSH_FP
104:	STEP_CALL_SECONDARY
105:	550
106:	STEP_PRINT
107:	STEP_CRLF
108:	STEP_CONST
109:	0
110:	STEP_PUSH_FP
111:	STEP_CALL_SECONDARY
112:	550
113:	STEP_PRINT
114:	STEP_CRLF
115:	STEP_CONST
116:	1
117:	STEP_PUSH_FP
118:	STEP_CALL_SECONDARY
119:	550
120:	STEP_PRINT
121:	STEP_CRLF
122:	STEP_CONST
123:	12
124:	STEP_PUSH_FP
125:	STEP_CALL_SECONDARY
126:	550
127:	STEP_PRINT
128:	STEP_CRLF
129:	STEP_CONST
130:	27
131:	STEP_PUSH_FP
132:	STEP_CALL_SECONDARY
133:	788
134:	STEP_PRINT
135:	STEP_CRLF
136:	STEP_CONST
137:	16
138:	STEP_PUSH_FP
139:	STEP_CALL_SECONDARY
140:	788
141:	STEP_PRINT
142:	STEP_CRLF
143:	STEP_CONST
144:	1
145:	STEP_MINUS
146:	STEP_PUSH_FP
147:	STEP_CALL_SECONDARY
148:	788
149:	STEP_PRINT
150:	STEP_CRLF
151:	STEP_CONST
152:	0
153:	STEP_PUSH_FP
154:	STEP_CALL_SECONDARY
155:	788
156:	STEP_PRINT
157:	STEP_CRLF
158:	STEP_CONST
159:	1
160:	STEP_PUSH_FP
161:	STEP_CALL_SECONDARY
162:	788
163:	STEP_PRINT
164:	STEP_CRLF
165:	STEP_CONST
166:	12
167:	STEP_PUSH_FP
168:	STEP_CALL_SECONDARY
169:	788
170:	STEP_PRINT
171:	STEP_CRLF
172:	STEP_CONST
173:	27
174:	STEP_PUSH_FP
175:	STEP_CALL_SECONDARY
176:	995
177:	STEP_PRINT
178:	STEP_CRLF
179:	STEP_CONST
180:	16
181:	STEP_PUSH_FP
182:	STEP_CALL_SECONDARY
183:	995
184:	STEP_PRINT
185:	STEP_CRLF
186:	STEP_CONST
187:	1
188:	STEP_MINUS
189:	STEP_PUSH_FP
190:	STEP_CALL_SECONDARY
191:	995
192:	STEP_PRINT
193:	STEP_CRLF
194:	STEP_CONST
195:	0
196:	STEP_PUSH_FP
197:	STEP_CALL_SECONDARY
198:	995
199:	STEP_PRINT
200:	STEP_CRLF
201:	STEP_CONST
202:	1
203:	STEP_PUSH_FP
204:	STEP_CALL_SECONDARY
205:	995
206:	STEP_PRINT
207:	STEP_CRLF
208:	STEP_CONST
209:	12
210:	STEP_PUSH_FP
211:	STEP_CALL_SECONDARY
212:	995
213:	STEP_PRINT
214:	STEP_CRLF
215:	STEP_PAUSE
216*	FUNCTION outer scope::factor1	***************
216:	STEP_PUSH_FP
217:	STEP_CONST
218:	-2
219:	STEP_ADD
220:	STEP_FETCH_STACK
221:	STEP_CONST
222:	1
223:	STEP_GT
224:	STEP_GOTO0
225:	249
226:	STEP_CONST
227:	Good parameter to factor1:
228:	STEP_PRINT
229:	STEP_CRLF
230:	STEP_PUSH_FP
231:	STEP_CONST
232:	-2
233:	STEP_ADD
234:	STEP_FETCH_STACK
235:	STEP_PRINT
236:	STEP_CRLF
237:	STEP_PUSH_FP
238:	STEP_CONST
239:	-2
240:	STEP_ADD
241:	STEP_FETCH_STACK
242:	STEP_CONST
243:	2
244:	STEP_PUSH_FP
245:	STEP_CALL_SECONDARY
246:	274
247:	STEP_GOTO
248:	262
249:	STEP_CONST
250:	Bad parameter to factor1: 
251:	STEP_PRINT
252:	STEP_CRLF
253:	STEP_PUSH_FP
254:	STEP_CONST
255:	-2
256:	STEP_ADD
257:	STEP_FETCH_STACK
258:	STEP_PRINT
259:	STEP_CRLF
260:	STEP_CONST
261:	bad
262:	STEP_CONST
263:	0
264:	STEP_STORE
265:	STEP_CONST
266:	-2
267:	STEP_CONST
268:	-1
269:	STEP_DROPFRAME
270:	STEP_CONST
271:	0
272:	STEP_FETCH
273:	STEP_RETURN
274*	FUNCTION outer scope::factor1::helpFactor	***************
274:	STEP_PUSH_FP
275:	STEP_CONST
276:	-2
277:	STEP_ADD
278:	STEP_FETCH_STACK
279:	STEP_PUSH_FP
280:	STEP_CONST
281:	-3
282:	STEP_ADD
283:	STEP_FETCH_STACK
284:	STEP_LT
285:	STEP_GOTO0
286:	354
287:	STEP_PUSH_FP
288:	STEP_CONST
289:	-3
290:	STEP_ADD
291:	STEP_FETCH_STACK
292:	STEP_PUSH_FP
293:	STEP_CONST
294:	-2
295:	STEP_ADD
296:	STEP_FETCH_STACK
297:	STEP_MOD
298:	STEP_CONST
299:	0
300:	STEP_EQ
301:	STEP_GOTO0
302:	332
303:	STEP_PUSH_FP
304:	STEP_CONST
305:	-2
306:	STEP_ADD
307:	STEP_FETCH_STACK
308:	STEP_PRINT
309:	STEP_CRLF
310:	STEP_PUSH_FP
311:	STEP_CONST
312:	-3
313:	STEP_ADD
314:	STEP_FETCH_STACK
315:	STEP_PUSH_FP
316:	STEP_CONST
317:	-2
318:	STEP_ADD
319:	STEP_FETCH_STACK
320:	STEP_DIV
321:	STEP_CONST
322:	2
323:	STEP_PUSH_FP
324:	STEP_CONST
325:	-1
326:	STEP_ADD
327:	STEP_FETCH_STACK
328:	STEP_CALL_SECONDARY
329:	274
330:	STEP_GOTO
331:	352
332:	STEP_PUSH_FP
333:	STEP_CONST
334:	-3
335:	STEP_ADD
336:	STEP_FETCH_STACK
337:	STEP_PUSH_FP
338:	STEP_CONST
339:	-2
340:	STEP_ADD
341:	STEP_FETCH_STACK
342:	STEP_CONST
343:	1
344:	STEP_ADD
345:	STEP_PUSH_FP
346:	STEP_CONST
347:	-1
348:	STEP_ADD
349:	STEP_FETCH_STACK
350:	STEP_CALL_SECONDARY
351:	274
352:	STEP_GOTO
353:	363
354:	STEP_PUSH_FP
355:	STEP_CONST
356:	-3
357:	STEP_ADD
358:	STEP_FETCH_STACK
359:	STEP_PRINT
360:	STEP_CRLF
361:	STEP_CONST
362:	good
363:	STEP_CONST
364:	0
365:	STEP_STORE
366:	STEP_CONST
367:	-3
368:	STEP_CONST
369:	-1
370:	STEP_DROPFRAME
371:	STEP_CONST
372:	0
373:	STEP_FETCH
374:	STEP_RETURN
375*	FUNCTION outer scope::factor2	***************
375:	STEP_CONST
376:	0
377:	STEP_PUSH_FP
378:	STEP_CONST
379:	-2
380:	STEP_ADD
381:	STEP_FETCH_STACK
382:	STEP_CONST
383:	1
384:	STEP_MULT
385:	STEP_CONST
386:	1
387:	STEP_DIV
388:	STEP_ADD
389:	STEP_PUSH_FP
390:	STEP_CONST
391:	0
392:	STEP_ADD
393:	STEP_FETCH_STACK
394:	STEP_CONST
395:	1
396:	STEP_GT
397:	STEP_GOTO0
398:	422
399:	STEP_CONST
400:	Good parameter to factor2:
401:	STEP_PRINT
402:	STEP_CRLF
403:	STEP_PUSH_FP
404:	STEP_CONST
405:	0
406:	STEP_ADD
407:	STEP_FETCH_STACK
408:	STEP_PRINT
409:	STEP_CRLF
410:	STEP_PUSH_FP
411:	STEP_CONST
412:	0
413:	STEP_ADD
414:	STEP_FETCH_STACK
415:	STEP_CONST
416:	2
417:	STEP_PUSH_FP
418:	STEP_CALL_SECONDARY
419:	447
420:	STEP_GOTO
421:	435
422:	STEP_CONST
423:	Bad parameter to factor2: 
424:	STEP_PRINT
425:	STEP_CRLF
426:	STEP_PUSH_FP
427:	STEP_CONST
428:	0
429:	STEP_ADD
430:	STEP_FETCH_STACK
431:	STEP_PRINT
432:	STEP_CRLF
433:	STEP_CONST
434:	bad
435:	STEP_CONST
436:	0
437:	STEP_STORE
438:	STEP_CONST
439:	-2
440:	STEP_CONST
441:	0
442:	STEP_DROPFRAME
443:	STEP_CONST
444:	0
445:	STEP_FETCH
446:	STEP_RETURN
447*	FUNCTION outer scope::factor2::helpFactor	***************
447:	STEP_PUSH_FP
448:	STEP_CONST
449:	-2
450:	STEP_ADD
451:	STEP_FETCH_STACK
452:	STEP_PUSH_FP
453:	STEP_CONST
454:	-3
455:	STEP_ADD
456:	STEP_FETCH_STACK
457:	STEP_LT
458:	STEP_GOTO0
459:	529
460:	STEP_PUSH_FP
461:	STEP_CONST
462:	-3
463:	STEP_ADD
464:	STEP_FETCH_STACK
465:	STEP_PUSH_FP
466:	STEP_CONST
467:	-2
468:	STEP_ADD
469:	STEP_FETCH_STACK
470:	STEP_MOD
471:	STEP_CONST
472:	0
473:	STEP_EQ
474:	STEP_GOTO0
475:	507
476:	STEP_PUSH_FP
477:	STEP_CONST
478:	-2
479:	STEP_ADD
480:	STEP_FETCH_STACK
481:	STEP_PRINT
482:	STEP_CRLF
483:	STEP_PUSH_FP
484:	STEP_CONST
485:	-3
486:	STEP_ADD
487:	STEP_FETCH_STACK
488:	STEP_PUSH_FP
489:	STEP_CONST
490:	-2
491:	STEP_ADD
492:	STEP_FETCH_STACK
493:	STEP_DIV
494:	STEP_PUSH_FP
495:	STEP_CONST
496:	-1
497:	STEP_ADD
498:	STEP_FETCH_STACK
499:	STEP_CONST
500:	-1
501:	STEP_ADD
502:	STEP_FETCH_STACK
503:	STEP_CALL_SECONDARY
504:	375
505:	STEP_GOTO
506:	527
507:	STEP_PUSH_FP
508:	STEP_CONST
509:	-3
510:	STEP_ADD
511:	STEP_FETCH_STACK
512:	STEP_PUSH_FP
513:	STEP_CONST
514:	-2
515:	STEP_ADD
516:	STEP_FETCH_STACK
517:	STEP_CONST
518:	1
519:	STEP_ADD
520:	STEP_PUSH_FP
521:	STEP_CONST
522:	-1
523:	STEP_ADD
524:	STEP_FETCH_STACK
525:	STEP_CALL_SECONDARY
526:	447
527:	STEP_GOTO
528:	538
529:	STEP_PUSH_FP
530:	STEP_CONST
531:	-3
532:	STEP_ADD
533:	STEP_FETCH_STACK
534:	STEP_PRINT
535:	STEP_CRLF
536:	STEP_CONST
537:	good
538:	STEP_CONST
539:	0
540:	STEP_STORE
541:	STEP_CONST
542:	-3
543:	STEP_CONST
544:	-1
545:	STEP_DROPFRAME
546:	STEP_CONST
547:	0
548:	STEP_FETCH
549:	STEP_RETURN
550*	FUNCTION outer scope::factor3	***************
550:	STEP_CONST
551:	0
552:	STEP_PUSH_FP
553:	STEP_CONST
554:	-2
555:	STEP_ADD
556:	STEP_FETCH_STACK
557:	STEP_CONST
558:	1
559:	STEP_MULT
560:	STEP_CONST
561:	1
562:	STEP_DIV
563:	STEP_ADD
564:	STEP_PUSH_FP
565:	STEP_CONST
566:	0
567:	STEP_ADD
568:	STEP_FETCH_STACK
569:	STEP_CONST
570:	1
571:	STEP_GT
572:	STEP_GOTO0
573:	597
574:	STEP_CONST
575:	Good parameter to factor3:
576:	STEP_PRINT
577:	STEP_CRLF
578:	STEP_PUSH_FP
579:	STEP_CONST
580:	0
581:	STEP_ADD
582:	STEP_FETCH_STACK
583:	STEP_PRINT
584:	STEP_CRLF
585:	STEP_PUSH_FP
586:	STEP_CONST
587:	0
588:	STEP_ADD
589:	STEP_FETCH_STACK
590:	STEP_CONST
591:	2
592:	STEP_PUSH_FP
593:	STEP_CALL_SECONDARY
594:	622
595:	STEP_GOTO
596:	610
597:	STEP_CONST
598:	Bad parameter to factor3: 
599:	STEP_PRINT
600:	STEP_CRLF
601:	STEP_PUSH_FP
602:	STEP_CONST
603:	0
604:	STEP_ADD
605:	STEP_FETCH_STACK
606:	STEP_PRINT
607:	STEP_CRLF
608:	STEP_CONST
609:	bad
610:	STEP_CONST
611:	0
612:	STEP_STORE
613:	STEP_CONST
614:	-2
615:	STEP_CONST
616:	0
617:	STEP_DROPFRAME
618:	STEP_CONST
619:	0
620:	STEP_FETCH
621:	STEP_RETURN
622*	FUNCTION outer scope::factor3::helpFactor	***************
622:	STEP_PUSH_FP
623:	STEP_CALL_SECONDARY
624:	637
625:	STEP_CONST
626:	0
627:	STEP_STORE
628:	STEP_CONST
629:	-3
630:	STEP_CONST
631:	-1
632:	STEP_DROPFRAME
633:	STEP_CONST
634:	0
635:	STEP_FETCH
636:	STEP_RETURN
637*	FUNCTION outer scope::factor3::helpFactor::helpDeep	***************
637:	STEP_PUSH_FP
638:	STEP_CONST
639:	-1
640:	STEP_ADD
641:	STEP_FETCH_STACK
642:	STEP_CONST
643:	-2
644:	STEP_ADD
645:	STEP_FETCH_STACK
646:	STEP_PUSH_FP
647:	STEP_CONST
648:	-1
649:	STEP_ADD
650:	STEP_FETCH_STACK
651:	STEP_CONST
652:	-3
653:	STEP_ADD
654:	STEP_FETCH_STACK
655:	STEP_LT
656:	STEP_GOTO0
657:	763
658:	STEP_PUSH_FP
659:	STEP_CONST
660:	-1
661:	STEP_ADD
662:	STEP_FETCH_STACK
663:	STEP_CONST
664:	-3
665:	STEP_ADD
666:	STEP_FETCH_STACK
667:	STEP_PUSH_FP
668:	STEP_CONST
669:	-1
670:	STEP_ADD
671:	STEP_FETCH_STACK
672:	STEP_CONST
673:	-2
674:	STEP_ADD
675:	STEP_FETCH_STACK
676:	STEP_MOD
677:	STEP_CONST
678:	0
679:	STEP_EQ
680:	STEP_GOTO0
681:	729
682:	STEP_PUSH_FP
683:	STEP_CONST
684:	-1
685:	STEP_ADD
686:	STEP_FETCH_STACK
687:	STEP_CONST
688:	-2
689:	STEP_ADD
690:	STEP_FETCH_STACK
691:	STEP_PRINT
692:	STEP_CRLF
693:	STEP_PUSH_FP
694:	STEP_CONST
695:	-1
696:	STEP_ADD
697:	STEP_FETCH_STACK
698:	STEP_CONST
699:	-3
700:	STEP_ADD
701:	STEP_FETCH_STACK
702:	STEP_PUSH_FP
703:	STEP_CONST
704:	-1
705:	STEP_ADD
706:	STEP_FETCH_STACK
707:	STEP_CONST
708:	-2
709:	STEP_ADD
710:	STEP_FETCH_STACK
711:	STEP_DIV
712:	STEP_PUSH_FP
713:	STEP_CONST
714:	-1
715:	STEP_ADD
716:	STEP_FETCH_STACK
717:	STEP_CONST
718:	-1
719:	STEP_ADD
720:	STEP_FETCH_STACK
721:	STEP_CONST
722:	-1
723:	STEP_ADD
724:	STEP_FETCH_STACK
725:	STEP_CALL_SECONDARY
726:	550
727:	STEP_GOTO
728:	761
729:	STEP_PUSH_FP
730:	STEP_CONST
731:	-1
732:	STEP_ADD
733:	STEP_FETCH_STACK
734:	STEP_CONST
735:	-3
736:	STEP_ADD
737:	STEP_FETCH_STACK
738:	STEP_PUSH_FP
739:	STEP_CONST
740:	-1
741:	STEP_ADD
742:	STEP_FETCH_STACK
743:	STEP_CONST
744:	-2
745:	STEP_ADD
746:	STEP_FETCH_STACK
747:	STEP_CONST
748:	1
749:	STEP_ADD
750:	STEP_PUSH_FP
751:	STEP_CONST
752:	-1
753:	STEP_ADD
754:	STEP_FETCH_STACK
755:	STEP_CONST
756:	-1
757:	STEP_ADD
758:	STEP_FETCH_STACK
759:	STEP_CALL_SECONDARY
760:	622
761:	STEP_GOTO
762:	776
763:	STEP_PUSH_FP
764:	STEP_CONST
765:	-1
766:	STEP_ADD
767:	STEP_FETCH_STACK
768:	STEP_CONST
769:	-3
770:	STEP_ADD
771:	STEP_FETCH_STACK
772:	STEP_PRINT
773:	STEP_CRLF
774:	STEP_CONST
775:	good
776:	STEP_CONST
777:	0
778:	STEP_STORE
779:	STEP_CONST
780:	-1
781:	STEP_CONST
782:	-1
783:	STEP_DROPFRAME
784:	STEP_CONST
785:	0
786:	STEP_FETCH
787:	STEP_RETURN
788*	FUNCTION outer scope::factor4	***************
788:	STEP_PUSH_FP
789:	STEP_CONST
790:	-2
791:	STEP_ADD
792:	STEP_FETCH_STACK
793:	STEP_CONST
794:	1
795:	STEP_GT
796:	STEP_GOTO0
797:	821
798:	STEP_CONST
799:	Good parameter to factor4:
800:	STEP_PRINT
801:	STEP_CRLF
802:	STEP_PUSH_FP
803:	STEP_CONST
804:	-2
805:	STEP_ADD
806:	STEP_FETCH_STACK
807:	STEP_PRINT
808:	STEP_CRLF
809:	STEP_PUSH_FP
810:	STEP_CONST
811:	-2
812:	STEP_ADD
813:	STEP_FETCH_STACK
814:	STEP_CONST
815:	2
816:	STEP_PUSH_FP
817:	STEP_CALL_SECONDARY
818:	846
819:	STEP_GOTO
820:	834
821:	STEP_CONST
822:	Bad parameter to factor4: 
823:	STEP_PRINT
824:	STEP_CRLF
825:	STEP_PUSH_FP
826:	STEP_CONST
827:	-2
828:	STEP_ADD
829:	STEP_FETCH_STACK
830:	STEP_PRINT
831:	STEP_CRLF
832:	STEP_CONST
833:	bad
834:	STEP_CONST
835:	0
836:	STEP_STORE
837:	STEP_CONST
838:	-2
839:	STEP_CONST
840:	-1
841:	STEP_DROPFRAME
842:	STEP_CONST
843:	0
844:	STEP_FETCH
845:	STEP_RETURN
846*	FUNCTION outer scope::factor4::helpFactor	***************
846:	STEP_PUSH_FP
847:	STEP_CONST
848:	-3
849:	STEP_ADD
850:	STEP_FETCH_STACK
851:	STEP_PUSH_FP
852:	STEP_CALL_SECONDARY
853:	866
854:	STEP_CONST
855:	0
856:	STEP_STORE
857:	STEP_CONST
858:	-3
859:	STEP_CONST
860:	-1
861:	STEP_DROPFRAME
862:	STEP_CONST
863:	0
864:	STEP_FETCH
865:	STEP_RETURN
866*	FUNCTION outer scope::factor4::helpFactor::deep4	***************
866:	STEP_PUSH_FP
867:	STEP_CONST
868:	-1
869:	STEP_ADD
870:	STEP_FETCH_STACK
871:	STEP_CONST
872:	-2
873:	STEP_ADD
874:	STEP_FETCH_STACK
875:	STEP_PUSH_FP
876:	STEP_CONST
877:	-2
878:	STEP_ADD
879:	STEP_FETCH_STACK
880:	STEP_LT
881:	STEP_GOTO0
882:	974
883:	STEP_PUSH_FP
884:	STEP_CONST
885:	-2
886:	STEP_ADD
887:	STEP_FETCH_STACK
888:	STEP_PUSH_FP
889:	STEP_CONST
890:	-1
891:	STEP_ADD
892:	STEP_FETCH_STACK
893:	STEP_CONST
894:	-2
895:	STEP_ADD
896:	STEP_FETCH_STACK
897:	STEP_MOD
898:	STEP_CONST
899:	0
900:	STEP_EQ
901:	STEP_GOTO0
902:	944
903:	STEP_PUSH_FP
904:	STEP_CONST
905:	-1
906:	STEP_ADD
907:	STEP_FETCH_STACK
908:	STEP_CONST
909:	-2
910:	STEP_ADD
911:	STEP_FETCH_STACK
912:	STEP_PRINT
913:	STEP_CRLF
914:	STEP_PUSH_FP
915:	STEP_CONST
916:	-2
917:	STEP_ADD
918:	STEP_FETCH_STACK
919:	STEP_PUSH_FP
920:	STEP_CONST
921:	-1
922:	STEP_ADD
923:	STEP_FETCH_STACK
924:	STEP_CONST
925:	-2
926:	STEP_ADD
927:	STEP_FETCH_STACK
928:	STEP_DIV
929:	STEP_CONST
930:	2
931:	STEP_PUSH_FP
932:	STEP_CONST
933:	-1
934:	STEP_ADD
935:	STEP_FETCH_STACK
936:	STEP_CONST
937:	-1
938:	STEP_ADD
939:	STEP_FETCH_STACK
940:	STEP_CALL_SECONDARY
941:	846
942:	STEP_GOTO
943:	972
944:	STEP_PUSH_FP
945:	STEP_CONST
946:	-2
947:	STEP_ADD
948:	STEP_FETCH_STACK
949:	STEP_PUSH_FP
950:	STEP_CONST
951:	-1
952:	STEP_ADD
953:	STEP_FETCH_STACK
954:	STEP_CONST
955:	-2
956:	STEP_ADD
957:	STEP_FETCH_STACK
958:	STEP_CONST
959:	1
960:	STEP_ADD
961:	STEP_PUSH_FP
962:	STEP_CONST
963:	-1
964:	STEP_ADD
965:	STEP_FETCH_STACK
966:	STEP_CONST
967:	-1
968:	STEP_ADD
969:	STEP_FETCH_STACK
970:	STEP_CALL_SECONDARY
971:	846
972:	STEP_GOTO
973:	983
974:	STEP_PUSH_FP
975:	STEP_CONST
976:	-2
977:	STEP_ADD
978:	STEP_FETCH_STACK
979:	STEP_PRINT
980:	STEP_CRLF
981:	STEP_CONST
982:	good
983:	STEP_CONST
984:	0
985:	STEP_STORE
986:	STEP_CONST
987:	-2
988:	STEP_CONST
989:	-1
990:	STEP_DROPFRAME
991:	STEP_CONST
992:	0
993:	STEP_FETCH
994:	STEP_RETURN
995*	FUNCTION outer scope::factor5	***************
995:	STEP_PUSH_FP
996:	STEP_CONST
997:	-2
998:	STEP_ADD
999:	STEP_FETCH_STACK
1000:	STEP_CONST
1001:	1
1002:	STEP_GT
1003:	STEP_GOTO0
1004:	1028
1005:	STEP_CONST
1006:	Good parameter to factor5:
1007:	STEP_PRINT
1008:	STEP_CRLF
1009:	STEP_PUSH_FP
1010:	STEP_CONST
1011:	-2
1012:	STEP_ADD
1013:	STEP_FETCH_STACK
1014:	STEP_PRINT
1015:	STEP_CRLF
1016:	STEP_PUSH_FP
1017:	STEP_CONST
1018:	-2
1019:	STEP_ADD
1020:	STEP_FETCH_STACK
1021:	STEP_CONST
1022:	2
1023:	STEP_PUSH_FP
1024:	STEP_CALL_SECONDARY
1025:	1053
1026:	STEP_GOTO
1027:	1041
1028:	STEP_CONST
1029:	Bad parameter to factor5: 
1030:	STEP_PRINT
1031:	STEP_CRLF
1032:	STEP_PUSH_FP
1033:	STEP_CONST
1034:	-2
1035:	STEP_ADD
1036:	STEP_FETCH_STACK
1037:	STEP_PRINT
1038:	STEP_CRLF
1039:	STEP_CONST
1040:	bad
1041:	STEP_CONST
1042:	0
1043:	STEP_STORE
1044:	STEP_CONST
1045:	-2
1046:	STEP_CONST
1047:	-1
1048:	STEP_DROPFRAME
1049:	STEP_CONST
1050:	0
1051:	STEP_FETCH
1052:	STEP_RETURN
1053*	FUNCTION outer scope::factor5::helpFactor	***************
1053:	STEP_PUSH_FP
1054:	STEP_CONST
1055:	-3
1056:	STEP_ADD
1057:	STEP_FETCH_STACK
1058:	STEP_PUSH_FP
1059:	STEP_CALL_SECONDARY
1060:	1073
1061:	STEP_CONST
1062:	0
1063:	STEP_STORE
1064:	STEP_CONST
1065:	-3
1066:	STEP_CONST
1067:	-1
1068:	STEP_DROPFRAME
1069:	STEP_CONST
1070:	0
1071:	STEP_FETCH
1072:	STEP_RETURN
1073*	FUNCTION outer scope::factor5::helpFactor::deep4	***************
1073:	STEP_PUSH_FP
1074:	STEP_CONST
1075:	-1
1076:	STEP_ADD
1077:	STEP_FETCH_STACK
1078:	STEP_CONST
1079:	-1
1080:	STEP_ADD
1081:	STEP_FETCH_STACK
1082:	STEP_CONST
1083:	-2
1084:	STEP_ADD
1085:	STEP_FETCH_STACK
1086:	STEP_PUSH_FP
1087:	STEP_CALL_SECONDARY
1088:	1101
1089:	STEP_CONST
1090:	0
1091:	STEP_STORE
1092:	STEP_CONST
1093:	-2
1094:	STEP_CONST
1095:	-1
1096:	STEP_DROPFRAME
1097:	STEP_CONST
1098:	0
1099:	STEP_FETCH
1100:	STEP_RETURN
1101*	FUNCTION outer scope::factor5::helpFactor::deep4::deepest	***************
1101:	STEP_PUSH_FP
1102:	STEP_CONST
1103:	-1
1104:	STEP_ADD
1105:	STEP_FETCH_STACK
1106:	STEP_CONST
1107:	-1
1108:	STEP_ADD
1109:	STEP_FETCH_STACK
1110:	STEP_CONST
1111:	-2
1112:	STEP_ADD
1113:	STEP_FETCH_STACK
1114:	STEP_PUSH_FP
1115:	STEP_CONST
1116:	-1
1117:	STEP_ADD
1118:	STEP_FETCH_STACK
1119:	STEP_CONST
1120:	-2
1121:	STEP_ADD
1122:	STEP_FETCH_STACK
1123:	STEP_LT
1124:	STEP_GOTO0
1125:	1253
1126:	STEP_PUSH_FP
1127:	STEP_CONST
1128:	-1
1129:	STEP_ADD
1130:	STEP_FETCH_STACK
1131:	STEP_CONST
1132:	-2
1133:	STEP_ADD
1134:	STEP_FETCH_STACK
1135:	STEP_PUSH_FP
1136:	STEP_CONST
1137:	-1
1138:	STEP_ADD
1139:	STEP_FETCH_STACK
1140:	STEP_CONST
1141:	-1
1142:	STEP_ADD
1143:	STEP_FETCH_STACK
1144:	STEP_CONST
1145:	-2
1146:	STEP_ADD
1147:	STEP_FETCH_STACK
1148:	STEP_MOD
1149:	STEP_CONST
1150:	0
1151:	STEP_EQ
1152:	STEP_GOTO0
1153:	1211
1154:	STEP_PUSH_FP
1155:	STEP_CONST
1156:	-1
1157:	STEP_ADD
1158:	STEP_FETCH_STACK
1159:	STEP_CONST
1160:	-1
1161:	STEP_ADD
1162:	STEP_FETCH_STACK
1163:	STEP_CONST
1164:	-2
1165:	STEP_ADD
1166:	STEP_FETCH_STACK
1167:	STEP_PRINT
1168:	STEP_CRLF
1169:	STEP_PUSH_FP
1170:	STEP_CONST
1171:	-1
1172:	STEP_ADD
1173:	STEP_FETCH_STACK
1174:	STEP_CONST
1175:	-2
1176:	STEP_ADD
1177:	STEP_FETCH_STACK
1178:	STEP_PUSH_FP
1179:	STEP_CONST
1180:	-1
1181:	STEP_ADD
1182:	STEP_FETCH_STACK
1183:	STEP_CONST
1184:	-1
1185:	STEP_ADD
1186:	STEP_FETCH_STACK
1187:	STEP_CONST
1188:	-2
1189:	STEP_ADD
1190:	STEP_FETCH_STACK
1191:	STEP_DIV
1192:	STEP_CONST
1193:	2
1194:	STEP_PUSH_FP
1195:	STEP_CONST
1196:	-1
1197:	STEP_ADD
1198:	STEP_FETCH_STACK
1199:	STEP_CONST
1200:	-1
1201:	STEP_ADD
1202:	STEP_FETCH_STACK
1203:	STEP_CONST
1204:	-1
1205:	STEP_ADD
1206:	STEP_FETCH_STACK
1207:	STEP_CALL_SECONDARY
1208:	1053
1209:	STEP_GOTO
1210:	1251
1211:	STEP_PUSH_FP
1212:	STEP_CONST
1213:	-1
1214:	STEP_ADD
1215:	STEP_FETCH_STACK
1216:	STEP_CONST
1217:	-2
1218:	STEP_ADD
1219:	STEP_FETCH_STACK
1220:	STEP_PUSH_FP
1221:	STEP_CONST
1222:	-1
1223:	STEP_ADD
1224:	STEP_FETCH_STACK
1225:	STEP_CONST
1226:	-1
1227:	STEP_ADD
1228:	STEP_FETCH_STACK
1229:	STEP_CONST
1230:	-2
1231:	STEP_ADD
1232:	STEP_FETCH_STACK
1233:	STEP_CONST
1234:	1
1235:	STEP_ADD
1236:	STEP_PUSH_FP
1237:	STEP_CONST
1238:	-1
1239:	STEP_ADD
1240:	STEP_FETCH_STACK
1241:	STEP_CONST
1242:	-1
1243:	STEP_ADD
1244:	STEP_FETCH_STACK
1245:	STEP_CONST
1246:	-1
1247:	STEP_ADD
1248:	STEP_FETCH_STACK
1249:	STEP_CALL_SECONDARY
1250:	1053
1251:	STEP_GOTO
1252:	1266
1253:	STEP_PUSH_FP
1254:	STEP_CONST
1255:	-1
1256:	STEP_ADD
1257:	STEP_FETCH_STACK
1258:	STEP_CONST
1259:	-2
1260:	STEP_ADD
1261:	STEP_FETCH_STACK
1262:	STEP_PRINT
1263:	STEP_CRLF
1264:	STEP_CONST
1265:	good
1266:	STEP_CONST
1267:	0
1268:	STEP_STORE
1269:	STEP_CONST
1270:	-2
1271:	STEP_CONST
1272:	-1
1273:	STEP_DROPFRAME
1274:	STEP_CONST
1275:	0
1276:	STEP_FETCH
1277:	STEP_RETURN
UNINTERPRETED DUMP OF THE ENTIRE DATA_DICTIONARY:
['good', None, 4, 9223372036854775807, 0, 4]
DEBUG HEAP: size of data_dictionary = 6.
DEBUG HEAP: free list pointer at location 1 = None.
DEBUG HEAP @ 2: HDR=4|RFC=9223372036854775807|0|4
FOOTER@5 = 4.
