PROGRAM MID LINK BEFORE BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	1
2:	STEP_CONST
3:	3
4:	STEP_ALLOC
5:	STEP_CONST
6:	1
7:	STEP_OVER
8:	STEP_CONST
9:	0
10:	STEP_ADD
11:	STEP_STORE
12:	STEP_CONST
13:	2
14:	STEP_OVER
15:	STEP_CONST
16:	1
17:	STEP_ADD
18:	STEP_STORE
19:	STEP_CONST
20:	3
21:	STEP_OVER
22:	STEP_CONST
23:	2
24:	STEP_ADD
25:	STEP_STORE
26:	STEP_CONST
27:	3
28:	STEP_ALLOC
29:	STEP_CONST
30:	1
31:	STEP_CAST_FLOAT
32:	STEP_OVER
33:	STEP_CONST
34:	0
35:	STEP_ADD
36:	STEP_STORE
37:	STEP_CONST
38:	2.0
39:	STEP_OVER
40:	STEP_CONST
41:	1
42:	STEP_ADD
43:	STEP_STORE
44:	STEP_CONST
45:	3
46:	STEP_MINUS
47:	STEP_CAST_FLOAT
48:	STEP_OVER
49:	STEP_CONST
50:	2
51:	STEP_ADD
52:	STEP_STORE
53:	STEP_DUP
54:	STEP_CONST
55:	-1
56:	STEP_ARRAYCPY
57:	STEP_SWAP
58:	STEP_CONST
59:	-1
60:	STEP_REFCNT
61:	STEP_DROP
62:	STEP_CONST
63:	0
64:	STEP_ALLOC
65:	STEP_DUP
66:	STEP_CONST
67:	-1
68:	STEP_ARRAYCPY
69:	STEP_SWAP
70:	STEP_CONST
71:	-1
72:	STEP_REFCNT
73:	STEP_DROP
74:	STEP_PUSH_FP
75:	STEP_CONST
76:	1
77:	STEP_ADD
78:	STEP_FETCH_STACK
79:	STEP_DUP
80:	STEP_CONST
81:	1
82:	STEP_REFCNT
83:	STEP_DROP
84:	STEP_PUSH_FP
85:	STEP_CONST
86:	2
87:	STEP_ADD
88:	STEP_FETCH_STACK
89:	STEP_DUP
90:	STEP_CONST
91:	1
92:	STEP_REFCNT
93:	STEP_DROP
94:	STEP_OVER
95:	STEP_OVER
96:	STEP_CONST
97:	0
98:	STEP_ARRAYCAT
99:	STEP_SWAP2
100:	STEP_CONST
101:	-1
102:	STEP_REFCNT
103:	STEP_DROP
104:	STEP_CONST
105:	-1
106:	STEP_REFCNT
107:	STEP_DROP
108:	STEP_PUSH_FP
109:	STEP_CONST
110:	1
111:	STEP_ADD
112:	STEP_FETCH_STACK
113:	STEP_DUP
114:	STEP_CONST
115:	1
116:	STEP_REFCNT
117:	STEP_DROP
118:	STEP_PUSH_FP
119:	STEP_CONST
120:	3
121:	STEP_ADD
122:	STEP_FETCH_STACK
123:	STEP_DUP
124:	STEP_CONST
125:	1
126:	STEP_REFCNT
127:	STEP_DROP
128:	STEP_OVER
129:	STEP_OVER
130:	STEP_CONST
131:	0
132:	STEP_ARRAYCAT
133:	STEP_SWAP2
134:	STEP_CONST
135:	-1
136:	STEP_REFCNT
137:	STEP_DROP
138:	STEP_CONST
139:	-1
140:	STEP_REFCNT
141:	STEP_DROP
142:	STEP_CONST
143:	2
144:	STEP_ALLOC
145:	STEP_PUSH_FP
146:	STEP_CONST
147:	0
148:	STEP_ADD
149:	STEP_FETCH_STACK
150:	STEP_OVER
151:	STEP_CONST
152:	0
153:	STEP_ADD
154:	STEP_STORE
155:	STEP_CONST
156:	1
157:	STEP_OVER
158:	STEP_CONST
159:	1
160:	STEP_ADD
161:	STEP_STORE
162:	STEP_OVER
163:	STEP_OVER
164:	STEP_CONST
165:	0
166:	STEP_ARRAYCAT
167:	STEP_SWAP2
168:	STEP_CONST
169:	-1
170:	STEP_REFCNT
171:	STEP_DROP
172:	STEP_CONST
173:	-1
174:	STEP_REFCNT
175:	STEP_DROP
176:	STEP_CONST
177:	0
178:	STEP_ALLOC
179:	STEP_OVER
180:	STEP_OVER
181:	STEP_CONST
182:	-1
183:	STEP_ARRAYCAT
184:	STEP_SWAP2
185:	STEP_CONST
186:	-1
187:	STEP_REFCNT
188:	STEP_DROP
189:	STEP_CONST
190:	-1
191:	STEP_REFCNT
192:	STEP_DROP
193:	STEP_CONST
194:	3
195:	STEP_ALLOC
196:	STEP_CONST
197:	1.0
198:	STEP_OVER
199:	STEP_CONST
200:	0
201:	STEP_ADD
202:	STEP_STORE
203:	STEP_CONST
204:	2.5
205:	STEP_MINUS
206:	STEP_OVER
207:	STEP_CONST
208:	1
209:	STEP_ADD
210:	STEP_STORE
211:	STEP_CONST
212:	3
213:	STEP_CAST_FLOAT
214:	STEP_OVER
215:	STEP_CONST
216:	2
217:	STEP_ADD
218:	STEP_STORE
219:	STEP_CONST
220:	0
221:	STEP_ALLOC
222:	STEP_DUP
223:	STEP_CONST
224:	1
225:	STEP_ARRAYCPY
226:	STEP_SWAP
227:	STEP_CONST
228:	-1
229:	STEP_REFCNT
230:	STEP_DROP
231:	STEP_PUSH_FP
232:	STEP_CONST
233:	6
234:	STEP_ADD
235:	STEP_FETCH_STACK
236:	STEP_DUP
237:	STEP_CONST
238:	1
239:	STEP_REFCNT
240:	STEP_DROP
241:	STEP_PUSH_FP
242:	STEP_CONST
243:	1
244:	STEP_ADD
245:	STEP_FETCH_STACK
246:	STEP_DUP
247:	STEP_CONST
248:	1
249:	STEP_REFCNT
250:	STEP_DROP
251:	STEP_OVER
252:	STEP_OVER
253:	STEP_CONST
254:	1
255:	STEP_ARRAYCAT
256:	STEP_SWAP2
257:	STEP_CONST
258:	-1
259:	STEP_REFCNT
260:	STEP_DROP
261:	STEP_CONST
262:	-1
263:	STEP_REFCNT
264:	STEP_DROP
265:	STEP_DUP
266:	STEP_CONST
267:	-1
268:	STEP_ARRAYCPY
269:	STEP_SWAP
270:	STEP_CONST
271:	-1
272:	STEP_REFCNT
273:	STEP_DROP
274:	STEP_PUSH_FP
275:	STEP_CONST
276:	6
277:	STEP_ADD
278:	STEP_FETCH_STACK
279:	STEP_DUP
280:	STEP_CONST
281:	1
282:	STEP_REFCNT
283:	STEP_DROP
284:	STEP_PUSH_FP
285:	STEP_CONST
286:	1
287:	STEP_ADD
288:	STEP_FETCH_STACK
289:	STEP_DUP
290:	STEP_CONST
291:	1
292:	STEP_REFCNT
293:	STEP_DROP
294:	STEP_OVER
295:	STEP_OVER
296:	STEP_CONST
297:	1
298:	STEP_ARRAYCAT
299:	STEP_SWAP2
300:	STEP_CONST
301:	-1
302:	STEP_REFCNT
303:	STEP_DROP
304:	STEP_CONST
305:	-1
306:	STEP_REFCNT
307:	STEP_DROP
308:	STEP_CONST
309:	test 1
310:	STEP_PRINT
311:	STEP_CRLF
312:	STEP_PUSH_FP
313:	STEP_CONST
314:	1
315:	STEP_ADD
316:	STEP_FETCH_STACK
317:	STEP_CONST
318:	1
319:	STEP_ADD
320:	STEP_FETCH
321:	STEP_PRINT
322:	STEP_CRLF
323:	STEP_CONST
324:	test iarray1
325:	STEP_PUSH_FP
326:	STEP_CONST
327:	1
328:	STEP_ADD
329:	STEP_FETCH_STACK
330:	STEP_DUP
331:	STEP_CONST
332:	1
333:	STEP_REFCNT
334:	STEP_DROP
335:	STEP_CONST
336:	0
337:	STEP_PUSH_FP
338:	STEP_CALL_SECONDARY
339:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'printfarray': ['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {...}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673]
340:	STEP_PRINT
341:	STEP_CRLF
342:	STEP_CONST
343:	test iarray2
344:	STEP_PUSH_FP
345:	STEP_CONST
346:	2
347:	STEP_ADD
348:	STEP_FETCH_STACK
349:	STEP_DUP
350:	STEP_CONST
351:	1
352:	STEP_REFCNT
353:	STEP_DROP
354:	STEP_CONST
355:	0
356:	STEP_PUSH_FP
357:	STEP_CALL_SECONDARY
358:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'printfarray': ['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {...}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673]
359:	STEP_PRINT
360:	STEP_CRLF
361:	STEP_CONST
362:	test iarray3
363:	STEP_PUSH_FP
364:	STEP_CONST
365:	3
366:	STEP_ADD
367:	STEP_FETCH_STACK
368:	STEP_DUP
369:	STEP_CONST
370:	1
371:	STEP_REFCNT
372:	STEP_DROP
373:	STEP_CONST
374:	0
375:	STEP_PUSH_FP
376:	STEP_CALL_SECONDARY
377:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'printfarray': ['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {...}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673]
378:	STEP_PRINT
379:	STEP_CRLF
380:	STEP_CONST
381:	test farray1
382:	STEP_PUSH_FP
383:	STEP_CONST
384:	6
385:	STEP_ADD
386:	STEP_FETCH_STACK
387:	STEP_DUP
388:	STEP_CONST
389:	1
390:	STEP_REFCNT
391:	STEP_DROP
392:	STEP_CONST
393:	0
394:	STEP_PUSH_FP
395:	STEP_CALL_SECONDARY
396:	['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {'printiarray': ['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {...}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673], 'printfarray': [...], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559]
397:	STEP_PRINT
398:	STEP_CRLF
399:	STEP_CONST
400:	test farray2
401:	STEP_PUSH_FP
402:	STEP_CONST
403:	7
404:	STEP_ADD
405:	STEP_FETCH_STACK
406:	STEP_DUP
407:	STEP_CONST
408:	1
409:	STEP_REFCNT
410:	STEP_DROP
411:	STEP_CONST
412:	0
413:	STEP_PUSH_FP
414:	STEP_CALL_SECONDARY
415:	['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {'printiarray': ['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {...}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673], 'printfarray': [...], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559]
416:	STEP_PRINT
417:	STEP_CRLF
418:	STEP_CONST
419:	test i farray1
420:	STEP_PUSH_FP
421:	STEP_CONST
422:	6
423:	STEP_ADD
424:	STEP_FETCH_STACK
425:	STEP_DUP
426:	STEP_CONST
427:	1
428:	STEP_REFCNT
429:	STEP_DROP
430:	STEP_DUP
431:	STEP_CONST
432:	-1
433:	STEP_ARRAYCPY
434:	STEP_SWAP
435:	STEP_CONST
436:	-1
437:	STEP_REFCNT
438:	STEP_DROP
439:	STEP_CONST
440:	0
441:	STEP_PUSH_FP
442:	STEP_CALL_SECONDARY
443:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'printfarray': ['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {...}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673]
444:	STEP_PRINT
445:	STEP_CRLF
446:	STEP_CONST
447:	test i farray2
448:	STEP_PUSH_FP
449:	STEP_CONST
450:	7
451:	STEP_ADD
452:	STEP_FETCH_STACK
453:	STEP_DUP
454:	STEP_CONST
455:	1
456:	STEP_REFCNT
457:	STEP_DROP
458:	STEP_DUP
459:	STEP_CONST
460:	-1
461:	STEP_ARRAYCPY
462:	STEP_SWAP
463:	STEP_CONST
464:	-1
465:	STEP_REFCNT
466:	STEP_DROP
467:	STEP_CONST
468:	0
469:	STEP_PUSH_FP
470:	STEP_CALL_SECONDARY
471:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'printfarray': ['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {...}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673]
472:	STEP_PRINT
473:	STEP_CRLF
474:	STEP_CONST
475:	test f iarray1
476:	STEP_PUSH_FP
477:	STEP_CONST
478:	1
479:	STEP_ADD
480:	STEP_FETCH_STACK
481:	STEP_DUP
482:	STEP_CONST
483:	1
484:	STEP_REFCNT
485:	STEP_DROP
486:	STEP_DUP
487:	STEP_CONST
488:	1
489:	STEP_ARRAYCPY
490:	STEP_SWAP
491:	STEP_CONST
492:	-1
493:	STEP_REFCNT
494:	STEP_DROP
495:	STEP_CONST
496:	0
497:	STEP_PUSH_FP
498:	STEP_CALL_SECONDARY
499:	['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {'printiarray': ['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {...}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673], 'printfarray': [...], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559]
500:	STEP_PRINT
501:	STEP_CRLF
502:	STEP_CONST
503:	test f iarray2
504:	STEP_PUSH_FP
505:	STEP_CONST
506:	2
507:	STEP_ADD
508:	STEP_FETCH_STACK
509:	STEP_DUP
510:	STEP_CONST
511:	1
512:	STEP_REFCNT
513:	STEP_DROP
514:	STEP_DUP
515:	STEP_CONST
516:	1
517:	STEP_ARRAYCPY
518:	STEP_SWAP
519:	STEP_CONST
520:	-1
521:	STEP_REFCNT
522:	STEP_DROP
523:	STEP_CONST
524:	0
525:	STEP_PUSH_FP
526:	STEP_CALL_SECONDARY
527:	['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {'printiarray': ['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {...}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673], 'printfarray': [...], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559]
528:	STEP_PRINT
529:	STEP_CRLF
530:	STEP_CONST
531:	test f iarray3
532:	STEP_PUSH_FP
533:	STEP_CONST
534:	3
535:	STEP_ADD
536:	STEP_FETCH_STACK
537:	STEP_DUP
538:	STEP_CONST
539:	1
540:	STEP_REFCNT
541:	STEP_DROP
542:	STEP_DUP
543:	STEP_CONST
544:	1
545:	STEP_ARRAYCPY
546:	STEP_SWAP
547:	STEP_CONST
548:	-1
549:	STEP_REFCNT
550:	STEP_DROP
551:	STEP_CONST
552:	0
553:	STEP_PUSH_FP
554:	STEP_CALL_SECONDARY
555:	['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {'printiarray': ['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {...}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673], 'printfarray': [...], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559]
556:	STEP_PRINT
557:	STEP_CRLF
558:	STEP_PAUSE
559*	FUNCTION outer scope::printfarray	***************
559:	STEP_PUSH_FP
560:	STEP_CONST
561:	-2
562:	STEP_ADD
563:	STEP_FETCH_STACK
564:	STEP_CONST
565:	1
566:	STEP_MINUS
567:	STEP_GT
568:	STEP_DUP
569:	STEP_GOTO0
570:	(26,)
571:	STEP_DROP
572:	STEP_PUSH_FP
573:	STEP_CONST
574:	-2
575:	STEP_ADD
576:	STEP_FETCH_STACK
577:	STEP_PUSH_FP
578:	STEP_CONST
579:	-3
580:	STEP_ADD
581:	STEP_FETCH_STACK
582:	STEP_DUP
583:	STEP_CONST
584:	1
585:	STEP_REFCNT
586:	STEP_DROP
587:	STEP_DUP
588:	STEP_SUB1
589:	STEP_FETCH
590:	STEP_SWAP
591:	STEP_CONST
592:	-1
593:	STEP_REFCNT
594:	STEP_DROP
595:	STEP_LT
596:	STEP_GOTO0
597:	(50,)
598:	STEP_PUSH_FP
599:	STEP_CONST
600:	-4
601:	STEP_ADD
602:	STEP_FETCH_STACK
603:	STEP_CONST
604:	 
605:	STEP_ADD
606:	STEP_PUSH_FP
607:	STEP_CONST
608:	-3
609:	STEP_ADD
610:	STEP_FETCH_STACK
611:	STEP_PUSH_FP
612:	STEP_CONST
613:	-2
614:	STEP_ADD
615:	STEP_FETCH_STACK
616:	STEP_ADD
617:	STEP_FETCH
618:	STEP_CAST_STRING
619:	STEP_ADD
620:	STEP_PUSH_FP
621:	STEP_CONST
622:	-3
623:	STEP_ADD
624:	STEP_FETCH_STACK
625:	STEP_DUP
626:	STEP_CONST
627:	1
628:	STEP_REFCNT
629:	STEP_DROP
630:	STEP_PUSH_FP
631:	STEP_CONST
632:	-2
633:	STEP_ADD
634:	STEP_FETCH_STACK
635:	STEP_CONST
636:	1
637:	STEP_ADD
638:	STEP_PUSH_FP
639:	STEP_CONST
640:	-1
641:	STEP_ADD
642:	STEP_FETCH_STACK
643:	STEP_CALL_SECONDARY
644:	['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {'printiarray': ['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {...}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673], 'printfarray': [...], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559]
645:	STEP_GOTO
646:	(6,)
647:	STEP_PUSH_FP
648:	STEP_CONST
649:	-4
650:	STEP_ADD
651:	STEP_FETCH_STACK
652:	STEP_CONST
653:	0
654:	STEP_STORE
655:	STEP_PUSH_FP
656:	STEP_CONST
657:	-3
658:	STEP_ADD
659:	STEP_FETCH_STACK
660:	STEP_CONST
661:	-1
662:	STEP_REFCNT
663:	STEP_DROP
664:	STEP_CONST
665:	-4
666:	STEP_CONST
667:	-1
668:	STEP_DROPFRAME
669:	STEP_CONST
670:	0
671:	STEP_FETCH
672:	STEP_RETURN
673*	FUNCTION outer scope::printiarray	***************
673:	STEP_PUSH_FP
674:	STEP_CONST
675:	-2
676:	STEP_ADD
677:	STEP_FETCH_STACK
678:	STEP_CONST
679:	1
680:	STEP_MINUS
681:	STEP_GT
682:	STEP_DUP
683:	STEP_GOTO0
684:	(26,)
685:	STEP_DROP
686:	STEP_PUSH_FP
687:	STEP_CONST
688:	-2
689:	STEP_ADD
690:	STEP_FETCH_STACK
691:	STEP_PUSH_FP
692:	STEP_CONST
693:	-3
694:	STEP_ADD
695:	STEP_FETCH_STACK
696:	STEP_DUP
697:	STEP_CONST
698:	1
699:	STEP_REFCNT
700:	STEP_DROP
701:	STEP_DUP
702:	STEP_SUB1
703:	STEP_FETCH
704:	STEP_SWAP
705:	STEP_CONST
706:	-1
707:	STEP_REFCNT
708:	STEP_DROP
709:	STEP_LT
710:	STEP_GOTO0
711:	(50,)
712:	STEP_PUSH_FP
713:	STEP_CONST
714:	-4
715:	STEP_ADD
716:	STEP_FETCH_STACK
717:	STEP_CONST
718:	 
719:	STEP_ADD
720:	STEP_PUSH_FP
721:	STEP_CONST
722:	-3
723:	STEP_ADD
724:	STEP_FETCH_STACK
725:	STEP_PUSH_FP
726:	STEP_CONST
727:	-2
728:	STEP_ADD
729:	STEP_FETCH_STACK
730:	STEP_ADD
731:	STEP_FETCH
732:	STEP_CAST_STRING
733:	STEP_ADD
734:	STEP_PUSH_FP
735:	STEP_CONST
736:	-3
737:	STEP_ADD
738:	STEP_FETCH_STACK
739:	STEP_DUP
740:	STEP_CONST
741:	1
742:	STEP_REFCNT
743:	STEP_DROP
744:	STEP_PUSH_FP
745:	STEP_CONST
746:	-2
747:	STEP_ADD
748:	STEP_FETCH_STACK
749:	STEP_CONST
750:	1
751:	STEP_ADD
752:	STEP_PUSH_FP
753:	STEP_CONST
754:	-1
755:	STEP_ADD
756:	STEP_FETCH_STACK
757:	STEP_CALL_SECONDARY
758:	['func', 'printiarray', 'string', (('prefix', ('typedecl', 'string')), ('iarray', ('typedecl', 'int[]')), ('i', ('typedecl', 'int'))), {'printiarray': ('symref', 'printiarray', 1, {'printiarray': [...], 'printfarray': ['func', 'printfarray', 'string', (('prefix', ('typedecl', 'string')), ('farray', ('typedecl', 'float[]')), ('i', ('typedecl', 'int'))), {'printfarray': ('symref', 'printfarray', 1, {...}), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3, 'farray': ('var', 'farray', 'float[]', -3)}, 559], 'farray1': ('var', 'farray1', 'float[]', 6), '#funcs': 2, 'iarray6': ('var', 'iarray6', 'int[]', 8), '#locals': 10, 'farray3': ('var', 'farray3', 'float[]', 9), '#depth': 0, 'iarray5': ('var', 'iarray5', 'int[]', 5), 'i': ('var', 'i', 'int', 0), '#params': 0, 'iarray4': ('var', 'iarray4', 'int[]', 4), 'iarray3': ('var', 'iarray3', 'int[]', 3), 'iarray2': ('var', 'iarray2', 'int[]', 2), 'iarray1': ('var', 'iarray1', 'int[]', 1), 'farray2': ('var', 'farray2', 'float[]', 7)}), 'iarray': ('var', 'iarray', 'int[]', -3), '#funcs': 0, '#locals': 0, '#depth': 1, 'prefix': ('var', 'prefix', 'string', -4), 'i': ('var', 'i', 'int', -2), '#params': 3}, 673]
759:	STEP_GOTO
760:	(6,)
761:	STEP_PUSH_FP
762:	STEP_CONST
763:	-4
764:	STEP_ADD
765:	STEP_FETCH_STACK
766:	STEP_CONST
767:	0
768:	STEP_STORE
769:	STEP_PUSH_FP
770:	STEP_CONST
771:	-3
772:	STEP_ADD
773:	STEP_FETCH_STACK
774:	STEP_CONST
775:	-1
776:	STEP_REFCNT
777:	STEP_DROP
778:	STEP_CONST
779:	-4
780:	STEP_CONST
781:	-1
782:	STEP_DROPFRAME
783:	STEP_CONST
784:	0
785:	STEP_FETCH
786:	STEP_RETURN
PROGRAM LINK AFTER BACKPATCHING:
0*	FUNCTION outermost scope	***************
0:	STEP_CONST
1:	1
2:	STEP_CONST
3:	3
4:	STEP_ALLOC
5:	STEP_CONST
6:	1
7:	STEP_OVER
8:	STEP_CONST
9:	0
10:	STEP_ADD
11:	STEP_STORE
12:	STEP_CONST
13:	2
14:	STEP_OVER
15:	STEP_CONST
16:	1
17:	STEP_ADD
18:	STEP_STORE
19:	STEP_CONST
20:	3
21:	STEP_OVER
22:	STEP_CONST
23:	2
24:	STEP_ADD
25:	STEP_STORE
26:	STEP_CONST
27:	3
28:	STEP_ALLOC
29:	STEP_CONST
30:	1
31:	STEP_CAST_FLOAT
32:	STEP_OVER
33:	STEP_CONST
34:	0
35:	STEP_ADD
36:	STEP_STORE
37:	STEP_CONST
38:	2.0
39:	STEP_OVER
40:	STEP_CONST
41:	1
42:	STEP_ADD
43:	STEP_STORE
44:	STEP_CONST
45:	3
46:	STEP_MINUS
47:	STEP_CAST_FLOAT
48:	STEP_OVER
49:	STEP_CONST
50:	2
51:	STEP_ADD
52:	STEP_STORE
53:	STEP_DUP
54:	STEP_CONST
55:	-1
56:	STEP_ARRAYCPY
57:	STEP_SWAP
58:	STEP_CONST
59:	-1
60:	STEP_REFCNT
61:	STEP_DROP
62:	STEP_CONST
63:	0
64:	STEP_ALLOC
65:	STEP_DUP
66:	STEP_CONST
67:	-1
68:	STEP_ARRAYCPY
69:	STEP_SWAP
70:	STEP_CONST
71:	-1
72:	STEP_REFCNT
73:	STEP_DROP
74:	STEP_PUSH_FP
75:	STEP_CONST
76:	1
77:	STEP_ADD
78:	STEP_FETCH_STACK
79:	STEP_DUP
80:	STEP_CONST
81:	1
82:	STEP_REFCNT
83:	STEP_DROP
84:	STEP_PUSH_FP
85:	STEP_CONST
86:	2
87:	STEP_ADD
88:	STEP_FETCH_STACK
89:	STEP_DUP
90:	STEP_CONST
91:	1
92:	STEP_REFCNT
93:	STEP_DROP
94:	STEP_OVER
95:	STEP_OVER
96:	STEP_CONST
97:	0
98:	STEP_ARRAYCAT
99:	STEP_SWAP2
100:	STEP_CONST
101:	-1
102:	STEP_REFCNT
103:	STEP_DROP
104:	STEP_CONST
105:	-1
106:	STEP_REFCNT
107:	STEP_DROP
108:	STEP_PUSH_FP
109:	STEP_CONST
110:	1
111:	STEP_ADD
112:	STEP_FETCH_STACK
113:	STEP_DUP
114:	STEP_CONST
115:	1
116:	STEP_REFCNT
117:	STEP_DROP
118:	STEP_PUSH_FP
119:	STEP_CONST
120:	3
121:	STEP_ADD
122:	STEP_FETCH_STACK
123:	STEP_DUP
124:	STEP_CONST
125:	1
126:	STEP_REFCNT
127:	STEP_DROP
128:	STEP_OVER
129:	STEP_OVER
130:	STEP_CONST
131:	0
132:	STEP_ARRAYCAT
133:	STEP_SWAP2
134:	STEP_CONST
135:	-1
136:	STEP_REFCNT
137:	STEP_DROP
138:	STEP_CONST
139:	-1
140:	STEP_REFCNT
141:	STEP_DROP
142:	STEP_CONST
143:	2
144:	STEP_ALLOC
145:	STEP_PUSH_FP
146:	STEP_CONST
147:	0
148:	STEP_ADD
149:	STEP_FETCH_STACK
150:	STEP_OVER
151:	STEP_CONST
152:	0
153:	STEP_ADD
154:	STEP_STORE
155:	STEP_CONST
156:	1
157:	STEP_OVER
158:	STEP_CONST
159:	1
160:	STEP_ADD
161:	STEP_STORE
162:	STEP_OVER
163:	STEP_OVER
164:	STEP_CONST
165:	0
166:	STEP_ARRAYCAT
167:	STEP_SWAP2
168:	STEP_CONST
169:	-1
170:	STEP_REFCNT
171:	STEP_DROP
172:	STEP_CONST
173:	-1
174:	STEP_REFCNT
175:	STEP_DROP
176:	STEP_CONST
177:	0
178:	STEP_ALLOC
179:	STEP_OVER
180:	STEP_OVER
181:	STEP_CONST
182:	-1
183:	STEP_ARRAYCAT
184:	STEP_SWAP2
185:	STEP_CONST
186:	-1
187:	STEP_REFCNT
188:	STEP_DROP
189:	STEP_CONST
190:	-1
191:	STEP_REFCNT
192:	STEP_DROP
193:	STEP_CONST
194:	3
195:	STEP_ALLOC
196:	STEP_CONST
197:	1.0
198:	STEP_OVER
199:	STEP_CONST
200:	0
201:	STEP_ADD
202:	STEP_STORE
203:	STEP_CONST
204:	2.5
205:	STEP_MINUS
206:	STEP_OVER
207:	STEP_CONST
208:	1
209:	STEP_ADD
210:	STEP_STORE
211:	STEP_CONST
212:	3
213:	STEP_CAST_FLOAT
214:	STEP_OVER
215:	STEP_CONST
216:	2
217:	STEP_ADD
218:	STEP_STORE
219:	STEP_CONST
220:	0
221:	STEP_ALLOC
222:	STEP_DUP
223:	STEP_CONST
224:	1
225:	STEP_ARRAYCPY
226:	STEP_SWAP
227:	STEP_CONST
228:	-1
229:	STEP_REFCNT
230:	STEP_DROP
231:	STEP_PUSH_FP
232:	STEP_CONST
233:	6
234:	STEP_ADD
235:	STEP_FETCH_STACK
236:	STEP_DUP
237:	STEP_CONST
238:	1
239:	STEP_REFCNT
240:	STEP_DROP
241:	STEP_PUSH_FP
242:	STEP_CONST
243:	1
244:	STEP_ADD
245:	STEP_FETCH_STACK
246:	STEP_DUP
247:	STEP_CONST
248:	1
249:	STEP_REFCNT
250:	STEP_DROP
251:	STEP_OVER
252:	STEP_OVER
253:	STEP_CONST
254:	1
255:	STEP_ARRAYCAT
256:	STEP_SWAP2
257:	STEP_CONST
258:	-1
259:	STEP_REFCNT
260:	STEP_DROP
261:	STEP_CONST
262:	-1
263:	STEP_REFCNT
264:	STEP_DROP
265:	STEP_DUP
266:	STEP_CONST
267:	-1
268:	STEP_ARRAYCPY
269:	STEP_SWAP
270:	STEP_CONST
271:	-1
272:	STEP_REFCNT
273:	STEP_DROP
274:	STEP_PUSH_FP
275:	STEP_CONST
276:	6
277:	STEP_ADD
278:	STEP_FETCH_STACK
279:	STEP_DUP
280:	STEP_CONST
281:	1
282:	STEP_REFCNT
283:	STEP_DROP
284:	STEP_PUSH_FP
285:	STEP_CONST
286:	1
287:	STEP_ADD
288:	STEP_FETCH_STACK
289:	STEP_DUP
290:	STEP_CONST
291:	1
292:	STEP_REFCNT
293:	STEP_DROP
294:	STEP_OVER
295:	STEP_OVER
296:	STEP_CONST
297:	1
298:	STEP_ARRAYCAT
299:	STEP_SWAP2
300:	STEP_CONST
301:	-1
302:	STEP_REFCNT
303:	STEP_DROP
304:	STEP_CONST
305:	-1
306:	STEP_REFCNT
307:	STEP_DROP
308:	STEP_CONST
309:	test 1
310:	STEP_PRINT
311:	STEP_CRLF
312:	STEP_PUSH_FP
313:	STEP_CONST
314:	1
315:	STEP_ADD
316:	STEP_FETCH_STACK
317:	STEP_CONST
318:	1
319:	STEP_ADD
320:	STEP_FETCH
321:	STEP_PRINT
322:	STEP_CRLF
323:	STEP_CONST
324:	test iarray1
325:	STEP_PUSH_FP
326:	STEP_CONST
327:	1
328:	STEP_ADD
329:	STEP_FETCH_STACK
330:	STEP_DUP
331:	STEP_CONST
332:	1
333:	STEP_REFCNT
334:	STEP_DROP
335:	STEP_CONST
336:	0
337:	STEP_PUSH_FP
338:	STEP_CALL_SECONDARY
339:	673
340:	STEP_PRINT
341:	STEP_CRLF
342:	STEP_CONST
343:	test iarray2
344:	STEP_PUSH_FP
345:	STEP_CONST
346:	2
347:	STEP_ADD
348:	STEP_FETCH_STACK
349:	STEP_DUP
350:	STEP_CONST
351:	1
352:	STEP_REFCNT
353:	STEP_DROP
354:	STEP_CONST
355:	0
356:	STEP_PUSH_FP
357:	STEP_CALL_SECONDARY
358:	673
359:	STEP_PRINT
360:	STEP_CRLF
361:	STEP_CONST
362:	test iarray3
363:	STEP_PUSH_FP
364:	STEP_CONST
365:	3
366:	STEP_ADD
367:	STEP_FETCH_STACK
368:	STEP_DUP
369:	STEP_CONST
370:	1
371:	STEP_REFCNT
372:	STEP_DROP
373:	STEP_CONST
374:	0
375:	STEP_PUSH_FP
376:	STEP_CALL_SECONDARY
377:	673
378:	STEP_PRINT
379:	STEP_CRLF
380:	STEP_CONST
381:	test farray1
382:	STEP_PUSH_FP
383:	STEP_CONST
384:	6
385:	STEP_ADD
386:	STEP_FETCH_STACK
387:	STEP_DUP
388:	STEP_CONST
389:	1
390:	STEP_REFCNT
391:	STEP_DROP
392:	STEP_CONST
393:	0
394:	STEP_PUSH_FP
395:	STEP_CALL_SECONDARY
396:	559
397:	STEP_PRINT
398:	STEP_CRLF
399:	STEP_CONST
400:	test farray2
401:	STEP_PUSH_FP
402:	STEP_CONST
403:	7
404:	STEP_ADD
405:	STEP_FETCH_STACK
406:	STEP_DUP
407:	STEP_CONST
408:	1
409:	STEP_REFCNT
410:	STEP_DROP
411:	STEP_CONST
412:	0
413:	STEP_PUSH_FP
414:	STEP_CALL_SECONDARY
415:	559
416:	STEP_PRINT
417:	STEP_CRLF
418:	STEP_CONST
419:	test i farray1
420:	STEP_PUSH_FP
421:	STEP_CONST
422:	6
423:	STEP_ADD
424:	STEP_FETCH_STACK
425:	STEP_DUP
426:	STEP_CONST
427:	1
428:	STEP_REFCNT
429:	STEP_DROP
430:	STEP_DUP
431:	STEP_CONST
432:	-1
433:	STEP_ARRAYCPY
434:	STEP_SWAP
435:	STEP_CONST
436:	-1
437:	STEP_REFCNT
438:	STEP_DROP
439:	STEP_CONST
440:	0
441:	STEP_PUSH_FP
442:	STEP_CALL_SECONDARY
443:	673
444:	STEP_PRINT
445:	STEP_CRLF
446:	STEP_CONST
447:	test i farray2
448:	STEP_PUSH_FP
449:	STEP_CONST
450:	7
451:	STEP_ADD
452:	STEP_FETCH_STACK
453:	STEP_DUP
454:	STEP_CONST
455:	1
456:	STEP_REFCNT
457:	STEP_DROP
458:	STEP_DUP
459:	STEP_CONST
460:	-1
461:	STEP_ARRAYCPY
462:	STEP_SWAP
463:	STEP_CONST
464:	-1
465:	STEP_REFCNT
466:	STEP_DROP
467:	STEP_CONST
468:	0
469:	STEP_PUSH_FP
470:	STEP_CALL_SECONDARY
471:	673
472:	STEP_PRINT
473:	STEP_CRLF
474:	STEP_CONST
475:	test f iarray1
476:	STEP_PUSH_FP
477:	STEP_CONST
478:	1
479:	STEP_ADD
480:	STEP_FETCH_STACK
481:	STEP_DUP
482:	STEP_CONST
483:	1
484:	STEP_REFCNT
485:	STEP_DROP
486:	STEP_DUP
487:	STEP_CONST
488:	1
489:	STEP_ARRAYCPY
490:	STEP_SWAP
491:	STEP_CONST
492:	-1
493:	STEP_REFCNT
494:	STEP_DROP
495:	STEP_CONST
496:	0
497:	STEP_PUSH_FP
498:	STEP_CALL_SECONDARY
499:	559
500:	STEP_PRINT
501:	STEP_CRLF
502:	STEP_CONST
503:	test f iarray2
504:	STEP_PUSH_FP
505:	STEP_CONST
506:	2
507:	STEP_ADD
508:	STEP_FETCH_STACK
509:	STEP_DUP
510:	STEP_CONST
511:	1
512:	STEP_REFCNT
513:	STEP_DROP
514:	STEP_DUP
515:	STEP_CONST
516:	1
517:	STEP_ARRAYCPY
518:	STEP_SWAP
519:	STEP_CONST
520:	-1
521:	STEP_REFCNT
522:	STEP_DROP
523:	STEP_CONST
524:	0
525:	STEP_PUSH_FP
526:	STEP_CALL_SECONDARY
527:	559
528:	STEP_PRINT
529:	STEP_CRLF
530:	STEP_CONST
531:	test f iarray3
532:	STEP_PUSH_FP
533:	STEP_CONST
534:	3
535:	STEP_ADD
536:	STEP_FETCH_STACK
537:	STEP_DUP
538:	STEP_CONST
539:	1
540:	STEP_REFCNT
541:	STEP_DROP
542:	STEP_DUP
543:	STEP_CONST
544:	1
545:	STEP_ARRAYCPY
546:	STEP_SWAP
547:	STEP_CONST
548:	-1
549:	STEP_REFCNT
550:	STEP_DROP
551:	STEP_CONST
552:	0
553:	STEP_PUSH_FP
554:	STEP_CALL_SECONDARY
555:	559
556:	STEP_PRINT
557:	STEP_CRLF
558:	STEP_PAUSE
559*	FUNCTION outer scope::printfarray	***************
559:	STEP_PUSH_FP
560:	STEP_CONST
561:	-2
562:	STEP_ADD
563:	STEP_FETCH_STACK
564:	STEP_CONST
565:	1
566:	STEP_MINUS
567:	STEP_GT
568:	STEP_DUP
569:	STEP_GOTO0
570:	596
571:	STEP_DROP
572:	STEP_PUSH_FP
573:	STEP_CONST
574:	-2
575:	STEP_ADD
576:	STEP_FETCH_STACK
577:	STEP_PUSH_FP
578:	STEP_CONST
579:	-3
580:	STEP_ADD
581:	STEP_FETCH_STACK
582:	STEP_DUP
583:	STEP_CONST
584:	1
585:	STEP_REFCNT
586:	STEP_DROP
587:	STEP_DUP
588:	STEP_SUB1
589:	STEP_FETCH
590:	STEP_SWAP
591:	STEP_CONST
592:	-1
593:	STEP_REFCNT
594:	STEP_DROP
595:	STEP_LT
596:	STEP_GOTO0
597:	647
598:	STEP_PUSH_FP
599:	STEP_CONST
600:	-4
601:	STEP_ADD
602:	STEP_FETCH_STACK
603:	STEP_CONST
604:	 
605:	STEP_ADD
606:	STEP_PUSH_FP
607:	STEP_CONST
608:	-3
609:	STEP_ADD
610:	STEP_FETCH_STACK
611:	STEP_PUSH_FP
612:	STEP_CONST
613:	-2
614:	STEP_ADD
615:	STEP_FETCH_STACK
616:	STEP_ADD
617:	STEP_FETCH
618:	STEP_CAST_STRING
619:	STEP_ADD
620:	STEP_PUSH_FP
621:	STEP_CONST
622:	-3
623:	STEP_ADD
624:	STEP_FETCH_STACK
625:	STEP_DUP
626:	STEP_CONST
627:	1
628:	STEP_REFCNT
629:	STEP_DROP
630:	STEP_PUSH_FP
631:	STEP_CONST
632:	-2
633:	STEP_ADD
634:	STEP_FETCH_STACK
635:	STEP_CONST
636:	1
637:	STEP_ADD
638:	STEP_PUSH_FP
639:	STEP_CONST
640:	-1
641:	STEP_ADD
642:	STEP_FETCH_STACK
643:	STEP_CALL_SECONDARY
644:	559
645:	STEP_GOTO
646:	652
647:	STEP_PUSH_FP
648:	STEP_CONST
649:	-4
650:	STEP_ADD
651:	STEP_FETCH_STACK
652:	STEP_CONST
653:	0
654:	STEP_STORE
655:	STEP_PUSH_FP
656:	STEP_CONST
657:	-3
658:	STEP_ADD
659:	STEP_FETCH_STACK
660:	STEP_CONST
661:	-1
662:	STEP_REFCNT
663:	STEP_DROP
664:	STEP_CONST
665:	-4
666:	STEP_CONST
667:	-1
668:	STEP_DROPFRAME
669:	STEP_CONST
670:	0
671:	STEP_FETCH
672:	STEP_RETURN
673*	FUNCTION outer scope::printiarray	***************
673:	STEP_PUSH_FP
674:	STEP_CONST
675:	-2
676:	STEP_ADD
677:	STEP_FETCH_STACK
678:	STEP_CONST
679:	1
680:	STEP_MINUS
681:	STEP_GT
682:	STEP_DUP
683:	STEP_GOTO0
684:	710
685:	STEP_DROP
686:	STEP_PUSH_FP
687:	STEP_CONST
688:	-2
689:	STEP_ADD
690:	STEP_FETCH_STACK
691:	STEP_PUSH_FP
692:	STEP_CONST
693:	-3
694:	STEP_ADD
695:	STEP_FETCH_STACK
696:	STEP_DUP
697:	STEP_CONST
698:	1
699:	STEP_REFCNT
700:	STEP_DROP
701:	STEP_DUP
702:	STEP_SUB1
703:	STEP_FETCH
704:	STEP_SWAP
705:	STEP_CONST
706:	-1
707:	STEP_REFCNT
708:	STEP_DROP
709:	STEP_LT
710:	STEP_GOTO0
711:	761
712:	STEP_PUSH_FP
713:	STEP_CONST
714:	-4
715:	STEP_ADD
716:	STEP_FETCH_STACK
717:	STEP_CONST
718:	 
719:	STEP_ADD
720:	STEP_PUSH_FP
721:	STEP_CONST
722:	-3
723:	STEP_ADD
724:	STEP_FETCH_STACK
725:	STEP_PUSH_FP
726:	STEP_CONST
727:	-2
728:	STEP_ADD
729:	STEP_FETCH_STACK
730:	STEP_ADD
731:	STEP_FETCH
732:	STEP_CAST_STRING
733:	STEP_ADD
734:	STEP_PUSH_FP
735:	STEP_CONST
736:	-3
737:	STEP_ADD
738:	STEP_FETCH_STACK
739:	STEP_DUP
740:	STEP_CONST
741:	1
742:	STEP_REFCNT
743:	STEP_DROP
744:	STEP_PUSH_FP
745:	STEP_CONST
746:	-2
747:	STEP_ADD
748:	STEP_FETCH_STACK
749:	STEP_CONST
750:	1
751:	STEP_ADD
752:	STEP_PUSH_FP
753:	STEP_CONST
754:	-1
755:	STEP_ADD
756:	STEP_FETCH_STACK
757:	STEP_CALL_SECONDARY
758:	673
759:	STEP_GOTO
760:	766
761:	STEP_PUSH_FP
762:	STEP_CONST
763:	-4
764:	STEP_ADD
765:	STEP_FETCH_STACK
766:	STEP_CONST
767:	0
768:	STEP_STORE
769:	STEP_PUSH_FP
770:	STEP_CONST
771:	-3
772:	STEP_ADD
773:	STEP_FETCH_STACK
774:	STEP_CONST
775:	-1
776:	STEP_REFCNT
777:	STEP_DROP
778:	STEP_CONST
779:	-4
780:	STEP_CONST
781:	-1
782:	STEP_DROPFRAME
783:	STEP_CONST
784:	0
785:	STEP_FETCH
786:	STEP_RETURN
UNINTERPRETED DUMP OF THE ENTIRE DATA_DICTIONARY:
[   'test f iarray3',
    71,
    4,
    9223372036854775807,
    0,
    4,
    7,
    1,
    3,
    1,
    2,
    3,
    7,
    7,
    1,
    3,
    1.0,
    -2.5,
    3.0,
    7,
    7,
    1,
    3,
    1,
    2,
    -3,
    7,
    10,
    1,
    6,
    1,
    2,
    3,
    1,
    2,
    -3,
    10,
    10,
    1,
    6,
    1.0,
    -2.5,
    3.0,
    1.0,
    2.0,
    3.0,
    10,
    5,
    0,
    71,
    None,
    5,
    9,
    1,
    5,
    1,
    2,
    3,
    1,
    1,
    9,
    10,
    1,
    6,
    1,
    -2,
    3,
    1,
    2,
    3,
    10,
    7,
    0,
    None,
    47,
    2.0,
    -3.0,
    7]
DEBUG HEAP: size of data_dictionary = 78.
DEBUG HEAP: free list pointer at location 1 = 71.
DEBUG HEAP @ 2: HDR=4|RFC=9223372036854775807|0|4
FOOTER@5 = 4.
DEBUG HEAP @ 6: HDR=7|RFC=1|3|1
FOOTER@12 = 7.
	[0] = 1
	[1] = 2
	[2] = 3
DEBUG HEAP @ 13: HDR=7|RFC=1|3|1.0
FOOTER@19 = 7.
	[0] = 1.0
	[1] = -2.5
	[2] = 3.0
DEBUG HEAP @ 20: HDR=7|RFC=1|3|1
FOOTER@26 = 7.
	[0] = 1
	[1] = 2
	[2] = -3
DEBUG HEAP @ 27: HDR=10|RFC=1|6|1
FOOTER@36 = 10.
	[0] = 1
	[1] = 2
	[2] = 3
	[3] = 1
	[4] = 2
	[5] = -3
DEBUG HEAP @ 37: HDR=10|RFC=1|6|1.0
FOOTER@46 = 10.
	[0] = 1.0
	[1] = -2.5
	[2] = 3.0
	[3] = 1.0
	[4] = 2.0
	[5] = 3.0
DEBUG HEAP @ 47: HDR=5|RFC=0|71|None
FOOTER@51 = 5.
DEBUG HEAP @ 52: HDR=9|RFC=1|5|1
FOOTER@60 = 9.
	[0] = 1
	[1] = 2
	[2] = 3
	[3] = 1
	[4] = 1
DEBUG HEAP @ 61: HDR=10|RFC=1|6|1
FOOTER@70 = 10.
	[0] = 1
	[1] = -2
	[2] = 3
	[3] = 1
	[4] = 2
	[5] = 3
DEBUG HEAP @ 71: HDR=7|RFC=0|None|47
FOOTER@77 = 7.
DEBUG FREE LIST ENTRY @ 71: HDR=7|RFC=0|None|47.
DEBUG FREE LIST ENTRY @ 47: HDR=5|RFC=0|71|None.
